/*1.3.4.0*/
(function (n, t) { function i(i) { function c() { u.on("click", function () { o ? i.height() == 0 ? (i.height(r.gTab.getHeaderHeight()), f.show(), i.find(".vis-ad-w-p-header-arrow-l").css("padding", ""), u.removeClass("fa-angle-double-down").addClass("fa-angle-double-up").removeClass("vis-ad-w-p-header-v")) : (i.height(0), f.hide(), i.find(".vis-ad-w-p-header-arrow-l").css("padding", "0px"), u.removeClass("fa-angle-double-up").addClass("fa-angle-double-down").addClass("vis-ad-w-p-header-v")) : i.width() == 0 ? (u.removeClass("fa-angle-double-right").addClass("fa-angle-double-left").removeClass("vis-ad-w-p-header-h"), i.width(r.gTab.getHeaderWidth()), i.find(".vis-ad-w-p-header-arrow-l").css("padding", ""), window.setTimeout(function () { f.show() }, 50)) : (i.width(0), f.hide(), i.find(".vis-ad-w-p-header-arrow-l").css("padding", "0px"), u.removeClass("fa-angle-double-left").addClass("fa-angle-double-right").addClass("vis-ad-w-p-header-h")); r.sizeChangedListner && r.sizeChangedListner.onSizeChanged && r.sizeChangedListner.onSizeChanged() }) } var f = null, o = !1, r, u; this.headerItems = null; r = this; this.curTab = null; this.controls = []; this.textAlignEnum = { C: "Center", R: "flex-end", L: "flex-start" }; this.alignItemEnum = { C: "Center", T: "flex-start", B: "flex-end" }; this.windowNo = 0; this.dynamicStyle = []; this.styleTag = document.createElement("style"); u = i.find(".fa-angle-double-left"); i.css("flex-direction", "column"); u.parent().css("display", "flex"); this.setHeaderLayout = function (n, u) { if (n.getIsHeaderPanel() && (r.headerItems = n.getHeaderPanelItems(), r.gTab = n, r.windowNo = r.gTab.getWindowNo(), r.headerItems)) { f = t('<div class="vis-ad-w-p-header_root_common">'); var e = this.headerParentCustomUISettings(u); i.addClass(e) } }; this.setHeaderItems = function (i, u) { var ct, v, it, ft, rt, vt, yt, nt, et, at, ot, pt, f, tt, ui, fi, l, a, d, bt, st, ht; if (this.controls && this.controls.length > 0 && !i && !u) { for (nt = 0; nt < this.controls.length; nt++)if (ct = this.controls[nt], ct) { var tt = ct.control, f = ct.field, o = tt.control; if (f == null && o != null) { o.setValue(null); continue } if (o == null && !f.getIsHeading()) continue; if (a = s(f, o), this.isChild) o instanceof n.Controls.VKeyText && e(a, o, f); else if (o instanceof n.Controls.VButton) a = f.getValue(), e(a, o, f); else if (f.lookup && f.lookup.gethasImageIdentifier()) { a = n.Utility.Util.getIdentifierDisplayVal(a); var ut = ct.img, g = ct.imgspan, c = null, lt = null; f.lookup.displayType == n.DisplayType.List ? (c = f.lookup.getLOVIconElement(f.getValue(), !0, !0), lt = f.lookup.getLOVIconStyle(f.getValue()), v = "", !c && a && (v = a.substring(0, 1)), c ? c.contains("Images/") ? (ut.attr("src", c).attr("style", lt), g.hide(), ut.show()) : (v = c, g.empty(), g.append("<i class='" + v + "' style='" + lt + "'><\/i>"), g.show(), ut.hide()) : (v || (v = ""), g.empty(), g.text(v).attr("style", lt), g.show(), ut.hide())) : (c = h(f), c && !c.contains("Images/") ? (v = c, g.text(v), g.show(), ut.hide()) : (ut.attr("src", c), g.hide(), ut.show())); e(a, o, f) } else e(a, o, f) } } else { if (!i) return; it = this.curTab.gridTable.gridFields; it = t.grep(it, function (n) { if (n.getIsHeaderPanelitem()) return n }); it = it.sort(function (n, t) { return n.getHeaderSeqno() - t.getHeaderSeqno() }); ft = null; for (rt in i.HeaderItems) { var y = i.HeaderItems[rt], gt = y.StartColumn, oi = y.ColumnSpan, ni = y.StartRow, si = y.RowSpan, ti = y.JustifyItems, ii = y.AlignItems, hi = y.Padding, kt = y.BackgroundColor; kt || (kt = ""); vt = y.FontColor; vt || (vt = ""); yt = y.FontSize; yt || (yt = ""); var b = null, k = null, w = null, dt = null, o = null, ri = this.applyCustomUISettings(rt, gt, oi, ni, si, ti, ii, kt, vt, yt, hi); if (b = u.find("." + ri), b.length <= 0 && (b = t('<div class="vis-w-p-header-data-f ' + ri + '">')), !ft) for (ft = {}, it = it.sort(function (n, t) { return n.getHeaderSeqno() - t.getHeaderSeqno() }), nt = 0; nt < it.length; nt++)et = it[nt], et.getIsHeaderPanelitem() && (et.getHeaderSeqno() in ft ? ft[et.getHeaderSeqno()].push(et) : ft[et.getHeaderSeqno()] = [et]); if (at = ft[rt], !at && y.ColSql.length < 0) continue; else if (!at && y.ColSql.length > 0) { if (tt = {}, w = t('<div class="vis-w-p-header-Label-f"><\/div>'), o = new n.Controls.VKeyText(y.ColSql, r.gTab.getWindowNo(), r.gTab.getWindowNo() + "_" + rt, y.IsAlwaysExecute), o == null) continue; tt.control = o; ot = { control: tt, field: null }; w.append(o.getControl()); b.append(w); u.append(b); r.controls.push(ot) } else if (at) for (pt = 0; pt < at.length; pt++)if (f = at[pt], f) { tt = {}; k = t('<div class="vis-w-p-header-icon-f"><\/div>'); w = t('<div class="vis-w-p-header-Label-f"><\/div>'); f.getDisplayType() == n.DisplayType.Image && (w.addClass("vis-w-p-header-Label-center-f"), ui = this.justifyAlignImageItems(rt, ti, ii), w.addClass(ui)); dt = n.VControlFactory.getHeaderLabel(f, !0); o = y.ColSql.length > 0 ? new n.Controls.VKeyText(y.ColSql, r.gTab.getWindowNo(), r.gTab.getWindowNo() + "_" + rt, y.IsAlwaysExecute, f) : n.VControlFactory.getReadOnlyControl(this.curTab, f, !1, !1, !1); f.getDisplayType() == n.DisplayType.Button && o != null && o.addActionListner(this); fi = this.applyCustomUIForFieldValue(rt, gt, ni, f); o.getControl().addClass(fi); tt.control = o; var ot = { control: tt, field: f }, wt = t("<span><\/span>"), ei = n.VControlFactory.getIcon(f); if (o != null) { if (l = null, dt && (l = dt.getControl().addClass("vis-w-p-header-data-label")), a = s(f), p = f.getHeaderStyle(), p && p.length > 0 && (p = p.split("|")), p && p.length > 0) for (d = 0; d < p.length; d++)p[d].indexOf("@img::") > -1 || p[d].indexOf("@span::") > -1 ? (b.append(k), bt = "", p[d].indexOf("@img::") > -1 ? bt = p[d].replace("@img::", "") : p[d].indexOf("@span::") && (bt = p[d].replace("@span::", "")), k.attr("style", bt)) : p[d].indexOf("@value::") > -1 ? b.append(w) : p[d].indexOf("<br>") > -1 ? b.css("flex-direction", "column") : (b.append(k), b.append(w)); else b.append(k), b.append(w); if (st = t("<img>"), ht = t("<span>"), ot.img = st, f.lookup && f.lookup.gethasImageIdentifier()) { ot.imgspan = ht; var c = null, v = null, lt = null, p = null; n.DisplayType.List == f.lookup.displayType ? (c = f.lookup.getLOVIconElement(f.getValue(), !0), lt = f.lookup.getLOVIconStyle(f.getValue()), !c && a && (v = a.substring(0, 1)), c && !c.contains("Images/") ? (v = c, ht.text(v)) : st.attr("src", c)) : (a = n.Utility.Util.getIdentifierDisplayVal(a), c = h(f), c && !c.contains("Images/") ? (v = c, ht.text(v)) : st.attr("src", c)); k.append(ht); k.append(st); f.getHeaderIconOnly() || f.getHeaderHeadingOnly() ? f.getHeaderIconOnly() && f.getHeaderHeadingOnly() ? k.remove() : f.getHeaderIconOnly() ? (v != null ? st.hide() : ht.hide(), l && l.length > 0 && l.remove()) : f.getHeaderHeadingOnly() && (l && l.length > 0 && w.append(l), k.remove()) : (v != null ? st.hide() : ht.hide(), l && l.length > 0 && w.append(l)); w.append(o.getControl()); u.append(b); e(a, o, f) } else wt.addClass("vis-w-p-header-icon-fixed"), ot.imgspan = wt, f.getDisplayType() == n.DisplayType.Button ? k.remove() : f.getHeaderIconOnly() || f.getHeaderHeadingOnly() ? f.getHeaderIconOnly() && f.getHeaderHeadingOnly() ? k.remove() : f.getHeaderIconOnly() ? (k.append(wt.append(ei)), l && l.length > 0 && l.hide()) : f.getHeaderHeadingOnly() && (l && l.length > 0 && w.append(l), k.remove()) : (k.append(wt.append(ei)), l && l.length > 0 && w.append(l)), e(a, o, f); w.append(o.getControl()); u.append(b); r.controls.push(ot) } } } } }; var e = function (t, i, r) { if (t) { if (t.startsWith && t.startsWith("<") && t.endsWith(">") && (t = t.replace("<", "").replace(">", "")), r.getDisplayType() == n.DisplayType.Image) { var u = i.getValue(); i.getControl().show(); u == t && i.refreshImage(t) } else i.format && (t = i.format.GetFormatAmount(i.format.GetFormatedValue(t), "init", n.Env.isDecimalPoint())); i.setValue(n.Utility.decodeText(t), !1) } else r.getDisplayType() == n.DisplayType.Image ? (i.getControl().hide(), i.setValue(null, !1)) : r.getDisplayType() == n.DisplayType.Button && r.getAD_Reference_Value_ID() > 0 ? i.setText("- -") : i.setValue("- -", !0) }, s = function (t) { var i = t.getValue(), r, u; return i ? (r = t.getDisplayType(), t.lookup ? i = t.lookup.getDisplay(i, !0, !0) : n.DisplayType.IsDate(r) ? i = r == n.DisplayType.DateTime ? new Date(i).toLocaleString() : r == n.DisplayType.Date ? new Date(i).toLocaleDateString() : new Date(i).toLocaleTimeString() : r == n.DisplayType.YesNo ? (u = i.toString(), t.getIsEncryptedColumn() && (u = n.secureEngine.decrypt(u)), i = u.equals("true")) : i = i.toString(), t.getIsEncryptedField() && i && i.length > 0 && (i = i.replace(/[a-zA-Z0-9-. ]/g, "*").replace(/[^a-zA-Z0-9-. ]/g, "*")), t.getObscureType() && i && i.length > 0 && (i = n.Env.getObscureValue(t.getObscureType(), i))) : i = null, i }, h = function (t) { var i = t.getValue(), u, f, r; if (i = t.lookup.getDisplay(i, !0, !0), i != null && i && i.indexOf("Images/") > -1) if (u = i.substring(i.indexOf("Images/") + 7, i.lastIndexOf("^^")), u = n.Application.contextUrl + "Images/Thumb140x120/" + u, r == 0 || u.indexOf("nothing.png") > -1) { for (i = i.replace("^^" + i.substring(i.indexOf("Images/"), i.lastIndexOf("^^") + 2), "^^^"), i.indexOf("Images/") > -1 && (i = i.replace(i.substring(i.indexOf("Images/"), i.lastIndexOf("^^") + 2), "^^^")), i = i.split("^^^"), f = "", r = 0; r < i.length; r++)if (i[r].trim().length > 0) return f.length == 0 && (f = i[r].trim().substring(0, 1).toUpper()), f } else return u }; this.getRoot = function () { return f }; this.getParent = function () { return i }; this.hidePanel = function () { return i.hide() }; this.showPanel = function () { return i.show() }; this.alignHorzontal = function () { o = !0; i.removeClass("vis-ad-w-p-header-l").addClass("vis-ad-w-p-header-t"); u.removeClass("fa-angle-double-left").addClass("fa-angle-double-up"); u.parent().css("background-color", "transparent"); i.css("flex-direction", "row") }; c(); this.disposeComponent = function () { u.remove(); u = null; this.styleTag.remove(); this.styleTag = null; this.headerItems = null; r = null; this.curTab = null; this.controls = null; f.remove(); f = null; i.remove(); i = null } } i.prototype.init = function (n) { var r, f, c, o; this.aPanel = n.getAPanel(); this.curTab = n.getMTab(); this.curGC = n; r = this.curTab.getHeaderBackColor(); this.setHeaderLayout(this.curTab, r); var e = this.getRoot(), l = this.getParent(), s = "vis-w-p-Header-Root-v", h = this.curTab.getHeaderHorizontal(), a = this.curTab.getHeaderHeight(), v = this.curTab.getHeaderWidth(), u = this.curTab.getHeaderPadding(), y = this.headerUISettings(h, a, v, "", u); if (e.addClass(y), h && (this.alignHorzontal(), s = "vis-w-p-Header-Root-h"), this.headerItems && !(this.headerItems.length <= 0)) { for (f = 0; f < this.headerItems.length; f++) { var i = this.headerItems[f], p = i.HeaderTotalRow, w = i.HeaderTotalColumn, r = i.HeaderBackColor, u = i.HeaderPadding; (r || (r = ""), u || (u = ""), c = this.fieldGroupContainerUISettings(w, p, r, u, f), o = t('<div class="' + s + " " + c + '">'), e.append(o), !i || !i.HeaderItems || i.HeaderItems.length <= 0) || this.setHeaderItems(i, o) } this.addStyleToDom(); l.append(e) } }; i.prototype.addSizeChangeListner = function (n) { this.sizeChangedListner = n }; i.prototype.fieldGroupContainerUISettings = function (n, t, i, r, u) { var f = "vis-ad-w-p-fg_container_" + t + "_" + n + "_" + this.windowNo + "_" + u; return this.dynamicStyle.push(" ." + f + " {"), this.dynamicStyle.push("grid-template-columns:repeat(" + n + ", 1fr);grid-template-rows:repeat(" + t + ", auto);padding:" + r + ";" + i), this.dynamicStyle.push("} "), f }; i.prototype.addStyleToDom = function () { this.styleTag.type = "text/css"; this.styleTag.innerHTML = this.dynamicStyle.join(" "); t(t("head")[0]).append(this.styleTag) }; i.prototype.headerUISettings = function (n, t, i, r, u) { var f = "vis-ad-w-p-header_root_" + this.windowNo; return this.dynamicStyle.push(" ." + f + " {display:flex;overflow:auto;"), n ? this.dynamicStyle.push("flex:1;flex-direction:row;height: " + t + "; ") : this.dynamicStyle.push("flex-direction:column;width: " + i + ";height:calc(100vh - 94px); "), this.dynamicStyle.push("padding:" + u + ";" + r), this.dynamicStyle.push("} "), f }; i.prototype.headerParentCustomUISettings = function (n) { var t = "vis-ad-w-p-header_Custom_" + this.windowNo; return this.dynamicStyle.push(" ." + t + " {flex:1;"), this.dynamicStyle.push("background: rgba(var(--v-c-primary));"), this.dynamicStyle.push(n), this.dynamicStyle.push("} "), t }; i.prototype.applyCustomUISettings = function (n, t, i, r, u, f, e, o, s, h, c) { var l = "vis-hp-FieldGroup_" + r + "_" + t + "_" + this.windowNo + "_" + n; return this.dynamicStyle.push("." + l + "  {grid-column:" + t + " / span " + i + "; grid-row: " + r + " / span " + u + ";"), this.dynamicStyle.push("justify-content:" + this.textAlignEnum[f] + ";align-items:" + this.alignItemEnum[e]), this.dynamicStyle.push(";font-size:" + h + ";color:" + s + ";padding:" + c + ";"), this.dynamicStyle.push(o), this.dynamicStyle.push("} "), l }; i.prototype.applyCustomUIForFieldValue = function (n, t, i, u) { var f = u.getHeaderStyle(), e = "vis-hp-FieldValue_" + i + "_" + t + "_" + this.windowNo + "_" + n + "_" + u.getAD_Column_ID(); return f && f.toLower().indexOf("@value::") > -1 && (f = r(f, "@value::")), this.dynamicStyle.push("." + e + "  {" + f + "} "), e }; i.prototype.applyCustomUIForFieldImg = function (n, t, i, u) { var f = u.getHeaderStyle(), e = "vis-hp-FieldImgValue_" + i + "_" + t + "_" + this.windowNo + "_" + n; return f && f.toLower().indexOf("@img::") > -1 && (f = r(f, "@img::")), this.dynamicStyle.push("." + e + "  {" + f + "} "), e }; i.prototype.applyCustomUIForFieldSpan = function (n, t, i, u) { var f = u.getHeaderStyle(), e = "vis-hp-FieldImgValue_" + i + "_" + t + "_" + this.windowNo + "_" + n; return f && f.toLower().indexOf("@span::") > -1 && (f = r(f, "@span::")), this.dynamicStyle.push("." + e + "  {" + f + "} "), e }; var r = function (n, t) { var r, i; if (n && n.toLower().indexOf(t) > -1) for (r = n.split("|"), i = 0; i < r.length; i++)if (r[i].toLower().indexOf(t) > -1) return r[i].toLower().replace(t, "").trim() }; i.prototype.justifyAlignImageItems = function (n, t, i) { var r = "vis-w-p-header-label-center-justify_" + n + "_" + this.windowNo; return this.dynamicStyle.push(" ." + r + " {justify-content:" + this.textAlignEnum[t] + ";align-items:" + this.alignItemEnum[i] + "}"), r }; i.prototype.navigate = function (n) { this.isChild = n; this.setHeaderItems(); this.isChild = !1 }; i.prototype.dispose = function () { this.aPanel = null; this.curTab = null; this.curGC = null; this.sizeChangedListner = null; this.disposeComponent() }; i.prototype.actionPerformed = function (n) { if (this.aPanel.curTab.needSave(!0, !1)) { this.aPanel.cmd_save(!0); return } this.aPanel.actionPerformed(n, this) }; i.prototype.cmd_save = function (n, t) { return this.aPanel.cmd_save2(n, this.curTab, this.curGC, this.aPanel, t) }; n.HeaderPanel = i })(VIS, jQuery), function (n, t) { function i(n, i) { function s(t) { e && e.removeClass("vis-ad-w-p-ap-tp-o-li-selected"); e = null; c.empty(); t ? (e = t.addClass("vis-ad-w-p-ap-tp-o-li-selected"), a.text(t.data("name")), f.setCurrentPanel(t.data("cname"), n, t.data("extrainfo"))) : f.setCurrentPanel(null); f.curTabPanel ? (c.append(f.curTabPanel.getRoot()), f.setSize(i)) : f.setSize(35) } var f, e; this.tabPanels = []; var l = document.importNode(r, !0), u = t(l.querySelector(".vis-ad-w-p-ap-tp-outerwrap")), o = u.find(".vis-ad-w-p-ap-tp-o-icorbar ul"), h = u.find(".vis-ad-w-p-ap-tp-o-b-head"), a = u.find(".vis-ad-w-p-ap-tp-o-b-head h6"), v = u.find(".vis-ad-w-p-ap-tp-o-b-head span"), c = u.find(".vis-ad-w-p-ap-tp-o-b-content"); this.isClosed = !0; i <= 50 ? i = i <= 0 ? 75 : 50 : i > 75 && (i = 75); i = 100 - i; i = t(document).width() * i / 100; f = this; e = null; o.on("click", "LI", function (n) { s(t(n.currentTarget)) }); v.on("click", function () { s(null) }); this.getRoot = function () { return u }; this.setPanelList = function (n) { o.append(n); var t = o.find("[default='true']").first(); t && t.length > 0 ? t.trigger("click") : s(null) }; this.setSize = function (n) { if ((this.isClosed || !n || !(n > 40)) && (n && n > 40 ? (u.css("height", n + "px"), u.css("width", n + "px"), this.isClosed = !1, h.show()) : (u.css("height", "35px"), u.css("width", "35px"), this.isClosed = !0, h.hide()), this.sizeChangedListner && this.sizeChangedListner.onSizeChanged)) this.sizeChangedListner.onSizeChanged(n && n > 40) }; this.disposeComponent = function () { u.remove(); e = null; f = null } } var r = document.querySelector("#vis-ad-tabpnltmp").content; i.prototype.init = function (t) { var i, e, u, r, f; if (this.gTab = t, i = this.gTab.getTabPanels(), e = 0, i && i.length > 0) for (u = [], e = i[0].getAD_TabPanel_ID(), r = 0; r < i.length; r++)f = "", f = i[r].getIconPath() ? i[r].getIconPath() : "fa fa-object-group", u.push('<li default="' + i[r].getIsDefault() + '" data-panelid="' + i[r].getAD_TabPanel_ID() + '" data-cname="' + i[r].getClassName() + '" data-name="' + i[r].getName() + '"  data-extrainfo="' + i[r].getExtraInfo() + '" >'), f.indexOf(".") > -1 ? u.push('<img alt = "' + i[r].getName() + '" title = "' + i[r].getName() + '"  src = "' + n.Application.contextUrl + "Areas/" + f + '" onerror=this.src="' + n.Application.contextUrl + 'Areas/VIS/Images/base/defpanel.ico"><\/img >') : u.push('<span> <i title = "' + i[r].getName() + '" class="' + f + '" ><\/i><\/span>'), u.push("<\/li>"), i[r].getIsDefault() && (e = i[r].getAD_TabPanel_ID()); this.setPanelList(u.join(" "), e) }; i.prototype.addSizeChangeListner = function (n) { this.sizeChangedListner = n }; i.prototype.setCurrentPanel = function (t, i, r) { var f, u; this.curTabPanel && (this.curTabPanel.dispose && this.curTabPanel.dispose(), this.curTabPanel = null); t && (f = n.Utility.getFunctionByName(t, window), f && (u = new f, u.startPanel(i, this.gTab, r), this.gTab.getRecord_ID() > -1 && u.refreshPanelData(this.gTab.getRecord_ID(), this.gTab.getTableModel().getRow(this.gTab.getCurrentRow())), this.curTabPanel = u)) }; i.prototype.refreshPanelData = function (n, t) { this.curTabPanel && this.curTabPanel.refreshPanelData(n, t) }; i.prototype.dispose = function () { this.disposeComponent(); this.sizeChnagedListner = null; this.gTab = null; this.curTabPanel && (this.curTabPanel.dispose(), this.curTabPanel = null) }; n.VTabPanel = i }(VIS, jQuery), function (n, t) { function e(n, i, r) { var u = null; return t.ajax({ url: h, type: "POST", datatype: "json", contentType: "application/json; charset=utf-8", async: i, data: JSON.stringify(n) }).done(function (n) { u = n; r && r(n) }), u } function y(i, r, u) { var f = null; return i.sql = n.secureEngine.encrypt(i.sql), t.ajax({ url: l, type: "POST", datatype: "json", contentType: "application/json; charset=utf-8", async: r, data: JSON.stringify(i) }).done(function (n) { f = n; u && u(n) }), f } function i() { function h() { var n = document.importNode(p, !0); i = t(n.querySelector(".vis-ad-w")); u = i.find(".vis-ad-w-body"); e = i.find("h5"); r = i.find(".vis-ad-w-close"); o = i.find(".vis-ad-w-toolbar"); f = i.find(".vis-ad-w-header") } var f, i, u, e, r, o, s; this.name; this.windowNo; this.id; this.img = null; this.cPanel; this.isHeaderVisible = !0; this.onClosed; this.title = "window"; this.closeable = !0; f = null; o = null; this.onLoad = null; h(); this.setTitle = function (n) { this.title = n; e.text(this.title) }; this.setSize = function () { return }; this.hideHeader = function (n) { this.isHeaderVisible = !n; n ? f.hide() : f.show(); this.sizeChanged() }; this.hideCloseIcon = function (n) { n ? (r.hide(), this.closeable = !1) : (r.show(), this.closeable = !0) }; this.isCloseable = function () { return this.closeable }; this.getRootLayout = function () { return i }; this.getContentGrid = function () { return u }; this.setToolbar = function (n) { o.append(n) }; s = this; r.on(n.Events.onTouchStartOrClick, function (n) { n.preventDefault(); n.stopPropagation(); s.dispose() }); this.disposeComponent = function () { s = null; r && r.off(n.Events.onTouchStartOrClick); r = null; i && i.remove(); u && u.remove(); i = u = e = r = null; this.setTitle = null; this.name = null; this.windowNo = null; this.id = null; this.setTitle = null; this.setName = null; this.getRootLayout = null; this.getContentGrid = null; this.onLoad = null } } function r(i) { var u, f, r; i && (this.action, this.toggle, this.enableDisable, this.pressed, this.isEnabled = !0, this.text, this.toolTipText, this.imageOnly, this.textOnly, this.onAction = null, this.isSmall, this.iconName = "", this.direction = "right", t.extend(!0, this, i), this.items = {}, this.$li, this.text || (this.text = n.I18N.getLabel(this.action), this.text.contains("&") && (this.text = this.text.replace("&", "")), this.toolTipText = this.toolTipText ? this.text + n.Msg.getMsg(this.toolTipText) : this.text, this.toolTipText.contains("&") && (this.toolTipText = this.text + this.toolTipText.replace("&", ""))), u = "", f = "", this.isSmall ? (u = this.iconName != "" ? this.iconName.toLowerCase() : this.action.toLowerCase(), (this.toggle || this.enableDisable) && (f = u + "x")) : (u = this.iconName != "" ? this.iconName.toLowerCase() : this.action.toLowerCase(), (this.toggle || this.enableDisable) && (f = u + "x")), this.imgUrl = "vis-" + u, this.imgUrlX = "vis-" + f); r = this; this.getListItm = function (i) { var u = t("<li>"), f = t("<div><\/div>"), e = !0, o = !1; if (this.action == "Save") u.on("mousedown touchstrat", function () { o = !0; window.setTimeout(function () { o && u.trigger("click") }, 1e3) }); u.on(n.Events.onClick, function (n) { o = !1; n.stopPropagation(); e && r.onAction && r.isEnabled && (r.toggle && r.setPressed(!r.pressed), e = !1, f.css("background-color", "red"), setTimeout(function () { f.css("background-color", "transparent"); r.onAction(r.action); e = !0 }, 10)) }); return this.textOnly ? u.append(t("<h5>").text(this.text)) : this.imageOnly ? (this.img = t('<i class="vis ' + this.imgUrl + '" title = "' + this.toolTipText + '"})>'), u.append(f), f.append(this.img)) : (this.direction == "r" ? u.append("<span>" + this.text + '<\/span> <i class="vis ' + this.imgUrl + '" title="' + this.toolTipText + '" ><\/i>') : u.append('<i class="vis ' + this.imgUrl + '" title="' + this.toolTipText + '"><\/i><span>' + this.text + "<\/span>"), this.img = u.find("i")), this.$li = u, u.popover, i && (this.items[i] = u), this.$li }; this.getListItmIT = function (i) { if (this.$li) return this.$li; var u = t("<li>"), f = t("<div><\/div>"), e = !0; u.on(n.Events.onClick, function (n) { n.stopPropagation(); e && r.onAction && r.isEnabled && (r.toggle && r.setPressed(!r.pressed), e = !1, f.css("background-color", "red"), setTimeout(function () { f.css("background-color", "transparent"); r.onAction(r.action); e = !0 }, 10)) }); return this.textOnly ? u.text(this.text) : this.imageOnly ? (this.img = t('<i class="vis ' + this.imgUrl + '" title = "' + this.toolTipText + '"})>'), u.append(f), f.append(this.img)) : (this.direction == "r" ? u.append("<span>" + this.text + '<\/span> <i class="vis ' + this.imgUrl + '" title="' + this.toolTipText + '" ><\/i>') : u.append('<i class="vis ' + this.imgUrl + '" title="' + this.toolTipText + '" ><\/i><span>' + this.text + "<\/span>"), this.img = u.find("i")), this.$li = u, i && (this.items[i] = u), this.$li }; this.disposeComponent = function () { r = null; this.getListItm = null; this.getListItmIT = null } } function u(i) { var l = document.importNode(o, !0), u = t(l.querySelector(".vis-ad-w-p-s-main")), h, c, f; this.$statusLine = u.find(".vis-ad-w-p-s-msg").find("span"); this.$statusDB = u.find(".vis-ad-w-p-s-statusdb"); this.$infoLine = u.find(".vis-ad-w-p-s-infoline"); var s = u.find(".vis-ad-w-p-s-result").find("span"), r = t("<select class='vis-statusbar-combo'>"), e = u.find(".vis-ad-w-p-s-plst"); this.text = ""; this.dse; this.merror; this.mtext; h = n.Msg.getMsg("ShowingResult"); c = n.Msg.getMsg("of"); this.onComboChange; i || this.$infoLine.hide(); this.getRoot = function () { return u }; this.render = function () { }; this.setPageItem = function (n) { e.append(n) }; this.setComboPage = function () { e.append(t("<li>").append(r)) }; this.setPageLine = function (n) { var v, o, y, t; if (n != null) { var i = n.getCurrentPage(), l = n.getTotalPage(), a = n.getPageSize(), u = n.getTotalRecords(), f = (i - 1) * a, e = f + a; if (e > u && (e = u), u == 0 && (f -= 1), v = h + " " + (f + 1) + "-" + e + " " + c + " " + n.getTotalRecords(), s.text(v), l != r[0].options.length) { for (o = [], y = -1, t = 0; t < l; t++)o[t] = "<option>" + (t + 1) + "<\/option>"; r.empty(); r.html(o.join("")) } r[0].selectedIndex != i - 1 && (r[0].selectedIndex = i - 1) } }; this.setComboCallback = function (n) { selectionCallback = n }; f = this; r.on("change", function (n) { if (n.stopPropagation(), f.onComboChange) f.onComboChange(this.selectedIndex) }); this.$statusDB.on("click", function () { var t = n.Msg.getMsg("Who") + f.text, i = new n.RecordInfo(t, f.dse); i.show() }); this.disposeComponent = function () { f = null; u.remove(); r1Col1 = null; r2Col1 = null; u = null; this.getRoot = null; this.onComboChange = null; e.remove(); e = null; s = null; this.$statusLine = null; this.$statusDB = null; $seprator = null; this.disposeComponent = null; this.setPageItem = null; this.getRoot = null; this.render = null; this.setPageLine = null; this.$infoLine = null; this.text = null; this.dse = null; this.merror = null; this.mtext = null; r.empty(); r.remove(); r = null } } var s = 0, w = n.Logging.Level, f = n.Application.contextUrl, h = f + "JsonData/JDataSetWithCode", c = f + "JsonData/ExecuteNonQuer", l = f + "Form/JDataSet", a = function (t, i, r) { var o = r ? !0 : !1, f = { sql: t, page: 1, pageSize: 0 }, u; return i && (f.param = i), u = null, e(f, o, function (t) { u = (new n.DB.DataReader).toJson(t); r && r(u) }), u }, b = function (t, i, r) { var o = r ? !0 : !1, f = { sql: t, page: 1, pageSize: 0 }, u; return i && (f.param = i), u = null, e(f, o, function (t) { u = (new n.DB.DataSet).toJson(t); r && r(u) }), u }, k = function (t, i, r) { var f = r ? !0 : !1, o = { sql: t, page: 1, pageSize: 0 }, u; return i && (o.param = i), u = null, e(o, f, function (t) { i = (new n.DB.DataSet).toJson(t); var i = (new n.DB.DataSet).toJson(t); u = i.getTable(0).getRows().length > 0 ? i.getTable(0).getRow(0).getCell(0) : null; i.dispose(); i = null; f && r(u) }), u }, d = function (n, i, r) { var f = r ? !0 : !1, u = null, e = { sql: n.join("/"), param: i }; return t.ajax({ url: c + "ies", type: "POST", datatype: "json", contentType: "application/json; charset=utf-8", async: f, data: JSON.stringify(e) }).done(function (n) { u = n; r && r(n) }), u }, v = function (t, i, r) { var e = r ? !0 : !1, f = { sql: t, page: 1, pageSize: 0 }, u; return i && (f.param = i), u = null, y(f, e, function (t) { u = (new n.DB.DataReader).toJson(t); r && r(u) }), u }, p = document.querySelector("#vis-ad-windowtmp").content, o; i.prototype.setName = function (n) { this.name = n }; i.prototype.getName = function () { return this.name }; i.prototype.sizeChanged = function (t, i) { t || (t = n.Env.getScreenHeight()); i || (i = window.innerWidth); var r = this.isHeaderVisible ? 85 : 43; try { this.cPanel.sizeChanged(t - r, i) } catch (u) { console.log("size changed error") } }; i.prototype.refresh = function () { return this.cPanel.refresh(), this }; i.prototype.keyDown = function (n) { return this.cPanel.keyDown && this.cPanel.keyDown(n), this }; i.prototype.navigateThroghtShortcut = function (n) { var i = t(document.activeElement), r; return i && i.length > 0 ? (i.trigger("change"), r = this, window.setTimeout(function () { r.cPanel.navigateThroghtShortcut && r.cPanel.navigateThroghtShortcut(n) }, 200)) : this.cPanel.navigateThroghtShortcut && this.cPanel.navigateThroghtShortcut(n), this }; i.prototype.initWindow = function (i, r, u, f, e) { var s, o; return this.cPanel = new n.APanel, this.getContentGrid().css("display", "flex"), s = n.Env.getWindowNo(), this.id = s + "_" + i, this.hid = f + "=" + i, o = this, this.hideHeader(!0), n.AEnv.getGridWindow(s, i, function (i) { var c, f, h; if (i.error != null) { n.ADialog.error(i.error); o.dispose(); o = null; return } c = t.parseJSON(i.result); n.context.setContextOfWindow(t.parseJSON(i.wCtx), s); o.cPanel.initPanel(c, r, o, !1, e); o.sizeChanged(); o.cPanel.createSearchAutoComplete(); o.cPanel.selectFirstTab(r != null); n.MLookupCache.initWindowLookup(s); f = o.cPanel.gridWindow; h = null; h = f.getFontName() != "" ? f.getFontName() : f.getImageUrl() != "" ? n.Application.contextUrl + "Images/Thumb16x16/" + f.getImageUrl() : "fa fa-window-maximize"; o.img = h; u && u(o.id, h, o.name, o.hid); o.onLoad && o.onLoad(); c = null; o = null }), this.AD_Window_ID = i, this.windowNo = s, this.getRootLayout().id = this.id, this.getRootLayout().attr("id", "AS_" + this.id), this.getContentGrid().append(this.cPanel.getRoot()), !0 }; i.prototype.setCFrameContent = function (n, t) { this.cPanel = n; this.windowNo = t; this.id = this.windowNo + "_CFrame"; this.getRootLayout().id = this.id; this.getRootLayout().attr("id", "AS_" + this.id); this.getContentGrid().append(this.cPanel.getRoot()) }; i.prototype.initForm = function (i, r, u, f) { var o, e; return this.cPanel = new n.AForm(n.Env.getScreenHeight() - 85), o = n.Env.getWindowNo(), this.id = o + "_" + i, this.hid = u + "=" + i, e = this, n.dataContext.getFormDataString({ AD_Form_ID: i }, function (i) { var u, s; if (i.error != null) { n.ADialog.error(i.error); e.dispose(); e = null; return } if (u = t.parseJSON(i.result), u.IsError) { n.ADialog.error(u.Message); e.dispose(); e = null; return } if (e.setTitle(u.DisplayName), e.setName(u.DisplayName), !e.cPanel.openForm(u, e, o, f)) { e.dispose(); e = null; return } e.sizeChanged(); s = "fa fa-list-alt"; e.img = s; r && r(e.id, s, e.name, e.hid); u = null; e = null }), this.windowNo = o, this.getRootLayout().id = this.id, this.getRootLayout().attr("id", "AS_" + this.id), this.getContentGrid().append(this.cPanel.getRoot()), !0 }; i.prototype.initProcess = function (i, r, u, f, e) { var h, o; return this.cPanel = new n.AProcess(i, n.Env.getScreenHeight() - s, f, e), h = n.Env.getWindowNo(), this.id = h + "_" + i, this.hid = u + "=" + i, o = this, this.hideHeader(!0), n.dataContext.getProcessDataString({ AD_Process_ID: i }, function (f) { var e, s; if (f.error != null) { n.ADialog.error(f.error); o.dispose(); o = null; return } if (e = t.parseJSON(f.result), e.IsError) { n.ADialog.error(e.Message); o.dispose(); o = null; return } if (o.setTitle(""), o.setName(e.Name), e.AD_Process_ID = i, o.cPanel.setActionOrigin(n.ProcessCtl.prototype.ORIGIN_MENU), !o.cPanel.init(e, o, h)) { o.dispose(); o = null; return } o.sizeChanged(); s = null; s = e.FontName != "" ? e.FontName : e.ImageUrl != "" ? n.Application.contextUrl + "Images/Thumb16x16/" + e.ImageUrl : u == "P" ? "fa fa-cog" : "vis vis-report"; o.img = s; r && r(o.id, s, o.name, o.hid); e = null; o = null }), this.windowNo = h, this.getRootLayout().id = this.id, this.getRootLayout().attr("id", "AS_" + this.id), this.getContentGrid().append(this.cPanel.getRoot()), !0 }; i.prototype.refreshProcess = function (n, t, i, r, u) { return this.cPanel && (this.cPanel.disposeComponent(), this.cPanel = null), r = !0, this.initProcess(n, t, i, r, u), u.disposeComponent && (u.getParameterContainer().empty().append(this.cPanel.getParametersContainer()), this.cPanel.getContentTable().css("height", u.getContentContainer().height()), u.getContentContainer().empty().append(this.cPanel.getContentTable()).append(this.cPanel.getBusyIndicator()).css("position", "relative"), u.getToolbarContainer().empty().append(this.cPanel.getToolbar())), this.cPanel }; i.prototype.getProcessPanel = function () { return this.cPanel }; i.prototype.getTitile = function () { return this.title }; i.prototype.getAD_Window_ID = function () { return this.AD_Window_ID }; i.prototype.show = function (n, t) { return n.append(this.getRootLayout()), t && t(this.id, null, this.name, this.hid), !0 }; i.prototype.refreshData = function () { this.cPanel.refreshData() }; i.prototype.getId = function () { return this.id }; i.prototype.getWindowNo = function () { return this.windowNo }; i.prototype.dispose = function () { if (this.closeable) return this.onClosed && !this.onClosed(this.id, this.$layout, this.hid, this.AD_Window_ID) ? void 0 : (this.onClosed = null, this.cPanel && this.cPanel.dispose(), this.cPanel = null, this.children = null, this.disposeComponent(), !0) }; r.prototype.setPressed = function (n) { this.toggle && this.pressed != n && (this.pressed = n, this.img && this.toggle && (n ? (this.img.removeClass(this.imgUrl), this.img.addClass(this.imgUrlX)) : (this.img.removeClass(this.imgUrlX), this.img.addClass(this.imgUrl)))) }; r.prototype.setTextDirection = function (n) { this.direction = n }; r.prototype.getIsPressed = function () { return this.pressed }; r.prototype.getAction = function () { return this.action }; r.prototype.getPath = function () { return n.Application.contextUrl + "Areas/VIS/Images/base/" }; r.prototype.getSeprator = function (n, t) { var i = this.getPath(); return (i += n ? "seprator16.png" : "seprator24.png", t) ? "<li>|<\/li>" : '<li><img src="' + i + '"><\/li>' }; r.prototype.setEnabled = function (n) { this.isEnabled = n; this.$li && this.$li.css("opacity", n ? 1 : .6); this.img && this.img.prop("disabled", !n).css("opacity", n ? 1 : .6) }; r.prototype.highlightNewButton = function (t) { if (t) { if (this.$li.instructionPopRemoved) return; this.windowContainer || (this.windowContainer = this.$li.closest(".vis-ad-w-p")); this.windowContainer.find(".vis-window-instruc-overlay-new").length <= 0 && (this.windowContainer.prepend('<div class="vis-window-instruc-overlay-new"><div class="vis-window-instruc-overlay-new-inn"><p>' + n.Msg.getMsg("CreateNewRec") + "<\/p><\/div><\/div>"), this.$li.addClass("vis-window-instruc-overlay-new-li")) } else this.windowContainer || (this.windowContainer = this.$li.closest(".vis-ad-w-p")), this.windowContainer.find(".vis-window-instruc-overlay-new").remove(), this.windowContainer.find(".vis-window-instruc-overlay-new-inn").remove(), this.$li.removeClass("vis-window-instruc-overlay-new-li"), this.$li.instructionPopRemoved = !0 }; r.prototype.show = function () { this.$li && this.$li.show(); this.img && this.img.show() }; r.prototype.hide = function () { this.$li && this.$li.hide(); this.img && this.img.hide() }; r.prototype.getItem = function () { return this.$li }; r.prototype.getIsEnabled = function () { return this.isEnabled }; r.prototype.dispose = function (t) { if (this.action = this.toggle = this.pressed = this.isEnabled = this.text = this.toolTipText = this.imageOnly = null, this.textOnly = this.onAction = this.isSmall = null, this.$li && (this.$li.off(n.Events.onClick), this.$li.remove(), this.$li = null), this.img && (this.img = null), t && t in this.items) { var i = this.items[t]; i && (i.off(n.Events.onClick), i.remove(), i = null); delete this.items[t] } this.disposeComponent() }; r.prototype.setIsRo; o = document.querySelector("#vis-ad-statusbartmp").content; u.prototype.setStatusDB = function (n, t) { n == null || n.length == 0 ? this.$statusDB.text("") : this.$statusDB.text(n); this.text = n; this.dse = t; this.setPageLine(t) }; u.prototype.setStatusLine = function (n, t) { this.merror = t; this.mtext = n; this.$statusLine.text(n) }; u.prototype.setInfo = function (n) { this.$infoLine.is(":visible") || this.$infoLine.show(); this.$infoLine.text(n) }; u.prototype.dispose = function () { this.disposeComponent() }; n.AParentDetail = function (i, r) { function y() { f = t("<div class='vis-apanel-bar'>"); c = t("<div class='vis-apanel-bar-fixpart' style='background-color:white'>"); o = t("<div class='vis-apanel-bar-varpart vis-apanel-bar-pdetail'>"); e = t('<div class="vis-apanel-lb-main">'); s = t("<div class='vis-apanel-lb-oflow' style='border-left: 1px solid white;'>").hide(); s.html("<a data-dir='u' href='javascript:void(0)'><img style='margin-left:10px' data-dir='u' src='" + n.Application.contextUrl + "Areas/VIS/Images/base/arrow-top.png' ><\/a><a data-dir='d' href='javascript:void(0)' ><img style='margin-left:10px' data-dir='d' src='" + n.Application.contextUrl + "Areas/VIS/Images/base/arrow-bottom.png' /><\/a>"); o.append(e).append(s); h = t("<div style='width:192px;overflow-y:auto;padding-left: 4px;padding-right:3px;'>"); e.append(h); f.append(o).append(c); r.append(f); f.hide() } function a() { for (var r = null, c = "", t = "", o, s, e = 0; e < v; e++)(r = l[e], t = null, t = r.getValue(), t && t != "" && r.getIsDisplayed()) && (c += "<h3>" + w2utils.encodeTags(r.getHeader()) + "<\/h3>", o = r.getDisplayType(), r.lookup ? t = r.lookup.getDisplay(t, !0) : n.DisplayType.IsDate(o) ? t = new Date(t).toLocaleString() : o == n.DisplayType.YesNo ? (s = t.toString(), r.getIsEncryptedColumn() && (s = n.secureEngine.decrypt(s)), t = s.equals("Y")) : t = t.toString(), r.getIsEncryptedColumn() && o != n.DisplayType.YesNo && (t = n.secureEngine.decrypt(t)), c += "<h5>" + w2utils.encodeTags(t) + "<\/h5>"); h.empty(); h.html("<h1>" + i.getMTab().getName() + "<\/h1>" + c); u.setSize(f.height()) } function p() { u.curGC && (u.curGC.multiRowResize(), u.curGC.aPanel.setWidth(-1, !0), u.curGC.aPanel.setTabNavigation()) } function w() { a(); u.curGC && (u.curGC.multiRowResize(), u.curGC.aPanel.setWidth(-1, !0), u.curGC.aPanel.setTabNavigation()) } var u; this.gc = i; this.$root = r; this.visible = !1; this.expaned = !1; this.curGC = null; var l = i.getMTab().getTableModel().getFields(), v = l.length, c, o, f = null, e, s, h; y(); u = this; c.on(n.Events.onTouchStartOrClick, function (n) { u.$root.width() > 20 ? u.hide() : u.show(); n.stopPropagation() }); s.on("click", function (n) { var r, o; if (n.stopPropagation(), r = t(n.target).data("dir"), r) { var s = e.height(), c = h.height(), u = e.scrollTop(), f = Math.ceil(s / 2), i = 0; if (r == "d") { if (u + f >= c - f) return; o = c - s; i = u + f; e.animate({ scrollTop: i > o ? o : i }, 1e3, "easeOutBounce") } else if (r == "u") { if (u == 0) return; i = u - f; e.animate({ scrollTop: i < 0 ? 0 : i }, 1e3, "easeOutBounce") } } }); this.show = function () { if (u.expaned) { a(); return } this.expaned = !0; u.visible && f.show(); r.animate({ width: "200px" }, 300, "swing"); o.show().animate({ width: "192px" }, 300, "swing", w) }; this.hide = function () { (this.expaned || !this.visible) && (this.expaned = !1, r.animate({ width: u.visible ? "8px" : "0px" }, 300, "swing"), u.visible || f.hide(), o.hide().animate({ width: "0px" }, 300, "swing", p)) }; this.setSize = function (t) { f.height(t); e.height(t); h.height() > e.height() && (n.Application.isMobile || (e.height(t - 40), s.show())) }; this.disposeComponenet = function () { this.gc = null; this.$root = null; this.visible = null; this.expaned = null; s.off("click"); c.off(n.Events.onTouchStartOrClick); c = o = null; f.remove(); f = null; u = null; this.curGC = null; l.length = 0; l = null; this.show = null; this.hide = null } }; n.AParentDetail.prototype.evaluate = function (n) { if (this.curGC = null, this.curGC = n, this.gc.getId() === n.getId()) this.visible = !1, this.hide(); else { if (this.curGC.isParentDetailVisible = !0, this.visible) return; this.visible = !0; this.show() } }; n.AParentDetail.prototype.dispose = function () { this.disposeComponenet() }; n.VSortTab = function (i, r, u, f, e, o) { function g() { var i, r, u; w = t("<span>").text(n.Msg.getMsg("N")); b = t("<span>").text(n.Msg.getMsg("Y")); h = t("<ul class='vis-sortTab-select' " + (e ? " disabled" : "") + ">"); s = t("<ul class='vis-sortTab-select' " + (e ? " disabled" : "") + " >"); v = t("<button" + (e ? " disabled" : "") + " ><i class='fa fa-arrow-left'><\/i><\/button"); a = t("<button" + (e ? " disabled" : "") + " ><i class='fa fa-arrow-right'><\/i><\/button"); y = t("<button" + (e ? " disabled" : "") + " ><i class='fa fa-arrow-up'><\/i><\/button"); p = t("<button" + (e ? " disabled" : "") + " ><i class='fa fa-arrow-down'><\/i><\/button"); l = t("<table class='vis-apanel-sorttab' style='display:none;'>"); i = t("<td class='vis-apanel-sorttab-td'>"); r = t('<div class="vis-apanel-sorttab-cont">'); r.append(h).append(t("<div class='vis-apanel-sorttab-td-right'>").append(a).append(v)); i.append(t("<div class='vis-apanel-sorttab-td-inner'>").append(w).append(r)); u = t('<div class="vis-apanel-sorttab-cont">'); u.append(s).append(t("<div class='vis-apanel-sorttab-td-right'>").append(y).append(p)); i.append(t("<div class='vis-apanel-sorttab-td-inner'>").append(b).append(u)); l.append(t("<tr>").append(i)) } var l, w, b, h, s, a, v, y, p, d, k, c; this.winNumber = i; this.tableName = null; this.columnSortName = null; this.columnYesNoName = null; this.keyColumnName = null; this.identifierColumnName = null; this.identifierTranslated = !1; this.parentColumnName = null; this.aPanel = null; this.log = n.Logging.VLogger.getVLogger("VSortTab"); d = n.Application.contextUrl + "Areas/VIS/Images/base/"; k = null; g(); this.dynInit(r, u, f); this.getRoot = function () { return l }; this.getId = function () { return o }; this.getlstModel = function (n) { return n ? s.find("li") : h.find("li") }; this.setLabelName = function (n, t) { w.text(n); b.text(t) }; this.setListOptions = function (n, t) { h.empty(); h.append(n); s.empty(); s.append(t) }; this.setOldValues = function (n) { k = n }; this.getOldValues = function () { return k }; c = this; v.on(n.Events.onTouchStartOrClick, function (n) { c.btn_Click("Left"); n.stopPropagation() }); a.on(n.Events.onTouchStartOrClick, function (n) { c.btn_Click("Right"); n.stopPropagation() }); y.on(n.Events.onTouchStartOrClick, function (n) { c.btn_Click("Up"); n.stopPropagation() }); p.on(n.Events.onTouchStartOrClick, function (n) { c.btn_Click("Down"); n.stopPropagation() }); h.on(n.Events.onClick, "LI", function () { t(this).toggleClass("vis-apanel-sorttab-selected") }); s.on(n.Events.onClick, "LI", function () { t(this).toggleClass("vis-apanel-sorttab-selected") }); this.btn_Click = function (n) { var e = !1, i = null, u, f, c, r, o; if (n == "Right") { for (i = h.find("li.vis-apanel-sorttab-selected"), s.children().removeClass("vis-apanel-sorttab-selected"), u = 0; u < i.length; u++)i[u].remove(), t(i[u]).toggleClass("vis-apanel-sorttab-selected"), s.append(i[u]), e = !0; i.length = 0; i = 0 } else if (n == "Left") { for (i = s.find("li.vis-apanel-sorttab-selected"), h.children().removeClass("vis-apanel-sorttab-selected"), f = 0; f < i.length; f++)i[f].remove(), t(i[f]).toggleClass("vis-apanel-sorttab-selected"), h.append(i[f]), e = !0; i.length = 0; i = 0 } else { if (i = s.find("li.vis-apanel-sorttab-selected"), i == null) return; if (c = i.length, c == 0) return; if (r = t(i[0]), r == null) return; if (s.children().removeClass("vis-apanel-sorttab-selected"), r.addClass("vis-apanel-sorttab-selected"), o = r.index(), n == "Up") { if (o == 0) return; r.remove(); r.insertBefore(s.find("li").eq(o - 1)); e = !0 } else if (n == "Down") { if (o >= s.children().length - 1) return; r.remove(); r.insertAfter(s.find("li").eq(o)); e = !0 } } e && this.notifyFireChanged(!0) }; this.disposeComponent = function () { v.off(n.Events.onTouchStartOrClick); a.off(n.Events.onTouchStartOrClick); y.off(n.Events.onTouchStartOrClick); p.off(n.Events.onTouchStartOrClick); this.seletedTab = null; l.remove(); l = null; c = null; this.winNumber = null; this.tableName = null; this.columnSortName = null; this.columnYesNoName = null; this.keyColumnName = null; this.identifierColumnName = null; this.identifierTranslated = !1; this.parentColumnName = null; this.aPanel = null; this.log = null; h = null; s = null; y = p = v = a = null; this.btn_Click = this.setListOptions = this.getlstModel = this.setLabelName = this.setListOptions = this.getRoot = this.getId = null; console.log("dispose vSortTab") } }; n.VSortTab.prototype.notifyFireChanged = function (n) { this.aContentPane ? this.aContentPane.aSave.setEnabled(n) : this.aPanel && this.aPanel.aSave.setEnabled(n) }; n.VSortTab.prototype.dynInit = function (t, i, r) { var e = !n.Env.isBaseLanguage(n.Env.getCtx(), ""), o = "VIS_122", f = [], u, s; f[0] = new n.DB.SqlParam("@AD_Table_ID", t); f[1] = new n.DB.SqlParam("@AD_ColumnSortOrder_ID", i); f[2] = new n.DB.SqlParam("@AD_ColumnSortYesNo_ID", r); e && (o = "VIS_123", f = [], f[0] = new n.DB.SqlParam("@AD_Table_ID", t), f[1] = new n.DB.SqlParam("@AD_ColumnSortOrder_ID", i), f[2] = new n.DB.SqlParam("@AD_ColumnSortYesNo_ID", r), f[3] = new n.DB.SqlParam("@AD_Language", n.Env.getAD_Language(n.Env.getCtx()))); u = this; s = ""; a(o, f, function (t) { if (t != null) { for (var f = ""; t.read();)u.tableName = t.getString(0), i == t.get(1) ? (u.columnSortName = t.getString(2), f = t.getString(3)) : r == t.get(1) ? u.columnYesNoName = t.getString(2) : t.getString(4) == "Y" ? u.parentColumnName = t.getString(2) : t.getString(5) == "Y" ? u.keyColumnName = t.getString(2) : t.getString(6) == "Y" && (u.identifierColumnName = t.getString(2), e && (u.identifierTranslated = "Y" == t.getString(7))); t.close(); u.setLabelName(n.Msg.getMsg("Available"), f) } u = null }) }; n.VSortTab.prototype.setVisible = function (n) { n ? this.getRoot().show() : this.getRoot().hide() }; n.VSortTab.prototype.loadData = function () { var t = "", e; t += "SELECT t." + this.keyColumnName; t += this.identifierTranslated ? ",tt." : ",t."; t += this.identifierColumnName + ",t." + this.columnSortName; this.columnYesNoName != null && (t += ",t." + this.columnYesNoName); t += " FROM " + this.tableName + " t"; this.identifierTranslated && (t += ", " + this.tableName + "_Trl tt"); t += " WHERE t." + this.parentColumnName + "=@ID"; this.identifierTranslated && (t += " AND t." + this.keyColumnName + "=tt." + this.keyColumnName + " AND tt.AD_Language='" + n.context.getAD_Language() + "'"); t += " ORDER BY "; this.columnYesNoName != null && (t += "4 DESC,"); t += "3,2"; var c = n.Env.getCtx().getWindowContext(this.winNumber, this.parentColumnName), i = v(t, [new n.DB.SqlParam("@ID", c)]), o = "", s = "", r = []; try { while (i.read()) { var u = i.get(0), l = i.getString(1), f = i.get(2), h = f != 0; this.columnYesNoName != null && (h = i.getString(3) == "Y"); e = "<li data-value='" + u + "'>" + l + "<\/li>"; h ? (o += e, r.push({ key: u, value: f })) : (s += e, r.push({ key: u, value: f })) } i.close(); i.dispose(); this.setOldValues(r); this.setListOptions(s, o) } catch (a) { this.log.log(n.Logging.Level.SEVERE, t, a) } this.notifyFireChanged(!1) }; n.VSortTab.prototype.getIsEnabled = function () { var n = !1; return this.aContentPane ? n = this.aContentPane.aSave.getIsEnabled() : this.aPanel && (n = this.aPanel.aSave.getIsEnabled()), n }; n.VSortTab.prototype.saveData = function () { var u; if (this.getIsEnabled()) { var f = this.getlstModel(), e = this, o = this.tableName, s = this.columnSortName, h = this.columnYesNoName, c = this.keyColumnName, i = [], r = []; f.each(function (n, u) { i.push(t(u).data("value")); r.push("N") }); u = this.getlstModel(!0); u.each(function (n, u) { i.push(t(u).data("value")); r.push("Y") }); t.ajax({ url: n.Application.contextUrl + "Form/SetFieldsSorting", async: !1, type: "POST", data: { values: JSON.stringify(i), noYes: JSON.stringify(r), tableName: o, keyColumnName: c, columnSortName: s, columnYesNoName: h, oldValues: JSON.stringify(e.getOldValues()) }, success: function () { }, error: function () { } }) } }; n.VSortTab.prototype.unRegisterAPanel = function () { this.saveData(); this.aPanel = null }; n.VSortTab.prototype.registerAPanel = function (n) { this.aPanel = n }; n.VSortTab.prototype.addSubTabDataStatusListner = function (n) { this.aContentPane = n }; n.VSortTab.prototype.removeSubTabDataStatusListner = function () { this.aContentPane = null }; n.VSortTab.prototype.sizeChanged = function (n) { this.getRoot().height(n) }; n.VSortTab.prototype.dispose = function () { this.disposeComponent() }; n.RecordInfo = function (i, r) { function c() { e = null; s = null; f.remove(); f = null } var e = null, o = i, s = n.Logging.VLogger.getVLogger("VIS.RecordInfo"), f = t("<div style='min-width:550px;max-width:600px'>"), u = null, h = { CreatedBy: r.CreatedBy, Created: r.Created, Updated: r.Updated, UpdatedBy: r.UpdatedBy, Info: r.Info, AD_Table_ID: r.AD_Table_ID, Record_ID: r.Record_ID }; n.dataContext.getJSONData(n.Application.contextUrl + "JsonData/GetRecordInfo", { dse: h }, function (n) { var s, h, u, c, o; if (f.html("<span>" + n.Info + "<\/span>"), n.ShowGrid) { s = t("<table class='vis-advancedSearchTable'>"); h = t("<div class='vis-advancedSearchTableWrap vis-table-responsive' style='max-height:200px;overflow-y:auto'>").append(s); f.append(h); var i = "", e = "", r = null; for (u = 0, c = n.Rows.length; u < c; u++) { if (u == 0) { for (i += '<thead><tr class="vis-advancedSearchTableHead">', o = 0; o < n.Headers.length; o++)i += "<th>" + n.Headers[o] + "<\/th>"; i += "<\/tr><\/thead><tbody>" } e = '<tr class="vis-advancedSearchTableRow">'; r = n.Rows[u]; e += "<td>" + r.AD_Column_ID + "<\/td><td>" + r.NewValue + "<\/td><td>" + r.OldValue + "<\/td><td>" + r.UpdatedBy + "<\/td><td>" + Globalize.format(new Date(r.Updated), "f") + "<\/td>"; e += "<\/tr>"; i += e } i += "<\/tbody>"; s.html(i) } }); this.show = function () { u = new n.ChildDialog; u.setTitle(o); u.setContent(f); u.setPosition({ my: "center bottom-3" }); u.close = function () { c() }; u.show() } }; n.AWindow = i; n.AppsAction = r; n.StatusBar = u }(VIS, jQuery), function (n) { n.VTabbedPane = function () { var n = !1; this.oldTabIndex = -1; this.Items = []; this.ItemsIds = []; this.count = 0; this.dependents = []; this.TabItems = []; this.TabLevelsItems = []; this.TabLevels = []; this.tabLIObj = []; this.contentPane = null; this.aTabPaneMgr = null; this.getIsWorkbench = function () { return n } }; n.VTabbedPane.prototype.init = function (t, i) { this.aPanel = t; this.multiTabView = i; i && (this.contentPane = new n.ContentPane(this, t.getIncludedEmptyArea())) }; n.VTabbedPane.prototype.setTabObject = function (n) { this.tabObj = n }; n.VTabbedPane.prototype.finishLayout = function (n) { this.contentPane && this.contentPane.finishLayout(n) }; n.VTabbedPane.prototype.addTab = function (t, i, r, u) { var s, e, h, o, f; for (this.ItemsIds[this.count] = t, this.Items[this.count] = r, this.TabItems.push(u), s = i.getDependentOn(), e = 0; e < s.length; e++)h = s[e], this.dependents.indexOf(h) < 0 && this.dependents.push(h); if (this.count++, this.multiTabView) { o = i.getTabLevel(); this.TabLevels.push(o); var t = "st_" + u.getAction(), c = { action: t, text: i.getName(), toolTipText: i.getDescription(), textOnly: !0, iconName: "" }, l = new n.AppsAction(c); for (f in this.TabLevelsItems) this.TabLevelsItems[f].TabLevel <= o && (this.TabLevelsItems[f].ChildEle.push(r), this.TabLevelsItems[f].ChildTabs.push(i), this.TabLevelsItems[f].ChildTabsItems.push(l)); this.TabLevelsItems.push({ TabLevel: o, ChildEle: [], ChildTabs: [], ChildTabsItems: [], Id: t }) } }; n.VTabbedPane.prototype.getIsTabChanged = function (t) { var u = this.ItemsIds.indexOf(t), f = this.oldTabIndex, r, h, i, e, s, o; if (u === f) return console.log("same tab"), !1; if (i = this.Items[u], r = null, i instanceof n.GridController && (r = i, h = r.getIsDisplayed(), !h)) return !1; if (r != null && f >= 0 && u != f && (i = this.Items[f], i != null && i instanceof n.GridController)) { if (r.getTabLevel() > i.getTabLevel() + 1) { for (e = u - 1; e >= 0; e--)if (s = this.Items[e], o = null, s instanceof n.GridController && (o = s, o.getTabLevel() == i.getTabLevel() + 1)) return n.ADialog.warn("TabSwitchJumpGo", !0, "", o.getTitle()), !1; return n.ADialog.warn("TabSwitchJump"), !1 } i.setMnemonics(!1) } return r != null && r.setMnemonics(!0), this.oldTabIndex = u, !0 }; n.VTabbedPane.prototype.restoreTabChange = function () { this.oldTabIndex = -1 }; n.VTabbedPane.prototype.getTabElement = function () { return this.Items[this.oldTabIndex] }; n.VTabbedPane.prototype.getSelectedIndex = function () { return this.oldTabIndex }; n.VTabbedPane.prototype.sizeChanged = function (n, t) { for (var i in this.Items) this.Items[i].sizeChanged(n, t) }; n.VTabbedPane.prototype.evaluate = function (t) { var r = t == null, u = null, i, f, e, o; if (r || (u = t, r = u != null ? this.dependents.indexOf(u) > -1 : !0), r) for (i = 0; i < this.TabItems.length; i++)f = this.Items[i], f instanceof n.GridController && (e = f, o = e.getIsDisplayed(), this.TabItems[i].setEnabled(o)) }; n.VTabbedPane.prototype.setTabControl = function (n) { var r = this.aPanel.getTabControl(), t, i; if (this.multiTabView) for (t = 0; t < n.length; t++)i = n[t].getListItm(), this.tabLIObj[n[t].action] = i, r.append(i.hide()); else { for (r = this.aPanel.getTabControl(), t = 0; t < n.length; t++)i = n[t].getListItm(), this.tabLIObj[n[t].action] = i, r.append(i); this.aPanel.setTabNavigation() } }; n.VTabbedPane.prototype.setSelectedTab = function (n) { var r, i, t; if (this.selectedTab && this.selectedTab.removeClass("vis-apanel-tab-selected"), this.selectedTab = this.tabLIObj[n], this.selectedTab.addClass("vis-apanel-tab-selected"), this.multiTabView) { r = this.aPanel.getTabControl(); for (i in this.tabLIObj) this.tabLIObj[i].hide(); for (t = 0; t <= this.oldTabIndex; t++)this.tabLIObj[this.ItemsIds[t]].show(); this.contentPane.setTabControl(this.TabLevelsItems[this.oldTabIndex]) } }; n.VTabbedPane.prototype.getAPanel = function () { return this.aPanel }; n.VTabbedPane.prototype.notifyDataChanged = function () { this.multiTabView && this.contentPane.dataStatusChanged() }; n.VTabbedPane.prototype.sizeChanged = function () { this.multiTabView && this.contentPane.sizeChanged(); return }; n.VTabbedPane.prototype.refresh = function () { this.multiTabView && this.contentPane.refresh(); return }; n.VTabbedPane.prototype.dispose = function () { var t, n; for (t in this.Items) this.Items[t].dispose(), this.Items[t] = null; if (this.TabItems.length = 0, this.TabItems = null, this.Items.length = 0, this.Items = null, this.ItemsIds.length = 0, this.ItemsIds = null, this.dependents.length = 0, this.dependents = null, this.TabAppsItems) for (n = 0; n < this.TabAppsItems.length; n++)this.TabAppsItems[n].dispose(); this.contentPane && this.contentPane.dispose(); this.contentPane = null; this.TabAppsItems = null } }(VIS, jQuery), function (n, t) { function i(i, r, u, f) { var a = f.getHtmlStyle(), v = '<div class="input-group vis-input-wrap">', o, s, e, c, h, l; if (r && (r.getControl()[0].tagName == "TEXTAREA" || r.getControl().hasClass("vis-ev-col-img-ctrl")) && (v = '<div class="input-group vis-input-wrap vis-ev-full-h">'), o = t(v), f.getIsLink() || f.getDisplayType() == n.DisplayType.Button || f.getShowIcon() && (f.getFontClass() != "" || f.getImageName() != "") && (s = ['<div class="input-group-prepend"><span class="input-group-text vis-color-primary">'], f.getFontClass() != "" ? s.push('<i class="' + f.getFontClass() + '"><\/i>') : s.push('<img src="' + n.Application.contextUrl + "Images/Thumb16x16/" + f.getImageName() + '"><\/img>'), s.push("<\/span><\/div>"), o.append(s.join(" "))), r != null && a != "" && r.getControl().attr("style", a), e = t("<div class='vis-control-wrap'>"), r && (r.getControl()[0].tagName == "INPUT" || r.getControl()[0].tagName == "SELECT" || r.getControl()[0].tagName == "TEXTAREA" || r.getControl()[0].className == "vis-progressCtrlWrap") && r.getControl()[0].type != "checkbox" ? (e.append(r.getControl().attr("placeholder", " ").attr("data-placeholder", "")), i != null && e.append(i.getControl())) : (i != null && e.append(i.getControl()), r && e.append(r.getControl())), f.getDisplayType() == n.DisplayType.Label || f.getIsLink() || e.append("<span class='vis-ev-ctrlinfowrap' data-colname='" + f.getColumnName() + "' title='" + f.getDescription() + "'  tabindex='-1' data-toggle='popover' data-trigger='focus'><i class='vis vis-info' aria-hidden='true'><\/i><\/span'>"), e.append("<span class='vis-ev-col-msign'><i class='fa fa-exclamation' aria-hidden='true'><\/span'>"), o.append(e), r && (c = r.getBtnCount(), c > 0)) { for (r.getControl().attr("data-hasBtn", " "), h = 0; h < c;)l = r.getBtn(h), l != null && o.append(t('<div class="input-group-append">').append(l)), ++h; c = -1; h = 0 } u.append(o) } n.VGridPanel = function () { function st() { l = t("<div class='vis-ad-w-p-vc-ev-grid'>"); l.on("click", "span.vis-ev-ctrlinfowrap", et) } function et(n) { var i = t(n.currentTarget), r = i.data("colname"); r != "" && (k && (k.popover("dispose"), k = null), i.attr("data-content", ut[r].help), k = i.popover("show")) } function g(n, i, r, u) { n && (nt = e = t("<div class='vis-ev-col'><\/div>")); i && (nt = a = t("<div class='vis-ev-col vis-ev-col-start2'><\/div>")); r && (nt = p = t("<div class='vis-ev-col vis-ev-col-start3'><\/div>")); u && (nt = w = t("<div class='vis-ev-col vis-ev-col-start4'><\/div>")) } function d(n) { n ? n.rSpan <= 1 && (n = { rSpan: 1, cSpan: 0, cSpace: 0, set: !1 }) : (s = { rSpan: 1, cSpan: 0, cSpace: 0, set: !1 }, u = { rSpan: 1, cSpan: 0, cSpace: 0, set: !1 }, f = { rSpan: 1, cSpan: 0, cSpace: 0, set: !1 }, h = { rSpan: 1, cSpan: 0, cSpace: 0, set: !1 }) } function ht(n) { s.rSpan > 1 && (s.set && n == 1 && s.cSpan < 4 ? s.set = !1 : --s.rSpan, d(s)); u.rSpan > 1 && (n == 2 && u.set && u.cSpan < 3 ? u.set = !1 : --u.rSpan, d(u)); f.rSpan > 1 && (n == 3 && f.set && f.cSpan < 2 ? f.set = !1 : --f.rSpan, d(f)); h.rSpan > 1 && (--h.rSpan, d(h)) } function ft(n, t) { var c = n.getFieldBreadth(), o = n.getFieldColSpan(), i = n.getCellSpace(), l = n.getIsLongField(), v = n.getIsLineBreak(); if (v && (d(), t = !0), t && (ht(r), tt(), r = 0), r == 0) if (l) tt(), d(), g(!0), e.addClass("vis-ev-col-end4"), r = 4; else if (s.rSpan > 1) r += s.cSpan; else if (i > 0) i > 3 && (i = 3), r += i, i = 0; else if (e) r += 1; else { g(!0); o == 2 ? u.rSpan <= 1 && e.addClass("vis-ev-col-end2") : o == 3 ? u.rSpan <= 1 && f.rSpan <= 1 ? e.addClass("vis-ev-col-end3") : u.cSpan < 1 && e.addClass("vis-ev-col-end2") : o > 3 && (u.rSpan <= 1 && f.rSpan <= 1 && h.rSpan <= 1 ? e.addClass("vis-ev-col-end4") : u.rSpan <= 1 && f.rSpan <= 1 ? e.addClass("vis-ev-col-end3") : u.rSpan <= 1 && e.addClass("vis-ev-col-end2")); r += o - 1; c > 1 && (s.rSpan = c + 1, s.set = !0, s.cSpan = o, s.cSpace = i, e.css("grid-row", "span " + c)); return } if (r == 1) if (u.rSpan > 1) r += u.cSpan; else if (i > 0) i > 2 && (i = 2), r += i, i = 0; else if (a) r += 1; else { g(!1, !0); o == 2 ? f.rSpan <= 1 && a.addClass("vis-ev-col-end3") : o >= 3 && (f.rSpan <= 1 && h.rSpan <= 1 ? a.addClass("vis-ev-col-end4") : f.cSpan < 1 && a.addClass("vis-ev-col-end3")); r += o - 1; c > 1 && (u.rSpan = c + 1, u.set = !0, u.cSpan = o, u.cSpace = i, a.css("grid-row", "span " + c)); return } if (r == 2) if (f.rSpan > 1) r += f.cSpan; else if (i > 0) i > 1 && (i = 1), r += i, i = 0; else if (p) r += 1; else { g(!1, !1, !0); o >= 2 && h.rSpan <= 1 && p.addClass("vis-ev-col-end4"); r += o - 1; c > 1 && (f.rSpan = c + 1, f.set = !0, f.cSpan = o, f.cSpace = i, p.css("grid-row", "span " + c)); return } if (r == 3) { h.rSpan > 1 || (w ? t = !0 : (g(!1, !1, !1, !0), o >= 2 && w.addClass("vis-ev-col-end4"), c > 1 && (h.rSpan = c + 1, h.set = !0, h.cSpan = o, h.cSpace = i, w.css("grid-row", "span " + c)))); return } e || a || p || w ? !l && r > 3 && ft(n, !0) : ft(n, t) } function tt() { e && l.append(e); a && l.append(a); p && l.append(p); w && l.append(w); e = a = p = w = $td4 = null } function ct(i) { var a, s, u, h, e; i.stopPropagation(); var r = t(this), w = t(i.target), b = r.data("name"), p = r.data("display"), o = t(r.find(".vis-ev-col-fg-more")[0]), f = !1, l = !1; if (w.is("span")) { if (p !== "show") return; f = !0; r.data("showmore") == "Y" ? (l = !0, r.data("showmore", "N"), o.text(n.Msg.getMsg("ShowLess"))) : (r.data("showmore", "Y"), o.text(n.Msg.getMsg("ShowMore"))) } else r.data("showmore") == "N" && (l = !0), p === "show" ? (r.data("display", "hide"), o.hide(), t(r.children()[2]).addClass("vis-ev-col-fg-rotate")) : (r.data("display", "show"), o.show(), f = !0, t(r.children()[2]).removeClass("vis-ev-col-fg-rotate")); for (a = c[b], s = 0; s < a.length; s++) { for (u = a[s], h = v[u.getColumnName()], e = 0; e < h.length; e++)h[e].tag = f, h[e].setVisible(f && u.getIsDisplayed(!0)); f && u.getIsDisplayed(!0) && (u.getIsFieldgroupDefault() || l) ? y[u.getColumnName()].show() : y[u.getColumnName()].hide() } } function lt(i) { if (o == null && (o = ""), i == null || i.length == 0 || i.equals(o)) return !1; o = i; tt(); d(); g(!0); var u = t('<div class="vis-ev-col-fieldgroup" data-showmore="Y" data-name="' + i + '" data-display="show"><span class="vis-ev-col-fg-hdr"  >' + i + ' <\/span> <span class="vis-ev-col-fg-more">' + n.Msg.getMsg("ShowMore") + '<\/span><i class= "fa fa-angle-up"><\/span><\/div>'); e.append(u); e.addClass("vis-ev-col-end4"); r = 0; u.on("click", ct); return !0 } function at(n) { if (o != null && !o.equals("")) { var t = null; c[o] && (t = c[o]); t == null && (t = [], c[o] = t); t.push(n) } } function ot(n, t) { v[n] ? v[n].push(t) : (v[n] = [], v[n].push(t)) } function vt(n) { if (o != null && !o.equals("")) { var t = null; c[o] && (t = c[o]); t == null && (t = [], c[o] = t); t.push(n); n.getIsFieldgroupDefault() || y[n.getColumnName()].hide() } } var o = null, r = -2, it = -1, b = [], rt = [], l, e, a, p, w, nt = null, s = { rSpan: 1, cSpan: 0, cSpace: 0, orgRSpan: 1 }, u = { rSpan: 1, cSpan: 0, cSpace: 0, orgRSpan: 1 }, f = { rSpan: 1, cSpan: 0, cSpace: 0, orgRSpan: 1 }, h = { rSpan: 1, cSpan: 0, cSpace: 0, orgRSpan: 1 }, v = {}, c = {}, y = {}, ut = {}, k = null; st(); this.addField = function (u, f) { var s = !1, e, h, c, o, a, l; if (f.getIsLink() && f.getIsRightPaneLink()) { b[++it] = u; rt.push(u); return } if (e = n.VControlFactory.getLabel(f), e != null || u != null) { if (h = f.getIsSameLine(), lt(f.getFieldGroup(), r) && (h = !1), h ? (++r, r > 3 ? (h = !1, s = !0) : r < 0 && (s = !0)) : s = !0, ft(f, s), e != null && (f.getDescription().length > 0, ot(f.getColumnName(), e), b[++it] = e), u != null) { c = f.getVFormat(); o = f.getVFormatError(); switch (c) { case "": break; default: u.getControl().on("focusout", function (i) { var r = new RegExp(c); n.DisplayType.IsString(f.getDisplayType()) && t(i.target).val() != null && t(i.target).val().toString().trim().length > 0 && (r.test(t(i.target).val()) || (!o && o.length > 0 && (o = n.Msg.getMsg("RegexFailed") + ":" + f.getHeader()), n.ADialogUI.warn(o, "", function () { t(i.target).focus() }))) }) }a = u.getBtnCount(); ot(f.getColumnName(), u); b[++it] = u } (e != null || u != null) && (l = nt, i(e, u, l, f), y[f.getColumnName()] = l, vt(f), ut[f.getColumnName()] = { help: f.getHelp() }) } }; this.flushLayout = function () { tt() }; this.getRoot = function () { return l }; this.getComponents = function () { return b }; this.getLinkComponents = function () { return rt }; this.setVisible = function (n, t) { y[n] && (t ? y[n].show() : y[n].hide()) }; this.dispose = function () { var n, t; for (l.off("click", "span.vis-ev-ctrlinfowrap", et), ut = {}, k && k.popover("dispose"), k = null, rt.length = 0, rt = null; b.length > 0;)b.pop().dispose(); for (n in v) v[n] = null, delete v[n]; v = null; y = {}; y = null; for (t in c) c[t].length = 0, c[t] = null, delete c[n]; c = null; it = null; b = null; l.remove(); l = null; this.addField = null; tt = null; at = null } } }(VIS, jQuery), function (n, t) { function f(n) { function f(n) { if (i[0].clientHeight + i[0].scrollTop >= i[0].scrollHeight ? r.css("opacity", ".6") : r.css("opacity", "1"), i[0].scrollTop == 0 ? u.css("opacity", ".6") : u.css("opacity", "1"), n == "up") { if (u.css("opacity") < 1) return; i[0].scrollTop -= 60 } else { if (r.css("opacity") < 1) return; i[0].scrollTop += 60 } } var u = t('<div class=vis-cv-rd-top><i class="vis vis-arrow-up"><\/i><\/div>'), r = t('<div class=vis-cv-rd-down><i class="vis vis-arrow-down"><\/i><\/div>'), i = t("<div class=vis-cv-rd-body>"); n.append(u).append(i).append(r); this.addItem = function (n) { var u = t('<span class="vis-cv-rd-body-item">'); u.text(n); i.append(u); i[0].clientHeight < i[0].scrollHeight && r.css("opacity", "1") }; this.reset = function () { i.empty(); u.css("opacity", ".5"); r.css("opacity", ".5") }; this.dispose = function () { i.empty(); u.off(); r.off() }; u.on("click", function () { f("up") }); r.on("click", function () { f("down") }) } function r() { function d() { var n = t("body").width() - 65; o = t("<div class='vis-cv-body vis-noselect'>"); v = t("<div class='vis-cv-ld'>"); c = t("<div class='vis-cv-rd'>"); u = t("<div class='vis-cv-main' style='max-width:" + n + "px'>"); s = t("<div class='vis-cv-header'>"); r = t('<input  class="vis-vs-card-autoComplete" style="display:inline">'); a = t("<p>"); h = t('<span class="vis-ad-w-p-tb-s-icon-down vis-cv-cardlist"><i class="fa fa-ellipsis-h"><\/i><\/span>'); l = t("<div class='vis-cv-groupHeader'style='overflow:hidden; max-width:" + n + "px'>"); s.append(r).append(h).append(a); v.append(s).append(l).append(u); o.append(v).append(c); u.scroll(function () { y() }); g() } function g() { r.autocomplete({ select: function (n, i) { w(i.item.id, i.item.label); var r = t(n.currentTarget); r.find(".vis-cv-card-selected-card").removeClass("vis-cv-card-selected-card"); r.find('[data-checkid="' + i.item.id + '"]').addClass("vis-cv-card-selected-card"); n.stopPropagation() }, minLength: 0, open: function () { i.isAutoCompleteOpen = !0 }, close: function () { window.setTimeout(function () { i.isAutoCompleteOpen = !1 }, 600) }, source: [] }); r.autocomplete().data("ui-autocomplete")._renderItem = function (r, u) { var f = null, o = null, e; f = u.isDefault == "Y" ? t("<span title='" + n.Msg.getMsg("DefaultCard") + "'  data-id='" + u.id + "' class='VIS-winSearch-defaultIcon'><\/span>") : t("<span title='" + n.Msg.getMsg("MakeDefaultCard") + "' data-id='" + u.id + "' class='VIS-winSearch-NonDefaultIcon'><\/span>"); o = t("<span class='fa fa-check-circle vis-cv-card-selected-card-listitem'><\/span>"); e = null; e = i.AD_CardView_ID == u.id ? t("<li style='white-space:normal !important; max-width:210px !important'>").append(t("<a  data-checkid='" + u.id + "'  class='vis-cv-card-selected-card' style='display:block' title='" + u.title + "'><\/a>").append(o).append("<p>" + u.label + "<\/p>").append(f)).prependTo(r) : t("<li style='white-space:normal !important; max-width:210px !important'>").append(t("<a  data-checkid='" + u.id + "'  style='display:block' title='" + u.title + "'><\/a>").append(o).append("<p>" + u.label + "<\/p>").append(f)).prependTo(r); u.Created != n.context.getAD_User_ID() && e.find("p").text(u.label + " (S)"); f.on("click", function () { var r = t(this).data("id"); t.ajax({ url: n.Application.contextUrl + "JsonData/InsertUpdateDefaultCard", dataType: "json", data: { AD_Tab_ID: i.mTab.getAD_Tab_ID(), AD_Card_ID: r }, success: function () { }, error: function (n) { console.log(n) } }) }); return e } } function y() { l.scrollLeft(u.scrollLeft()) } var k; this.cGroupInfo = {}; this.cCols = []; this.cConditions = []; this.cGroup = null; this.mTab; this.AD_Window_ID; this.AD_Tab_ID; this.groupCtrls = []; this.fields = []; this.grpCount = 0; this.oldGrpCount = 0; this.grpColName = ""; this.hasIncludedCols = !1; this.GroupSequence = null; this.ExcludedGroup = null; this.onCardEdit = null; this.cardViewData = null; var o, u = null, s, r = null, a = null, h = null, i = this, l = null; this.isAutoCompleteOpen = !1; var c = null, v = null; this.cardID = 0; k = null; this.editID = 0; this.VCardRightPanel = null; this.SyncScroll = function () { y() }; d(); this.VCardRightPanel = new f(c); this.getRoot = function () { return o }; this.getRightDiv = function () { return c }; this.getBody = function () { return u }; this.setHeader = function (n) { a.text(n) }; this.getHeader = function () { return s }; this.getGroupHeader = function () { return l }; this.sizeChanged = function (n, t) { o.height(n - 12 + "px"); c.height(n - 12 + "px"); this.calculateWidth(t) }; this.setBusy = function () { this.aPanel.setBusy(!1) }; this.calculateWidth = function () { this.navigate() }; u.on("mousedown touchstart", "div.vis-cv-card", function (n) { var u, r, f; if (i.onCardEdit) if (u = t(n.target), u[0].nodeName == "SPAN" && u.hasClass("vis-cv-card-edit")) { if (r = u.data("recid"), r || r === 0) { i.editID = r; i.onCardEdit({ recid: r }) } } else { for (f = 0; !u.hasClass("vis-cv-card");) { if (f > 5) break; u = u.parent(); f++ } if (r = u.data("recid"), r || r === 0) { i.onCardEdit({ recid: r }, !0); i.navigate(r, !1, !0) } } n.stopPropagation() }); this.getAD_CardView_ID = function () { return this.AD_CardView_ID }; this.getField_Group_ID = function () { return this.cGroup ? this.cGroup.getAD_Field_ID() : 0 }; this.getCardCmb = function () { return r }; var nt = function () { r.one("focus", p); r.on("change", w); h.on("click", function () { p() }) }, p = function () { var t = n.dataContext.getJSONData(n.Application.contextUrl + "JsonData/GetCardsInfo", { AD_Tab_ID: i.mTab.getAD_Tab_ID() }); t && i.fillCardViewList(t, !0) }, w = function (n, t) { i.getCardViewData(i.mTab, n, t) }, e = null, b = null; this.navigate = function (n, t, i) { (n && (b = n), t) || (e && e.length > 0 && e.toggleClass("vis-cv-card-selected"), e = u.find("div.vis-cv-card[name~=vc_" + b + "]"), e.length != 0 && (e.toggleClass("vis-cv-card-selected"), i || e[0].scrollIntoView())) }; this.dC = function () { for (u.off("click"), this.onCardEdit = null, i = null, o.remove(), u.remove(), s.remove(), r.remove(), r = null, h.remove(), h = null, o = u = s = null, this.getRoot = this.getBody = this.setHeader = this.getHeader = this.dC = null, e = null, this.cGroupInfo = {}, this.cCols.length = 0, this.cConditions.length = 0, this.cGroup = null, this.mTab = null, this.fields.length = 0, this.grpCount = null; this.groupCtrls.length > 0;)this.groupCtrls.pop().dispose(); this.VCardRightPanel && this.VCardRightPanel.dispose(); this.VCardRightPanel = null }; this.fillCardViewList = function (t, i) { var f, u; if (r.empty(), f = [], t && t.length > 0) { for (u = t.length - 1; u >= 0; u--)t[u].Name = n.Utility.decodeText(t[u].Name), t[u].IsDefault ? f.push({ title: t[u].Name, label: t[u].Name, value: t[u].Name, id: t[u].AD_CardView_ID, isDefault: "Y", Created: t[u].Created }) : f.push({ title: t[u].Name, label: t[u].Name, value: t[u].Name, id: t[u].AD_CardView_ID, isDefault: "N", Created: t[u].Created }); r.autocomplete("option", "source", f, "position", { my: "left top", at: "left bottom" }); i && r.autocomplete("search", ""); this.AD_CardView_ID && r.val(this.cardName) } }; nt() } function u(r, u, f, e, o, s, h, c, l, a) { function w() { var n = "<div class='vis-cv-cg vis-pull-left'><div data-key='" + l + "'  class='vis-cv-grpbody'><\/div><\/div><\/div>"; v = t(n); y = v.find(".vis-cv-grpbody"); r && v.css({ "margin-right": "0px", width: "100%" }) } function b() { var t = null, f; if (this.fieldStyles = {}, u) for (f = 0; f < u.length; f++)t = new i(e, u[f], s, h, c, windowNo, this.fieldStyles, a), r && t.getRoot().width("240px").css({ margin: "5px 12px 12px 5px", float: n.Application.isRTL ? "right" : "left" }), f == 0 && t.addStyleToDom(), p.push(t), y.append(t.getRoot()), t.evaluate(o) } var v = null, y, p = []; windowNo = a.curTab.getWindowNo(); w(); this.getRoot = function () { return v }; this.getBody = function () { return y }; this.setWidth = function (n) { v.width(n) }; b(); this.dC = function () { while (p.length > 0) p.pop().dispose(); v.remove(); v = null; y = null; this.getBody = null; this.getRoot = null } } function i(i, r, u, f, e, o, s, h) { var l, y, c, a, p; this.record = r; this.aPanel = h; this.dynamicStyle = []; this.textAlignEnum = { C: "Center", R: "flex-end", L: "flex-start" }; this.alignItemEnum = { C: "Center", T: "flex-start", B: "flex-end" }; this.dynamicStyle = []; this.styleTag = document.createElement("style"); this.windowNo = o; this.fieldStyles = s; l = t('<div class="vis-cv-card va-dragdrop" data-recid=' + r.recid + " name = vc_" + r.recid + " ><\/div>"); y = t('<span class="glyphicon glyphicon-pencil vis-cv-card-edit vis-pull-right" data-recid=' + r.recid + "><\/span>"); l.append(y); c = null; p = t('<div class="vis-ad-w-p-card_root_common">'); l.append(p); this.fieldStyles["vis-ad-w-p-card-Custom_" + o] || (this.fieldStyles["vis-ad-w-p-card-Custom_" + o] = {}); this.headerCustom = this.fieldStyles["vis-ad-w-p-card-Custom_" + o].headerParentCustomUISettings; this.headerCustom || (this.headerCustom = this.headerParentCustomUISettings(f), this.fieldStyles["vis-ad-w-p-card-Custom_" + o].headerParentCustomUISettings = this.headerCustom); l.addClass(this.headerCustom); this.fieldStyles["root_" + o] || (this.fieldStyles["root_" + o] = {}); this.rootCustomStyle = this.fieldStyles["root_" + o].headerUISettings; this.rootCustomStyle || (this.rootCustomStyle = this.headerUISettings("", e), this.fieldStyles["root_" + o].headerUISettings = this.rootCustomStyle); p.addClass(this.rootCustomStyle); this.setHeaderItems = function (i, r, u, f) { var p, g, at, vt, ht, pt, ft, wt, bt, e, nt, c, tt, et, ct; if (i) { p = null; for (g in i.HeaderItems) { var o = i.HeaderItems[g], it = o.StartColumn, ot = o.ColumnSpan, rt = o.StartRow, st = o.RowSpan, ni = o.JustifyItems, ti = o.AlignItems, ri = o.Padding, dt = o.BackgroundColor, ui = o.HideFieldIcon, fi = o.HideFieldText, ut = o.FieldValueStyle; dt || (dt = ""); at = o.FontColor; at || (at = ""); vt = o.FontSize; vt || (vt = ""); var y = null, l = null, h = null, gt = null, s = null, yt = i.AD_GridLayout_ID; if (this.fieldStyles[it + "_" + ot + "_" + rt + "_" + st + "_" + yt] || (this.fieldStyles[it + "_" + ot + "_" + rt + "_" + st + "_" + yt] = {}), this.dynamicClassName = this.fieldStyles[it + "_" + ot + "_" + rt + "_" + st + "_" + yt].applyCustomUISettings, this.dynamicClassName || (this.dynamicClassName = this.applyCustomUISettings(g, it, ot, rt, st, ni, ti, dt, at, vt, ri), this.fieldStyles[it + "_" + ot + "_" + rt + "_" + st + "_" + yt].applyCustomUISettings = this.dynamicClassName), y = r.find("." + this.dynamicClassName), y.length <= 0 && (y = t('<div class="vis-w-p-card-data-f ' + this.dynamicClassName + '">')), o.ColSql.length > 0) { if (nt = {}, h = t('<div class="vis-w-p-header-Label-f"><\/div>'), s = new n.Controls.VKeyText(o.ColSql, this.windowNo, this.windowNo + "_" + g), s == null) continue; nt.control = s; ht = { control: nt, field: null }; h.append(s.getControl()); s.setValue(); ut = o.FieldValueStyle; ut && h.attr("style", ut); y.append(h); r.append(y) } else { if (!p) for (p = {}, pt = 0; pt < u.length; pt++)ft = u[pt], ft.getCardViewSeqNo() in p ? p[ft.getCardViewSeqNo()].push(ft) : p[ft.getCardViewSeqNo()] = [ft]; if (wt = p[g], !wt) continue; for (bt = 0; bt < wt.length; bt++)if (e = wt[bt], e) { e.getCardFieldStyle() && (ut = e.getCardFieldStyle()); e.setCardIconHide(ui); e.setCardTextHide(fi); this.fieldStyles[e.getColumnName()] || (this.fieldStyles[e.getColumnName()] = {}); nt = {}; l = t('<div class="vis-w-p-card-icon-f"><\/div>'); h = t('<div class="vis-w-p-card-Label-f"><\/div>'); e.getDisplayType() == n.DisplayType.Image && (h.addClass("vis-w-p-card-Label-center-f"), this.fieldStyles[e.getColumnName() + "justifyAlignImageItems"] || (this.fieldStyles[e.getColumnName() + "justifyAlignImageItems"] = {}), this.dynamicClassForImageJustyfy = this.fieldStyles[e.getColumnName() + "justifyAlignImageItems"].justifyAlignImageItems, this.dynamicClassForImageJustyfy || (this.dynamicClassForImageJustyfy = this.justifyAlignImageItems(g, ni, ti), this.fieldStyles[e.getColumnName() + "justifyAlignImageItems"] = { justifyAlignImageItems: this.dynamicClassForImageJustyfy }), h.addClass(this.dynamicClassForImageJustyfy)); gt = n.VControlFactory.getHeaderLabel(e, !0); s = n.VControlFactory.getReadOnlyControl(this.curTab, e, !1, !1, !1); e.getOrginalDisplayType() == n.DisplayType.Button && s != null && s.addActionListner(this); this.fieldStyles[e.getColumnName() + "applyCustomUIForFieldValue"] || (this.fieldStyles[e.getColumnName() + "applyCustomUIForFieldValue"] = {}); this.dynamicFieldValue = this.fieldStyles[e.getColumnName() + "applyCustomUIForFieldValue"].applyCustomUIForFieldValue; this.dynamicFieldValue || (this.dynamicFieldValue = this.applyCustomUIForFieldValue(g, it, rt, e, ut), this.fieldStyles[e.getColumnName() + "applyCustomUIForFieldValue"] = { applyCustomUIForFieldValue: this.dynamicFieldValue }); s.getControl().addClass(this.dynamicFieldValue); nt.control = s; var ht = { control: nt, field: e }, kt = t("<span><\/span>"), ii = n.VControlFactory.getIcon(e); if (s != null) { if (c = null, gt && (c = gt.getControl().addClass("vis-w-p-card-data-label")), tt = w(e, f), k(ut, y, l, h), et = t("<img>"), ct = t("<span>"), ht.img = et, e.lookup && e.lookup.gethasImageIdentifier()) { ht.imgspan = ct; var a = null, lt = null; n.DisplayType.List == e.lookup.displayType ? (a = e.lookup.getLOVIconElement(f[e.getColumnName().toLower()], !0), !a && tt && (lt = tt.substring(0, 1), a = lt)) : (tt = n.Utility.Util.getIdentifierDisplayVal(tt), a = b(e, f)); a && !a.contains("Images/") ? (lt = a, ct.append(lt)) : n.DisplayType.List == e.lookup.displayType ? et.attr("src", t(a).attr("src")) : et.attr("src", a); l.append(ct); l.append(et); d(e, lt, et, ct, c, h, l); h.append(s.getControl()); r.append(y); v(tt, s, e) } else kt.addClass("vis-w-p-card-icon-fixed"), ht.imgspan = kt, e.getOrginalDisplayType() == n.DisplayType.Button ? l.remove() : e.isCardIconHide() || e.isCardTextHide() ? e.isCardIconHide() && e.isCardTextHide() ? l.remove() : !e.isCardIconHide() && e.isCardTextHide() ? (l.append(kt.append(ii)), c && c.length > 0 && c.hide()) : e.isCardIconHide() && !e.isCardTextHide() && (c && c.length > 0 && h.append(c), l.remove()) : (l.append(kt.append(ii)), c && c.length > 0 && h.append(c)), v(tt, s, e); h.append(s.getControl()); r.append(y) } } } } } }; this.setHeader = function () { var ut, ht, ft, f, st, rt, vt; if (u && u.length > 0) for (ut = 0; ut < u.length; ut++) { var y = u[ut], p = y.HeaderTotalRow, g = y.HeaderTotalColumn, s = y.HeaderBackColor, h = y.HeaderPadding, nt = y.AD_GridLayout_ID; s || (s = ""); h || (h = ""); this.fieldStyles[g + "_" + p + "_" + s + "_" + h + "_" + nt] || (this.fieldStyles[g + "_" + p + "_" + s + "_" + h + "_" + nt] = {}); this.dymcClass = this.fieldStyles[g + "_" + p + "_" + s + "_" + h + "_" + nt].fieldGroupContainerUISettings; this.dymcClass || (this.dymcClass = this.fieldGroupContainerUISettings(g, p, s, h, nt), this.fieldStyles[g + "_" + p + "_" + s + "_" + h + "_" + nt].fieldGroupContainerUISettings = this.dymcClass); ht = t('<div class="' + this.dymcClass + '">'); l.append(ht); this.setHeaderItems(y, ht, i, r) } else for (ft = 0; ft < i.length; ft++) { c = i[ft]; f = r[c.getColumnName().toLowerCase()]; a = c.getOrginalDisplayType(); var ct = n.VControlFactory.getHeaderLabel(c, !0), o = n.VControlFactory.getReadOnlyControl(this.curTab, c, !1, !1, !1), yt = null; if (ct && (yt = ct.getControl().addClass("vis-w-p-card-data-label")), c.getOrginalDisplayType() == n.DisplayType.Button && o != null && o.addActionListner(this), c.lookup && c.lookup.gethasImageIdentifier()) { var et = t('<div class="vis-w-p-card-icon-f"><\/div>'), pt = t('<div class="vis-w-p-card-data-f">'), lt = t('<div class="vis-w-p-card-Label-f"><\/div>'), e = null, tt = null, ot = t("<img>"), at = t("<span>"), it = w(c, r); k(c.cardFieldStyle, pt, et, lt); n.DisplayType.List == c.lookup.displayType ? (e = c.lookup.getLOVIconElement(r[c.getColumnName().toLower()], !0), !e && it && (tt = it.substring(0, 1), e = tt)) : (it = n.Utility.Util.getIdentifierDisplayVal(it), e = b(c, r)); e && !e.contains("Images/") ? (tt = e, at.append(tt)) : n.DisplayType.List == c.lookup.displayType ? ot.attr("src", t(e).attr("src")) : ot.attr("src", e); et.append(at); et.append(ot); d(c, tt, ot, at, yt, lt, et); lt.append(o.getControl()); v(it, o, c); l.append(pt); continue } else if (n.DisplayType.IsLookup(a)) c.getLookup() && (f = c.getLookup().getDisplay(f)), f = f; else if (n.DisplayType.YesNo == a) f = f || f == "Y" ? n.Msg.getMsg("Yes") : f = n.Msg.getMsg("No"); else if (n.DisplayType.IsDate(a)) f ? (st = new Date(f), f = a == n.DisplayType.Date ? st.toLocaleDateString() : a == n.DisplayType.DateTime ? st.toDateString() : st.toLocaleTimeString()) : f = null; else if (n.DisplayType.Amount == a) rt = n.Utility.Util.getValueOfDecimal(f), f = rt.toLocaleString(); else if (n.DisplayType.Quantity == a) rt = n.Utility.Util.getValueOfDecimal(f), f = rt.toLocaleString(); else if (n.DisplayType.Image == a) { v(f, o, c); l.append(ct.getControl()).append(o.getControl()); continue } else if (n.DisplayType.Button == a) { v(f, o, c); l.append(o.getControl()); continue } f || f == 0 || (f = " -- "); f = w2utils.encodeTags(f); c.getIsEncryptedField() && (f = f.replace(/\w|\W/g, "*")); c.getObscureType() && (f = n.Env.getObscureValue(c.getObscureType(), f)); vt = ""; vt = n.Application.isRTL ? "<p><strong title='" + f + "'>" + f + "<\/strong> :" + c.getHeader() + "<\/p>" : "<p>" + c.getHeader() + ": <strong title='" + f + "'>" + f + "<\/strong><\/p>"; l.append(t(vt)) } }; this.setColor = function (n, t) { n && l.css("background", n); t && l.css("color", n) }; y.on("touchstart", function () { t(this).css({ color: "gray" }) }); this.getRoot = function () { return l }; this.setWidth = function (n) { l.width(n) }; this.dC = function () { y.off("touchstart mouseover"); this.styleTag.remove(); this.styleTag = null; l.remove(); l = null; this.getRoot = null; this.dc = null }; var v = function (t, i, r) { if (t) { if (t.startsWith && t.startsWith("<") && t.endsWith(">") && (t = t.replace("<", "").replace(">", "")), r.getDisplayType() == n.DisplayType.Image) { var u = i.getValue(); i.getControl().show(); i.setDimension(240, 320); u == t && i.refreshImage(t) } else i.format && (t = i.format.GetFormatAmount(i.format.GetFormatedValue(t), "init", n.Env.isDecimalPoint())); i.setValue(w2utils.encodeTags(t), !1) } else r.getDisplayType() == n.DisplayType.Image ? (i.getControl().hide(), i.setValue(null, !1)) : r.getOrginalDisplayType() == n.DisplayType.Button && r.getAD_Reference_Value_ID() > 0 ? i.setText("- -") : i.setValue("- -", !0) }, w = function (t, i) { var r = i[t.getColumnName().toLowerCase()], u, f; return r ? (u = t.getDisplayType(), t.lookup ? r = t.lookup.getDisplay(r, !0, !0) : n.DisplayType.IsDate(u) ? r = u == n.DisplayType.DateTime ? new Date(r).toLocaleString() : u == n.DisplayType.Date ? new Date(r).toLocaleDateString() : new Date(r).toLocaleTimeString() : u == n.DisplayType.YesNo ? (f = r.toString(), t.getIsEncryptedColumn() && (f = n.secureEngine.decrypt(f)), r = f.equals("true")) : r = r.toString(), t.getIsEncryptedField() && r && r.length > 0 && (r = r.replace(/[a-zA-Z0-9-. ]/g, "*").replace(/[^a-zA-Z0-9-. ]/g, "*")), t.getObscureType() && r && r.length > 0 && (r = n.Env.getObscureValue(t.getObscureType(), r))) : r = null, r }, b = function (t, i) { var r = i[t.getColumnName().toLowerCase()], f, e, u; if (r = t.lookup.getDisplay(r, !0, !0), r != null && r && r.indexOf("Images/") > -1) if (f = r.substring(r.indexOf("Images/") + 7, r.lastIndexOf("^^")), f = n.Application.contextUrl + "Images/Thumb32x32/" + f, u == 0 || f.indexOf("nothing.png") > -1) { for (r = r.replace("^^" + r.substring(r.indexOf("Images/"), r.lastIndexOf("^^") + 2), "^^^"), r.indexOf("Images/") > -1 && (r = r.replace(r.substring(r.indexOf("Images/"), r.lastIndexOf("^^") + 2), "^^^")), r = r.split("^^^"), e = "", u = 0; u < r.length; u++)if (r[u].trim().length > 0) return e.length == 0 && (e = r[u].trim().substring(0, 1).toUpper()), e } else return f }, k = function (n, t, i, r) { var u = n, f, e; if (u && u.length > 0 && (u = u.split("|")), u && u.length > 0) for (f = 0; f < u.length; f++)u[f].indexOf("@img::") > -1 || u[f].indexOf("@span::") > -1 ? (t.append(i), e = "", u[f].indexOf("@img::") > -1 ? e = u[f].replace("@img::", "") : u[f].indexOf("@span::") && (e = u[f].replace("@span::", "")), i.attr("style", e)) : u[f].indexOf("@value::") > -1 ? t.append(r) : u[f].indexOf("<br>") > -1 ? t.css("flex-direction", "column") : (t.append(i), t.append(r)); else t.append(i), t.append(r) }, d = function (n, t, i, r, u, f, e) { n.isCardIconHide() || n.isCardTextHide() ? n.isCardIconHide() && n.isCardTextHide() ? e.remove() : n.isCardTextHide() ? (t != null ? i.hide() : r.hide(), u && u.length > 0 && u.remove()) : n.isCardIconHide() && (u && u.length > 0 && f.append(u), e.remove()) : (t != null ? i.hide() : r.hide(), u && u.length > 0 && f.append(u)) }; this.setHeader() } r.prototype.tableModelChanged = function (t, i, r) { var u = null, f, e; if (t === n.VTable.prototype.ROW_REFRESH) u = i.recid ? i.recid : i; else if (t === n.VTable.prototype.ROW_UNDO) this.getBody().find("div.vis-cv-card[name~=vc_" + i + "]").remove(); else if (t === n.VTable.prototype.ROW_DELETE) { for (f = i.slice(); f.length > 0;)e = f.pop(), this.getBody().find("div.vis-cv-card[name~=vc_" + e + "]").remove(); isNaN(r) && (u = r[0]) } else t === n.VTable.prototype.ROW_ADD && (u = i.recid); u && (i && this.replaceCard(i, u), this.navigate(u, null, null)) }; r.prototype.replaceCard = function (r, u) { r.recid = u; var f = new i(this.fields, r, this.headerItems, this.headerStyle, this.headerPadding, this.mTab.getWindowNo(), {}, this.aPanel); this.grpCount == 1 && f.getRoot().width("240px").css({ margin: "5px 12px 12px 5px", float: n.Application.isRTL ? "right" : "left" }); t('head:contains("' + f.headerCustom + ' {")').length == 0 && f.addStyleToDom(); this.getRoot().find("[name='vc_" + u + "']").replaceWith(f.getRoot()); f.evaluate(this.cConditions) }; r.prototype.setupCardView = function (n, t, i) { this.mTab = t; this.aPanel = n; t.vo && t.vo.DefaultCardID ? this.cardID = t.vo.DefaultCardID : this.setCardViewData(); i.append(this.getRoot()) }; r.prototype.getCardViewData = function (n, t, i) { this.cardID = t; this.mTab.getTableModel().setCardID(t); this.aPanel.curGC.query(this.mTab.getOnlyCurrentDays(), 0, !1); this.getCardCmb().val(i) }; r.prototype.resetCard = function () { while (this.groupCtrls.length > 0) this.groupCtrls.pop().dispose(); this.VCardRightPanel.reset(); this.getGroupHeader().empty(); this.groupCtrls.length = 0; this.editID = 0 }; r.prototype.setCardViewData = function (n) { var i, t, r; if (this.hasIncludedCols = !1, this.fields = [], this.cGroup = null, this.cConditions = [], this.GroupCount = {}, this.headerItems = {}, n) { for (this.AD_CardView_ID = n.AD_CardView_ID, this.cardName = n.Name, this.GroupSequence = n.GroupSequence, this.ExcludedGroup = n.ExcludedGroup, i = 0; i < n.GroupCount.length; i++)this.GroupCount[n.GroupCount[i].Group] = n.GroupCount[i].Count; for (this.getCardCmb().val(n.Name), t = this.mTab.getFieldById(n.FieldGroupID), t && (this.cGroup = t), this.cConditions = n.Conditions, this.headerItems = n.HeaderItems, this.headerStyle = n.Style, this.headerPadding = n.Padding, i = 0; i < n.IncludedCols.length; i++)t = this.mTab.getFieldById(n.IncludedCols[i].AD_Field_ID), t && (t.setCardViewSeqNo(n.IncludedCols[i].SeqNo), t.setCardFieldStyle(n.IncludedCols[i].HTMLStyle), this.fields.push(t), this.hasIncludedCols = !0) } this.fields.length < 1 && this.fields.length < 1 && (t = this.mTab.getField("Name"), t && this.fields.push(t), t = this.mTab.getField("Description"), t && this.fields.push(t), t = this.mTab.getField("Help"), t && this.fields.push(t)); for (r in this.cGroupInfo) this.cGroupInfo[r].records.length = 0; this.cGroupInfo = {}; this.grpCount = 0; this.isProcessed = !1 }; r.prototype.createGroups = function () { var e, i, f, u, r; if (this.isProcessed) { for (e in this.cGroupInfo) this.cGroupInfo[e].records = []; return } if (this.cGroup) if (this.cGroupInfo = [], this.grpCount = 0, i = this.cGroup, i) { if (i.getDisplayType() == n.DisplayType.YesNo) this.cGroupInfo["true"] = { name: "Yes", records: [], key: !0 }, this.cGroupInfo["false"] = { name: "No", records: [], key: !1 }, this.GroupCount["true"] = this.GroupCount.Y, this.GroupCount["false"] = this.GroupCount.N, this.grpCount = 2; else if (n.DisplayType.IsLookup(i.getDisplayType()) && i.getLookup()) for (f = i.getLookup(), f.fillCombobox(!0, !0, !0, !1), u = f.data, r = 0; r < u.length; r++)this.cGroupInfo[u[r].Key] = { name: u[r].Name, records: [], key: u[r].Key }, this.grpCount += 1; this.setHeader(i.getHeader()) } else this.setHeader(" "); else this.setHeader(" "); (this.grpCount < 1 || t.isEmptyObject(this.cGroupInfo)) && (this.cGroupInfo.All = { name: n.Msg.getMsg("All"), records: [], key: null }, this.grpCount = 1); this.isProcessed = !0 }; r.prototype.refreshUI = function (n) { var t = this.mTab.getTableModel().getCardTemplate(); this.setCardViewData(t); this.refresh(n) }; r.prototype.refresh = function (i) { var r = this; window.setTimeout(function () { function k(i) { o = new u(r.grpCount === 1, r.cGroupInfo[i].records, n.Utility.Util.getIdentifierDisplayVal(r.cGroupInfo[i].name), r.fields, r.cConditions, r.headerItems, r.headerStyle, r.headerPaddings, r.cGroupInfo[i].key, r.aPanel); r.groupCtrls.push(o); f.append(o.getRoot()); var e = new vaSortable(o.getBody()[0], { attr: "data-recid", selfSort: !0, force: !1, mainNode: ".vis-cv-main", ignore: [".vis-cv-card-edit", ".vis-ev-col-wrap-button", ".cardEmpty"], onclick: function (n, i) { var f = t(i).attr("data-recid"), u; r.onCardEdit({ recid: f }, !0); u = r.mTab.getFieldById(r.getField_Group_ID()); u.getIsReadOnly() || u.getCallout() != "" || !u.getIsEditable(!0, !0) ? (vaSortable.prototype.setStopDrag(!0), t(i).css("cursor", "not-allowed")) : (t(i).css("cursor", "default"), vaSortable.prototype.setStopDrag(!1)) }, onSelect: function (i, u, f) { var e = t(i).parent().attr("data-key"), o; e != t(f).attr("data-key") && (o = { grpValue: e == "null" ? null : e, recordID: r.mTab.getRecord_ID(), columnName: r.cGroup.getColumnName(), tableName: r.mTab.getTableName(), dataType: r.cGroup.getDisplayType() }, t.ajax({ type: "POST", url: n.Application.contextUrl + "CardView/UpdateCardByDragDrop", dataType: "json", data: o, beforeSend: function () { r.setBusy(!0) }, success: function (i) { if (i != "1") n.ADialog.error(i, !0, ""), vaSortable.prototype.revertItem(); else { var u = t(f).attr("data-key"); r.GroupCount[e] || (r.GroupCount[e] = 0); r.GroupCount[e] = r.GroupCount[e] + 1; r.GroupCount[u] = r.GroupCount[u] - 1; r.getGroupHeader().find(".vis-cv-cg-grp[data-key='" + u + "']").find("span").text(" (" + r.GroupCount[u] + ")"); r.getGroupHeader().find(".vis-cv-cg-grp[data-key='" + e + "']").removeClass("emptyGroup").find("span").text(" (" + r.GroupCount[e] + ")"); r.getBody().find(".cardEmpty").closest(".emptyGroup").removeClass("emptyGroup"); r.getGroupHeader().find(".vis-cv-cg-grp[data-key='" + u + "'] .vis-cv-head").attr("title", r.getGroupHeader().find(".vis-cv-cg-grp[data-key='" + u + "']").text()); r.getGroupHeader().find(".vis-cv-cg-grp[data-key='" + e + "'] .vis-cv-head").attr("title", r.getGroupHeader().find(".vis-cv-cg-grp[data-key='" + e + "']").text()); y(); r.mTab.dataRefresh() } }, error: function (t) { n.ADialog.error(t.responseText, !0, ""); vaSortable.prototype.revertItem(); r.setBusy(!1) }, complete: function () { r.setBusy(!1) } })) } }) } function y() { var n, i; r.getRoot().removeClass("emptyGroup").removeAttr("style"); f.find(".cardEmpty").remove(); n = r.ExcludedGroup; n = n.split(","); i = !1; f.find(".vis-cv-grpbody").each(function (u, e) { var o = t(e), s; o.parent().removeAttr("style"); o.is(":empty") ? (o.append("<div class='va-dragdrop cardEmpty' style='height:" + f.height() + "px'>").parent().addClass("emptyGroup"), r.getGroupHeader().find(".vis-cv-cg-grp").eq(u).addClass("emptyGroup").removeAttr("style")) : (r.getGroupHeader().find(".vis-cv-cg-grp").eq(u).css("min-width", o.parent().width()), o.parent().css("min-width", o.parent().width())); n.indexOf(o.attr("data-key")) != -1 && (o.parent().hide(), s = r.getGroupHeader().find(".vis-cv-cg-grp[data-key='" + o.attr("data-key") + "']"), r.VCardRightPanel.addItem(s.find(".vis-cv-head").text()), i = !0, s.hide()) }); r.getRightDiv().height(r.getRoot().height()); f.find(".vis-cv-grpbody").height(d(f.find(".vis-cv-grpbody"))); i ? r.getRightDiv().css("display", "flex") : r.getRightDiv().css("display", "none") } function d(n) { return Math.max.apply(null, n.map(function () { return t(this)[0].scrollHeight }).get()) } var f, o, c, a, e, h, v, l, s; if (i == 0 && (i = r.getBody().width()), r.isProcessed = !1, r.createGroups(), records = r.mTab.getTableModel().mSortList, f = r.getBody(), r.resetCard(), o = null, r.grpCount == 1) { c = ""; a = null; for (e in r.cGroupInfo) { c = n.Utility.Util.getIdentifierDisplayVal(r.cGroupInfo[e].name); a = r.cGroupInfo[e].key; r.getGroupHeader().append("<div class='vis-cv-head' >" + c + "<\/div>"); break } o = new u(!0, records, c, r.fields, r.cConditions, r.headerItems, r.headerStyle, r.headerPadding, a, r.aPanel); r.groupCtrls.push(o); f.append(o.getRoot()); r.getGroupHeader().find(".vis-cv-head").width(f.find(".vis-cv-grpbody").width() - 10); r.getRightDiv().css("display", "none") } else { r.filterRecord(records); for (e in r.cGroupInfo) k(e), h = r.cGroupInfo[e].key, h = r.GroupCount[h] ? r.GroupCount[h] : 0, v = t("<div data-key='" + r.cGroupInfo[e].key + "' class='vis-cv-cg-grp'><\/div>"), v.append("<div class='vis-cv-head' title='" + n.Utility.Util.getIdentifierDisplayVal(r.cGroupInfo[e].name) + " (" + h + ")' >" + n.Utility.Util.getIdentifierDisplayVal(r.cGroupInfo[e].name) + "<span> (" + h + ")<\/span><\/div>"), r.getGroupHeader().append(v); if (r.cGroup.lookup && (r.cGroup.lookup.displayType == n.DisplayType.List || r.cGroup.lookup.displayType == n.DisplayType.TableDir || r.cGroup.lookup.displayType == n.DisplayType.Table || r.cGroup.lookup.displayType == n.DisplayType.Search) && r.GroupSequence != null && r.GroupSequence != "") for (l = r.GroupSequence.split(","), s = 0; s < l.length; s++) { var p = f.find(".vis-cv-grpbody[data-key='" + l[s] + "']").parent(), w = r.getGroupHeader().find(".vis-cv-cg-grp[data-key='" + l[s] + "']"), b = f.find(".vis-cv-cg").eq(s); p.insertBefore(b); w.insertBefore(r.getGroupHeader().find(".vis-cv-cg-grp").eq(s)) } if (r.editID == 0) r.onCardEdit({ recid: f.find(".vis-cv-card:first").attr("data-recid") }, !0); r.editID = 0; y() } r.calculateWidth(i); r.SyncScroll(); r.aPanel.setBusy(!1) }, 10) }; r.prototype.filterRecord = function (t) { var u; if (t) { var e = t.length, o = this.cGroup.getColumnName().toLowerCase(), i = null, f = null, r = !1; for (u = 0; u < e; u++)i = t[u], f = i[o], this.cGroupInfo[f] ? (this.cGroupInfo[f].records.push(i), r = !0) : (this.cGroupInfo.Other__1 || (this.cGroupInfo.Other__1 = { name: n.Msg.getMsg("No") + " " + this.cGroup.getHeader(), records: [], key: null }, this.grpCount += 1, r = !0, r = !0), this.cGroupInfo.Other__1.records.push(i)); (this.oldGrpCount != this.grpCount || r) && (this.isProcessed = !1); this.oldGrpCount = this.grpCount } }; r.prototype.dispose = function () { this.dC() }; u.prototype.dispose = function () { this.dC(); vaSortable.prototype.dispose() }; i.prototype.addStyleToDom = function () { this.styleTag.type = "text/css"; this.styleTag.innerHTML = this.dynamicStyle.join(" "); t(t("head")[0]).append(this.styleTag) }; i.prototype.applyCustomUIForFieldValue = function (n, t, i, r, u) { var f = u, o = "vis-hp-card-FieldValue_" + i + "_" + t + "_" + this.windowNo + "_" + n + "_" + r.getAD_Column_ID(); return f && f.toLower().indexOf("@value::") > -1 && (f = e(f, "@value::")), this.dynamicStyle.push("." + o + "  {" + f + "} "), o }; i.prototype.justifyAlignImageItems = function (n, t, i) { var r = "vis-w-p-header-label-center-justify_" + n + "_" + this.windowNo; return this.dynamicStyle.push(" ." + r + " {justify-content:" + this.textAlignEnum[t] + ";align-items:" + this.alignItemEnum[i] + "}"), r }; var e = function (n, t) { var r, i; if (n && n.toLower().indexOf(t) > -1) for (r = n.split("|"), i = 0; i < r.length; i++)if (r[i].toLower().indexOf(t) > -1) return r[i].toLower().replace(t, "").trim() }; i.prototype.headerParentCustomUISettings = function (n) { var t = "vis-ad-w-p-card-Custom_" + this.windowNo; return this.dynamicStyle.push(" ." + t + " {flex:1;"), this.dynamicStyle.push(n), this.dynamicStyle.push("} "), t }; i.prototype.headerUISettings = function (n, t) { var i = "vis-ad-w-p-card_root_" + this.windowNo; return this.dynamicStyle.push(" ." + i + " {display:flex;overflow:auto;"), this.dynamicStyle.push("padding:" + t + ";" + n), this.dynamicStyle.push("} "), i }; i.prototype.fieldGroupContainerUISettings = function (n, t, i, r, u) { var f = "vis-ad-w-p-fg_card-container_" + t + "_" + n + "_" + this.windowNo + "_" + u; return this.dynamicStyle.push(" ." + f + " {display:grid;"), this.dynamicStyle.push("grid-template-columns:repeat(" + n + ", 1fr);grid-template-rows:repeat(" + t + ", auto);padding:" + r + ";" + i), this.dynamicStyle.push("} "), f }; i.prototype.applyCustomUISettings = function (n, t, i, r, u, f, e, o, s, h, c) { var l = "vis-hp-card-FieldGroup_" + r + "_" + t + "_" + this.windowNo + "_" + n; return this.dynamicStyle.push("." + l + "  {grid-column:" + t + " / span " + i + "; grid-row: " + r + " / span " + u + ";"), this.dynamicStyle.push("justify-content:" + this.textAlignEnum[f] + ";align-items:" + this.alignItemEnum[e]), this.dynamicStyle.push(";font-size:" + h + ";color:" + s + ";padding:" + c + ";"), this.dynamicStyle.push(o), this.dynamicStyle.push("} "), l }; i.prototype.evaluate = function (t) { for (var i = null, r = 0; r < t.length; r++)(i = t[r], i.ConditionValue) && n.Evaluator.evaluateLogic(this, i.ConditionValue) && this.setColor(i.Color, i.FColor) }; i.prototype.getValueAsString = function (n) { var t = this.record[n.toLowerCase()]; return t ? (t === !0 ? t = "Y" : t && t.toString().endsWith(".000Z") && (t = t.replace(".000Z", "Z")), t = t.toString()) : t === !1 ? t = "N" : t === 0 && (t = "0"), t }; i.prototype.actionPerformed = function (n) { if (this.aPanel.curTab.needSave(!0, !1)) { this.aPanel.cmd_save(!0); return } this.curTab = this.aPanel.curTab; this.curGC = this.aPanel.curGC; this.aPanel.actionPerformed(n, this) }; i.prototype.cmd_save = function (n, t) { return this.aPanel.cmd_save2(n, this.curTab, this.curGC, this.aPanel, t) }; i.prototype.dispose = function () { this.dC() }; n.VCardView = r }(VIS, jQuery), function (n, t) { function i() { function f(n) { try { if (t.grid.columns[n.column].columnName == t.hyperLinkCell) { t.grid.select(Number(n.recid)); var i = t.aPanel.getRoot().find("[name=" + n.target + "]").closest(".vis-ad-w-p-center-inctab"); i.length > 0 ? i.find(".vis-multi").length > 0 ? i.find(".vis-multi").click() : i.find(".vis-edit").click() : (t.aPanel.actionPerformedCallback(t.aPanel, "Multi"), t.aPanel.setLastView("Multi")) } } catch (r) { } } function u(n) { var i, r; return t.readOnly ? !1 : (i = t.grid.columns[n], !t.mTab.getTableModel().getIsInserting() && i.readOnly) ? !1 : (r = i.gridField, r.getIsEditable(!0, !0)) ? !0 : !1 } function e(n, i) { return t.readOnly ? !1 : i == t.indexActiveColumn && t.indexProcessedColumn == -1 ? !0 : o(n) ? !0 : !1 } function o(i) { var r, u; if (t.readOnly || i < 0) return !1; if (t.indexActiveColumn && t.indexActiveColumn > 0) if (r = t.grid.getCellValue(i, t.indexActiveColumn), typeof r == "boolean") { if (!r) return r } else if ("True".equals(r)) { if ("N".equals(r)) return !1 } else return !1; if (t.indexProcessedColumn && t.indexProcessedColumn > 0) if (u = t.grid.getCellValue(i, t.indexProcessedColumn), typeof u == "boolean") { if (u) return !1 } else if ("True".equals(u) || "Y".equals(u)) return !1; var f = s(i), e = f[0], o = f[1], h = f[2]; return n.MRole.canUpdate(e, o, t.AD_Table_ID, h, !1) } function s(i) { var e = -1, u, f, r; return typeof t.indexClientColumn != "undefined" && t.indexClientColumn != -1 && (r = t.grid.getCellValue(i, t.indexClientColumn), r != null && r !== "" && (e = n.Utility.Util.getValueOfInt(r))), u = 0, typeof t.indexOrgColumn != "undefined" && t.indexOrgColumn != -1 && (r = t.grid.getCellValue(i, t.indexOrgColumn), r != null && r !== "" && (u = n.Utility.Util.getValueOfInt(r))), f = 0, typeof t.indexKeyColumn != "undefined" && t.indexKeyColumn != -1 && (r = t.grid.getCellValue(i, t.indexKeyColumn), r != null && r !== "" && (f = n.Utility.Util.getValueOfInt(r))), [e, u, f] } this.grid = null; this.id = null; this.$container = null; this.aPanel = null; this.rendered = !1; this.onSelect = null; this.onCellEditing = null; this.onCellValueChanged = null; this.onSort = null; this.onEdit = null; this.onAdd = null; this.hyperLinkCell = null; this.editColumnIndex = -1; var i = 0, t = this, r = { caption: "", sortable: !1, render: function () { return '<img src="' + n.Application.contextUrl + 'Areas/VIS/Images/base/pencil.png"  />' }, size: "25px" }; this.getEditColumn = function () { return r }; this.onClick = function (n) { (i++, this.readOnly) || (t.skipEditing = !1, this.records.length > 0 && this.records[t.mTab.getCurrentRow()].recid != n.recid && (t.skipEditing = !0)) }; this.onSingleClick = function (n) { i++; singleClickTimer = setTimeout(function () { i === 1 ? (i = 0, f(n)) : i === 2 && (clearTimeout(singleClickTimer), i = 0) }, 400) }; this.onSelectLocal = function (n) { if (t.blockSelect) { t.blockSelect = !1; return } if (t.onSelect) t.onSelect(n) }; this.checkCellEditable = !0; this.onEditField = function (n) { if (t.skipEditing) { t.skipEditing = !1; n.isCancelled = !0; this.select({ recid: n.recid }); return } n.isCancelled = !u(n.column) || n.originalEvent && n.originalEvent.altKey; t.blockSelect = !n.isCancelled }; this.onChange = function (n) { if (t.grid.columns[n.column].editable.type == "checkbox") { if (this.records.length > 0 && this.records[t.mTab.getCurrentRow()].recid != n.recid) { n.isCancelled = !0; return } n.isCancelled = !u(n.column) } n.onComplete = function (n) { var i = { newValue: n.value_new, propertyName: t.grid.columns[n.column].field }; if (t.onCellValueChanged) t.onCellValueChanged(i, t.grid.columns[n.column].editable.type == "checkbox") } }; this.onUnSelect = function () { }; this.onRowAdd = function (n) { t.paintRow(n.index) }; this.cellStyleRender = function (n, i) { var r = t.grid.columns[i]; return !r.selfCellStyleRender && r.gridField && r.gridField.getStyleLogic() != "" ? t.evaluateStyleLogic(n, r.gridField.getStyleLogic()) : null }; this.paintRow = function (n) { var t = this.grid.records[n]; if (!e(n, 0)) { t.style = "background-color:rgba(var(--v-c-secondary), .7)"; return } t && t.style && delete t.style }; this.disposeComponenet = function () { t = null; r = null; this.getEditColumn = null; this.onClick = null } } i.prototype.ROW_ADD = "A"; i.prototype.ROW_DELETE = "D"; i.prototype.ROW_REFRESH = "F"; i.prototype.ROW_UNDO = "U"; i.prototype.evaluateStyleLogic = function (t, i) { var f, e, r, u; for (this.cellRowIndex = t, f = i.split(","), e = null, r = 0; r < f.length; r++)if ((u = f[r].split("?"), u.length == 2) && n.Evaluator.evaluateLogic(this, u[0])) { e = u[1]; break } return e }; i.prototype.setupGridTable = function (i, r, u, f, e, o) { var v, b, a, c, s, g, et, w, nt, y, tt; if (!e.getIsDisplayed(!0)) return 0; this.id = f; this.aPanel = i; this.$container = u; this.mTab = e; this.AD_Table_ID = this.mTab.getAD_Table_ID(); var h = [], l = null, it = r.length, k = 0, d = r.slice(0); for (d.sort(function (n, t) { return n.getMRSeqNo() - t.getMRSeqNo() }), v = -1, b = 0; b < d.length; b++)if (l = d[b], l != null) { a = l.getColumnName(); c = l.getDisplayType(); ++v; l.getIsKey() ? this.indexKeyColumn = v : a.equals("IsActive") ? this.indexActiveColumn = v : a.equals("Processed") ? this.indexProcessedColumn = v : a.equals("AD_Client_ID") ? this.indexClientColumn = v : a.equals("AD_Org_ID") && (this.indexOrgColumn = v); var p = l.getIsDisplayedMR ? l.getIsDisplayedMR() : l.getIsDisplayed(), rt = l.getIsMandatory(!1), ut = l.getIsReadOnly(), ft = l.getIsEditable(!1); l.getIsHeading() || (s = { resizable: !0, selfCellStyleRender: !1 }, s.gridField = l, (ut || !ft) && (s.readOnly = !0), s.caption = l.getHeader(), rt && (s.caption += '<sup style="color:red;font-size: 11px;top: 0;">*<\/sup>'), s.field = a.toLowerCase(), s.hidden = !p, g = s.gridField.getColumnWidth(), s.size = g ? g + "px" : "100px", l.getIsIdentifier() && l.getDisplayType() != n.DisplayType.Image && this.hyperLinkCell == null && s.hidden == !1 && (this.hyperLinkCell = a, s.style = "text-decoration:underline; color:rgba(var(--v-c-primary), 1) !important; cursor:pointer"), c == n.DisplayType.Amount ? (s.sortable = !0, s.customFormat = n.DisplayType.GetNumberFormat(c), s.render = function (n, t, i) { var u = h[i].field, r = n[u]; return r || (r = 0), r = parseFloat(r).toLocaleString(undefined, { minimumFractionDigits: h[i].customFormat.getMinFractionDigit(), maximumFractionDigits: h[i].customFormat.getMaxFractionDigit() }), '<div data-type="int">' + r + "<\/div>" }) : c == n.DisplayType.Integer ? (s.sortable = !0, s.customFormat = n.DisplayType.GetNumberFormat(c), s.render = function (n, t, i) { var u = h[i].field, r = n[u]; if (r) return '<div data-type="int">' + r + "<\/div>" }) : c == n.DisplayType.ProgressBar ? (s.sortable = !0, s.selfCellStyleRender = !0, s.render = function (n, t, i) { var f = h[i].field, e = h[i].gridField, r = "", u; return e.getStyleLogic() != "" && (r = tt.evaluateStyleLogic(t, e.getStyleLogic())), r || (r = ""), u = n[f], n.changes && typeof n.changes[f] != "undefined" && (u = n.changes[f]), '<div class="vis-progress-gridbar" style="' + r + '"><div class="vis-progress-percent-bar" style = "width:' + (u || 0) + "%;" + r + '" ><\/div><div class="vis-progress-gridoutput" > ' + (u || "") + "<\/div><\/div >" }) : n.DisplayType.IsNumeric(c) ? (s.sortable = !0, s.customFormat = n.DisplayType.GetNumberFormat(c), s.render = function (n, t, i) { var u = h[i].field, r = n[u]; if (r) return r = parseFloat(r).toLocaleString(undefined, { minimumFractionDigits: h[i].customFormat.getMinFractionDigit(), maximumFractionDigits: h[i].customFormat.getMaxFractionDigit() }), '<div data-type="int">' + r + "<\/div>" }) : c == n.DisplayType.YesNo ? (s.sortable = !0, et = a.toLowerCase(), s.gridField.getIsSwitch() && (s.render = "switch"), s.editable = { type: "checkbox" }) : c == n.DisplayType.String || c == n.DisplayType.Text || c == n.DisplayType.TextLong || c == n.DisplayType.Memo ? (s.sortable = !0, s.render = l.getIsEncryptedField() ? function (n, t, i) { var u = h[i].field, r = n[u]; return (n.changes && typeof n.changes[u] != "undefined" && (r = n.changes[u]), r = n[h[i].field], r || r === 0) ? r.replace(/\w|\W/g, "*") : "" } : l.getObscureType() ? function (t, i, r) { var u = t[h[r].field]; return u || u === 0 ? n.Env.getObscureValue(h[r].gridField.getObscureType(), u) : "" } : function (n, t, i) { var u = h[i].field, r = n[u]; return (n.changes && typeof n.changes[u] != "undefined" && (r = n.changes[u]), r || r == 0) ? w2utils.encodeTags(r) : "" }) : n.DisplayType.IsLookup(c) || c == n.DisplayType.ID ? (s.sortable = !0, s.lookup = l.getLookup(), p && (s.render = function (i, r, u) { var s = h[u].lookup, k = h[u].field, w = i[k], d = h[u].gridField.getGridImageStyle(), g = h[u].gridField.getWindowNo(), y, p, f, e, v, l, o, c; if (d && (y = h[u].customClass, y || (h[u].customClass = "vis-grd-custom-" + h[u].gridField.getAD_Column_ID() + g, y = ".vis-grd-custom-" + h[u].gridField.getAD_Column_ID() + g + "{" + d + "}", p = document.createElement("style"), p.type = "text/css", p.innerHTML = y, t(t("head")[0]).append(p))), i.changes && typeof i.changes[k] != "undefined", s && (f = s.getDisplay(w, !0, !0)), e = "", s && n.DisplayType.List == s.displayType) { var b = s.getLovIconType(w, !0), a = s.getLOVIconElement(w, !0), o = ""; if (a || (o = f.substring(0, 1)), b == "B") e = "<div class='vis-grid-td-icon-grp'>", e += a ? "<div class='" + h[u].customClass + " vis-grid-row-td-icon'> " + a + "<\/div> " : "<div class='" + h[u].customClass + " vis-grid-row-td-icon'><span>" + o + "<\/span><\/div>", e += "<span> " + f + "<\/span ><div>"; else { if (b == "T") return f; b == "I" && (e = "<div class='vis-grid-td-icon-grp' style='Justify-Content:center'>", e += a ? "<div class='" + h[u].customClass + " vis-grid-row-td-icon'> " + a + "<\/div> " : "<div class='" + h[u].customClass + " vis-grid-row-td-icon'><span>" + o + "<\/span><\/div>", e += "<div>") } } else if (s && s.gethasImageIdentifier()) { if (v = f.indexOf("Images/"), v == -1) return f; for (l = f.substring(v + 7, f.lastIndexOf("^^")), l = n.Application.contextUrl + "Images/Thumb32x32/" + l, f = f.replace("^^" + f.substring(v, f.lastIndexOf("^^") + 2), "^^^"), f.indexOf("Images/") > -1 && (f = f.replace(f.substring(v, f.lastIndexOf("^^") + 2), "^^^")), f = f.split("^^^"), e = "<div class='vis-grid-td-icon-grp'>", o = "", c = 0; c < f.length; c++)f[c].trim().length > 0 && (o.length == 0 && (o = f[c].trim().substring(0, 1).toUpper()), c > 0 && l.indexOf("nothing.png") > -1 && o.length > 0 && (e += "<div class='" + h[u].customClass + " vis-grid-row-td-icon'><span>" + o + "<\/span><\/div>"), e += "<span>" + f[c] + "<\/span>"), (c == 0 || l.indexOf("nothing.png") > -1) && l.indexOf("nothing.png") == -1 && (e += "<div class='" + h[u].customClass + " vis-grid-row-td-icon' > <img src='" + l + "'><\/div > "); +"</div > " } return e == "" ? f : e })) : n.DisplayType.IsDate(c) ? (s.sortable = !0, s.displayType = c, s.render = function (t, i, r) { var o = h[r], e = h[r].field, u = t[e], f; return t.changes && typeof t.changes[e] != "undefined" && (u = t.changes[e]), u ? o.displayType == n.DisplayType.Date ? (f = new Date(u), f.setMinutes(f.getTimezoneOffset() + f.getMinutes()), u = f.toLocaleDateString()) : u = o.displayType == n.DisplayType.DateTime ? new Date(u).toLocaleString() : new Date(u).toTimeString() : u = "", u }) : c == n.DisplayType.Location || c == n.DisplayType.Locator ? (s.sortable = !0, s.lookup = l.getLookup(), p && (s.render = function (n, t, i) { var f = h[i].lookup, u = h[i].field, r = n[u]; return n.changes && typeof n.changes[u] != "undefined" && (r = n.changes[u]), f && (r = f.getDisplay(r, !0), r = w2utils.encodeTags(r)), r })) : c == n.DisplayType.AmtDimension ? (s.sortable = !0, s.lookup = l.getLookup(), p && (s.render = function (n, t, i) { var f = h[i].lookup, u = h[i].field, r = n[u]; return n.changes && typeof n.changes[u] != "undefined" && (r = n.changes[u]), f && (r = f.getDisplay(r, !0), r = w2utils.encodeTags(r)), r })) : c == n.DisplayType.ProductContainer ? (s.sortable = !0, s.lookup = l.getLookup(), p && (s.render = function (n, t, i) { var f = h[i].lookup, u = h[i].field, r = n[u]; return n.changes && typeof n.changes[u] != "undefined" && (r = n.changes[u]), f && (r = f.getDisplay(r, !0), r = w2utils.encodeTags(r)), r })) : c == n.DisplayType.Account || c == n.DisplayType.PAttribute ? (s.sortable = !0, s.lookup = l.getLookup(), p && (s.render = function (n, t, i) { var f = h[i].lookup, u = h[i].field, r = n[u]; return n.changes && typeof n.changes[u] != "undefined" && (r = n.changes[u]), f && (r = f.getDisplay(r, !0), r = w2utils.encodeTags(r)), r })) : c == n.DisplayType.PAttribute ? (s.sortable = !0, s.render = "int") : c == n.DisplayType.Button ? s.sortable = !0 : c == n.DisplayType.Image ? (s.sortable = !0, s.render = function (i, r, u) { var s = h[u].field, c = h[u].gridField.getGridImageStyle(), l = h[u].gridField.getWindowNo(), e, o, f; return (c && (e = h[u].customClass, e || (h[u].customClass = "vis-grd-custom-" + h[u].gridField.getAD_Column_ID() + l, e = ".vis-grd-custom-" + h[u].gridField.getAD_Column_ID() + l + "{" + c + "}", o = document.createElement("style"), o.type = "text/css", o.innerHTML = e, t(t("head")[0]).append(o))), f = i["imgurlcolumn" + s], i.changes && typeof i.changes[s] != "undefined" && (f = i.changes[s]), !f) ? '<div class="vis-grid-row-td-icon-center">-<\/div>' : (f = f.toString().replace("Images/", "Images/Thumb32x32/"), e ? '<div class="vis-grid-row-td-icon-center"><div class="' + h[u].customClass + ' vis-grid-row-td-icon"><img src="' + n.Application.contextUrl + f + '"><\/div><\/div>' : '<div class="vis-grid-row-td-icon-center"><div class="vis-grid-row-td-icon"><img src="' + n.Application.contextUrl + f + '"><\/div><\/div>') }) : n.DisplayType.IsLOB(c) ? (s.sortable = !0, s.render = function (n, t, i) { var u = h[i].field, r = n[u]; return n.changes && typeof n.changes[u] != "undefined" && (r = n.changes[u]), r || (r = ""), "#" + r.toString().length }) : (s.sortable = !0, s.render = function (n, t, i) { var u = h[i].field, r = n[u]; return (n.changes && typeof n.changes[u] != "undefined" && (r = n.changes[u]), r || r == 0) ? w2utils.encodeTags(r) : "" }), l.getHtmlStyle() != "" && (s.style = l.getHtmlStyle()), s.hidden || k++, h.push(s), s.columnName = a, w = n.VControlFactory.getControl(e, l, !1, !1, !1), w.setReadOnly(!1), s.editable || (s.editable = { type: "custom", ctrl: w }), w.addVetoableChangeListener(o), w instanceof n.Controls.VButton && w.addActionListner(i)) } if (k > 0) { nt = Math.floor(100 / k); for (y in h) h[y].hidden || (!h[y].size < 0 && (h[y].size = nt + "%", h[y].min = 100), this.hyperLinkCell == null && (this.hyperLinkCell = h[y].columnName, h[y].style = "text-decoration:underline; color:rgba(var(--v-c-primary), 1) !important; cursor:pointer")) } return this.grid = t().w2grid({ name: f, autoLoad: !1, columns: h, records: [], show: { toolbar: !1, columnHeaders: !0, lineNumbers: !1, selectColumn: !0, toolbarReload: !1, toolbarColumns: !0, toolbarSearch: !1, toolbarAdd: !1, toolbarDelete: !1, toolbarSave: !1, selectionBorder: !1, recordTitles: !1 }, recordHeight: 41, onSelect: this.onSelectLocal, onUnselect: this.onUnSelect, onSort: this.onSort, onClick: this.onSingleClick, onDblClick: this.onClick, onEditField: this.onEditField, onChange: this.onChange, onRowAdd: this.onRowAdd, onCellStyleRender: this.cellStyleRender }), tt = this, it }; i.prototype.getValueAsString = function (n) { var i = this.grid.records[this.cellRowIndex], t = this.grid.parseField(i, n.toLowerCase()); return t ? t.toString() : "" }; i.prototype.get = function (n, t) { return this.grid.get(n, t) }; i.prototype.activate = function () { this.grid && !this.rendred && (this.$container.w2render(this.grid.name), this.rendred = !0) }; i.prototype.setReadOnly = function (n) { this.readOnly = n }; i.prototype.getGrid = function () { return this.grid }; i.prototype.select = function (n) { var t = this.grid.getSelection(); if (t.indexOf(n) == -1) { if (t.length == 1) this.grid.unselect(t[0]); else if (t.length > 1) while (t.length > 0) this.grid.unselect(t.pop()); return this.grid.select(n) } }; i.prototype.add = function (n) { this.grid.add(n) }; i.prototype.clear = function () { this.grid.clear(!0); this.grid.reset() }; i.prototype.refresh = function () { this.grid.refresh(); console.log("refresh") }; i.prototype.resize = function () { this.grid.resize() }; i.prototype.setRow = function (n) { isNaN(n) ? this.grid.set(n.recid, n) : this.grid.set(n) }; i.prototype.refreshRow = function (n, t) { if (!(this.grid.records.length < 1)) { var i = this.mTab.getCurrentRow(); i < 0 || (typeof n != "undefined" && (i = n), this.paintRow(t ? this.grid.get(n, !0) : i), this.grid.clearRowChanges(t ? n : this.grid.records[i].recid)) } }; i.prototype.refreshCells = function () { if (!(this.grid.records.length < 1)) { var n = this.mTab.getCurrentRow(); this.paintRow(n); this.grid.refreshRow(this.grid.records[n].recid) } }; i.prototype.refreshUndo = function () { if (!(this.grid.records.length < 1)) { var n = this.mTab.getCurrentRow(); this.grid.clearRowChanges(this.grid.records[n].recid); this.paintRow(n); this.grid.refreshRow(this.grid.records[n].recid) } }; i.prototype.getSelection = function (n) { return this.grid.getSelection(n) }; i.prototype.getSelectedRows = function () { for (var t = this.grid.getSelection(!0), i = [], n = 0, r = t.length; n < r; n++)i.push(this.grid.records[t[n]]); return i }; i.prototype.getColumnNames = function () { for (var t = this.grid.columns, i = {}, n = 0, r = t.length; n < r; n++)i[t[n].columnName] = t[n].caption; return i }; i.prototype.scrollInView = function (n) { this.grid.scrollIntoView(n) }; i.prototype.tableModelChanged = function (t, i, r) { var u, f, e; if (this.blockSelect = !0, t === n.VTable.prototype.ROW_REFRESH) this.setRow(i), this.refreshRow(i.recid, !0); else { if (u = null, t === n.VTable.prototype.ROW_UNDO) this.grid.unselect(i), this.grid.remove(i), r >= this.grid.records.length - 1 && this.grid.records.length > 0 ? (this.blockSelect = !1, u = this.grid.records[this.grid.records.length - 1].recid) : r < this.grid.records.length && (u = this.grid.records[r].recid); else if (t === n.VTable.prototype.ROW_ADD) this.grid.records.splice(r, 0, i), u = i.recid, this.grid.refresh(), this.blockSelect = !0; else if (t === n.VTable.prototype.ROW_DELETE) { for (f = i.slice(); f.length > 0;)e = f.pop(), this.grid.unselect(e), this.grid.remove(e); isNaN(r) ? u = r[0] : this.grid.records.length > 0 && (u = this.grid.records[this.grid.records.length - 1 < r ? this.grid.records.length - 1 : r].recid) } u && this.select(u); t !== n.VTable.prototype.ROW_ADD || this.aPanel.curGC.getIsCardRow() || this.aPanel.curGC.getIsSingleRow() || this.aPanel.curGC.getIsMapRow() || this.setDefaultFocus() } this.blockSelect = !1 }; i.prototype.setDefaultFocus = function (n) { if (this.mTab.defaultFocusField) { n || (n = this.mTab.defaultFocusField.getColumnName()); var t = this.grid.getSelection(), i = this.grid.getColumn(n.toLower(), !0); t && t.length > 0 && window.setTimeout(function () { this.grid.editField(t[0], i) }.bind(this), 200) } }; i.prototype.dispose = function () { var n, t; this.grid.off("select", this.onSelect); this.grid.off("sort", this.onSort); this.grid.off("click", this.onClick); this.onSelect = null; this.onSort = null; n = this.grid.columns; for (t in n) n[t].editable.ctrl && n[t].editable.ctrl.dispose(); this.grid.destroy(); this.grid = null; this.id = null; this.$container = null; this.rendered = null; this.disposeComponenet() }; n.VTable = i }(VIS, jQuery), function (n, t) { function i() { function y(t, i) { var u = new google.maps.Marker({ position: t, animation: google.maps.Animation.DROP, map: n, title: i }); u.info = new google.maps.InfoWindow({ content: i }); u.info.open(n, u); google.maps.event.addListener(u, "click", function () { this.info.open(n, this) }); r.push(u) } function p(n, t, i) { window.setTimeout(function () { y(n, t) }, i) } function a(n) { for (var t = 0; t < r.length; t++)r[t].setMap(n), google.maps.event.clearListeners(r[t], "click"), r[t].info = null } function w() { a(null) } function v() { w(); r = [] } function b() { v(); n = null } function k() { n || (n = new google.maps.Map(f[0], c), d()) } function d() { var r = "", t = i.mapFields, n; if (t.length > 1) { for (n = 0; n < t.length; n++)r += "<option value=" + t[n].getColumnName() + " >" + t[n].getHeader() + "<\/option>"; o.html(r); o[0].selectedIndex = 0; nt() } else s.hide(), f.css("top", "0") } function g() { f = t('<div class="vis-mv-map">'); e = t('<div class="vis-apanel-busy vis-full-height">').hide(); s = t('<div class="vis-mv-header"> <select class="vis-mv-select vis-pull-right" /> <\/div>'); o = s.find(".vis-mv-select"); h.append(s).append(f).append(e); l && (c = { center: new google.maps.LatLng(26, 76), zoom: 4, mapTypeId: google.maps.MapTypeId.ROADMAP }) } function nt() { o.on("change", function () { i.setBusy(!0); i.curIndex = this.selectedIndex; i.setMapData(i.mapcols[i.curIndex]) }) } var n = null, h = t('<div class="vis-mv-main">'), f = "", e = "", r = [], c, u = null, o = null, s = null, i = this, l = window.google && google.maps ? !0 : !1; g(); this.setBusy = function (n) { n ? e.show() : e.hide() }; this.getRoot = function () { return h }; this.sizeChanged = function () { }; this.setMapData = function (t) { var e, r, f; if (l) { for (k(), v(), u = null, u = new google.maps.LatLngBounds, google.maps.event.trigger(n, "resize"), e = t.length, r = 0; r < e; r++)if (t[r].Latitude && t[r].Longitude) { f = null; try { f = new google.maps.LatLng(Number(t[r].Latitude), Number(t[r].Longitude)); p(f, t[r].msg, 100); u.extend(f); n.fitBounds(u) } catch (o) { console.log(o) } } n.fitBounds(u); i.setBusy(!1) } }; this.dc = function () { b(); h.remove(); this.cols = this.gc = this.aPanel = this.mapcols = null; this.mapFields = null; this.curIndex = 0; this.getRoot = null; this.dc = null } } i.prototype.setupMapView = function (n, t, i, r) { var u, f, e; for (this.mapFields = [], u = i.getMapColumns(), f = 0; f < u.length; f++)e = i.getField(u[f]), e && this.mapFields.push(e); this.cols = u; this.gc = t; this.aPanel = n; this.mapcols = {}; this.curIndex = 0; r.append(this.getRoot()) }; i.prototype.refreshUI = function () { var u = this.gc.getSelectedRows(), o = u.length, s, n, t, i, r; if (!(u.length < 1) && !(this.cols.length < 1)) { for (s = [[]], n = 0; n < this.cols.length; n++) { var h = this.cols[n], f = this.mapFields[n].getLookup(), e = []; for (t = 0; t < o; t++)i = u[t][h.toLowerCase()], i && (r = f.getLatLng(i), r && (r.msg = f.getDisplay(i), e.push(r))); this.mapcols[n] = e } this.setMapData(this.mapcols[this.curIndex]) } }; i.prototype.dispose = function () { this.dc() }; n.VMapView = i }(VIS, jQuery), function (n, t) { function h(n, i, r) { var u = null; return t.ajax({ url: l, type: "POST", datatype: "json", contentType: "application/json; charset=utf-8", async: i, data: JSON.stringify(n) }).done(function (n) { u = n; r && r(n) }), u } var r = "G", u = "S", f = "C", e = "N", o = "Y", s = document.querySelector("#vis-ad-viewctrltmp").content, c = function (t, i, r) { var f = r ? !0 : !1, e = { sql: t, page: 1, pageSize: 0 }, u; return i && (e.param = i), u = null, h(e, f, function (t) { i = (new n.DB.DataSet).toJson(t); var i = (new n.DB.DataSet).toJson(t); u = i.getTable(0).getRows().length > 0 ? i.getTable(0).getRow(0).getCell(0) : null; i.dispose(); i = null; f && r(u) }), u }, i = n.Application.contextUrl, a = i + "Form/JDataSet", l = i + "JsonData/JDataSetWithCode"; n.GridController = function (i, r, u) { function tt() { var n = document.importNode(s, !0); e = t(n.querySelector(".vis-ad-w-p-vc")).hide(); d = e.find(".vis-ad-w-p-vc-tree").hide(); v = e.find(".vis-ad-w-p-vc-actions").hide(); y = e.find(".vis-ad-w-p-vc-header"); h = t("<div class='vis-gc-vtable'>"); o = t("<div class='vis-ad-w-p-vc-editview' id='AS_" + u + "'>"); l = t("<div class='vis-gc-vcard'>"); a = t("<div class='vis-gc-vmap'>"); g = e.find(".vis-ad-w-p-vc-gc"); g.append(h).append(o).append(l).append(a) } function it() { nt = new n.AppsAction({ action: "new", parent: null, enableDisable: !0, toggle: !1, imageOnly: !0, isSmall: !0, onAction: k }); p = new n.AppsAction({ action: "edit", parent: null, enableDisable: !0, toggle: !1, imageOnly: !0, isSmall: !0, onAction: k }); v.append(p.getListItm()).append(nt.getListItm()) } var c, f, k; this.id = u; this.vGridPanel = new n.VGridPanel; this.vTable = new n.VTable; this.vCardView = new n.VCardView; this.vMapView = new n.VMapView; this.vHeaderPanel = null; this.windowNo = 0; this.aPanel = null; this.singleRow = !1; this.isCardRow = !1; this.doPaging = r; this.vIncludedGC = null; this.m_tree = null; this.onRowInserted = null; this.onRowInserting = null; this.rightPaneLinkItems = []; this.leftPaneLinkItems = []; this.showClient = !1; this.showOrg = !1; c = n.Env.getCtx().getShowClientOrg(); c == n.Env.SHOW_CLIENT_ONLY ? this.showClient = !0 : c == n.Env.SHOW_ORG_ONLY ? this.showOrg = !0 : c == n.Env.SHOW_CLIENT_ORG && (this.showOrg = !0, this.showClient = !0); this.isParentDetailVisible = !1; this.isIncludedGCVisible = !1; this.displayAsIncludedGC = !1; var o, l, a, v, e, y, w = [], h, d, g, b = null, nt, p = null; tt(); f = this; k = function (n) { if (n == "edit") { if (f.displayAsIncludedGC) { f.aPanel.tabActionPerformed(f.id) && f.switchSingleRow(); return } } else if (f.displayAsIncludedGC) { if (!f.aPanel.tabActionPerformed(f.id)) return; f.switchSingleRow(); setTimeout(function (n) { n.aPanel.cmd_new() }, 500, f) } }; it(); this.initLayout = function () { this.layoutLoaded = !0 }; this.sizeChanged = function () { }; this.sizeChanged(); o.append(this.vGridPanel.getRoot()); this.getRoot = function () { return e }; this.getTreeArea = function () { return d }; this.getId = function () { return u }; this.setRecord = function () { }; this.getVTablePanel = function () { return h }; this.getVPanel = function () { return o }; this.getVCardPanel = function () { return l }; this.getVMapPanel = function () { return a }; this.setUI = function (n) { n ? (y.html(this.gTab.getName()), y.css("display", "block"), v.css("display", "flex"), p.setEnabled(!1), this.vTable.grid.show.selectColumn = !1) : (y.css("display", "none"), v.css("display", "none"), this.vTable.grid.show.selectColumn = !0) }; this.enableDisableToolbarItems = function (n) { p.setEnabled(n) }; this.vTable.onSelect = function (n) { f.aPanel && f.aPanel.setBusy && f.aPanel.setBusy(!0); f.cancelSel = !1; f.onTableRowSelect(n); f.cancelSel && (n.isCancelled = !0); f.aPanel && f.aPanel.setBusy && f.aPanel.setBusy(!1) }; this.vTable.onCellValueChanged = function (n, t) { t ? window.setTimeout(function () { f.vetoablechange(n); f.vTable.refreshCells() }, 10) : (f.vetoablechange(n), f.vTable.refreshCells()) }; this.vCardView.onCardEdit = function (n, t) { f.onTableRowSelect(n); t || (f.aPanel.actionPerformedCallback(f.aPanel, "Multi"), f.aPanel.setLastView("Card")) }; this.vTable.onSort = function () { window.setTimeout(function () { f.navigate(f.gTab.getCurrentRow(), !0) }, 10) }; this.disposeComponent = function () { this.rightPaneLinkItems.length = 0; this.rightPaneLinkItems = null; this.leftPaneLinkItems.length = 0; this.leftPaneLinkItems = null; h = null; $divRecords = null; for (var n = 0; n < w.length; n++)w[n].dispose("ul_" + this.id); w = null; this.seletedTab = null; this.vGridPanel.dispose(); this.vGridPanel = null; this.vCardView.dispose(); this.vCardView.onSelect = null; this.vMapView.dispose(); this.vTable.dispose(); this.vTable.onSelect = null; this.vTable.onSort = null; this.vTable = null; h = null; o = null; l = null; a = null; f = null; this.getId = null; this.getReocrdDiv = null; this.getRoot = null; this.getVTablePanel = null; this.getVPanel = null; this.getVCardPanel = null; e.remove(); e = null; b && b.destroy(); b = null; this.onRowInserted = null } }; n.GridController.prototype.initTabPanel = function (t, i) { this.vTabPanel = new n.VTabPanel(i, t); this.vTabPanel.init(this.getMTab()); this.vTabPanel.addSizeChangeListner(this) }; n.GridController.prototype.initHeaderPanel = function (t) { this.vHeaderPanel = new n.HeaderPanel(t); this.vHeaderPanel.init(this); this.vHeaderPanel.addSizeChangeListner(this) }; n.GridController.prototype.initFilterPanel = function (t) { this.aFilterPanel = new n.FilterPanel(t, this) }; n.GridController.prototype.initFilterUI = function () { this.aFilterPanel && this.aFilterPanel.init() }; n.GridController.prototype.getTabPanel = function () { return this.vTabPanel.getRoot() }; n.GridController.prototype.getFilterPanel = function () { return this.aFilterPanel.getRoot() }; n.GridController.prototype.onSizeChanged = function () { this.multiRowResize(); this.vIncludedGC && this.vIncludedGC.multiRowResize() }; n.GridController.prototype.refreshTabPanelData = function (n) { this.vTabPanel && this.vTabPanel.refreshPanelData(n, this.gTab.getTableModel().getRow(this.gTab.getCurrentRow())) }; n.GridController.prototype.refreshFilterPanelData = function () { this.aFilterPanel && this.aFilterPanel.refreshFilterOptions("", !0) }; n.GridController.prototype.initGrid = function (t, i, r, u) { var w = u.gridTable.gridFields, h = null, d = i + "_" + u.vo.AD_Tab_ID, g = i + "_c" + u.vo.AD_Tab_ID, nt = i + "_m" + u.vo.AD_Tab_ID, p, b, a, s, l, k, v, y; if (u.getTableModel().setDoPaging(this.doPaging), p = n.MRole, p.getIsDisplayClient() && this.showClient || u.getField("AD_Client_ID").setDisplayed(!1), p.getIsDisplayOrg() && this.showOrg || u.getField("AD_Org_ID").setDisplayed(!1), b = this.vTable.setupGridTable(r, w, this.getVTablePanel(), d, u, this), u.addDataStatusListener(this), !t) { for (this.vCardView.setupCardView(r, u, this.getVCardPanel(), g), u.getIsMapView() && this.vMapView.setupMapView(r, this, u, this.getVMapPanel(), nt), a = 0; a < b; a++)if (h = w[a], h.getIsDisplayed()) { if (s = n.VControlFactory.getControl(u, h, !1, !1, !1), s == null && !h.getIsHeading()) continue; s != null && (s.setReadOnly(!0), h.setPropertyChangeListener(s), s.addVetoableChangeListener(this)); this.vGridPanel.addField(s, h); s instanceof n.Controls.VButton && (h.getIsLink() && h.getIsRightPaneLink() && this.rightPaneLinkItems.push(s), s.addActionListner(this)); s = null } this.vGridPanel.flushLayout() } l = 0; u.getIsTreeTab() && (k = "VIS_120", v = [], v[0] = new n.DB.SqlParam("@AD_Client_ID", n.Env.getCtx().getAD_Client_ID()), v[1] = new n.DB.SqlParam("@AD_Table_ID", u.getAD_Table_ID()), l = c(k, v), l > 0 && (this.treeID = l, u.getShowSummaryLevel() ? (this.onDemandTree = !0, this.m_tree = new n.TreePanel(i, !1, !0, !0, this), r.aShowSummaryLevel.show()) : (this.onDemandTree = !1, this.m_tree = new n.TreePanel(i, !1, !0, !1, this), r.aShowSummaryLevel.hide()), this.m_tree.setTabID(u.getAD_Tab_ID()), u.getTabNo() == 0 && this.m_tree.initTree(l), this.getTreeArea().append(this.m_tree.getRoot()), this.m_tree.addSelectionChangeListner(this), this.getTreeArea().show())); u.getTableModel().addTableModelListener(this.vTable); u.getTableModel().addCardModelListener(this.vCardView); u.getTableModel().addRowChangedListener(this); u.getTableModel().addQueryCompleteListner(this); u.getTableModel().setDoPaging(this.doPaging); u.getTableModel().setCurrentPage(1); this.gTab = u; this.windowNo = i; this.onlyMultiRow = t; this.aPanel = r; y = u.getTabLayout(); y == e ? this.singleRow = !1 : y == o ? this.switchSingleRow(!0) : y == f && (this.isCardRow = !1, this.switchCardRow(!0)) }; n.GridController.prototype.getIsHeaderPanel = function () { return this.gTab.getIsHeaderPanel() }; n.GridController.prototype.detachDynamicAction = function () { for (var n = 0, t = 0, n = 0, t = this.leftPaneLinkItems.length; n < t; n++)this.leftPaneLinkItems[n].getControl().detach(); for (n = 0, t = this.rightPaneLinkItems.length; n < t; n++)this.rightPaneLinkItems[n].getControl().detach(); n = null; t = null; this.vTabPanel && this.vTabPanel.getRoot().detach(); this.aFilterPanel && this.aFilterPanel.getRoot().detach() }; n.GridController.prototype.switchRowPresentation = function () { this.singleRow ? this.switchMultiRow() : this.switchSingleRow() }; n.GridController.prototype.getIsSingleRow = function () { return this.singleRow }; n.GridController.prototype.getIsCardRow = function () { return this.isCardRow }; n.GridController.prototype.getIsMapRow = function () { return this.isMapRow }; n.GridController.prototype.onTableRowSelect = function (n) { var t, i, r; if (!this.rowSetting && this.gTab.getRowCount() != 0) { if (t = this.vTable.get(n.recid, !0), i = this.gTab.getCurrentRow(), t == -1 && i >= 0) { this.vTable.select(n.recid); this.vCardView.navigate(n.recid, !this.isCardRow); return } if (t != i) this.rowSetting = !0, this.navigate(t), this.rowSetting = !1; else if (!this.settingGridSelecton) return; this.dynamicDisplay(-1); r = this; this.getIsSingleRow() ? r.notifyDependents() : window.setTimeout(function () { r.notifyDependents() }, 50) } }; n.GridController.prototype.switchIncludedGC = function () { this.vIncludedGC != null && this.switchIncludedGC() }; n.GridController.prototype.dynamicDisplay = function (t) { var v, e, r, u, i, o, f, s, l, a; if (this.gTab != null && !this.isCardRow && !this.isMapRow) { if (v = this.gTab.getRecord_ID(), !this.getIsSingleRow()) { this.dynamicDisplayLinks(t); return } if (this.gTab.getIsOpen()) { if (t >= 0) { var h = this.gTab.getField(t), u = h.getColumnName(), y = this.gTab.getDependantFields(u); if (y.length == 0 && h.getCallout().length > 0) return } var p = this.gTab.getRowCount() == 0, c = this.vGridPanel.getComponents(), w = c.length; for (e = 0; e < w; e++)r = c[e], u = r.getName(), u != null && (u.startsWith("lbl") && (u = u.substring(3)), i = this.gTab.getField(u), i != null && (i.getIsDisplayed(!0) ? (o = r.tag, !r.getIsVisible() && (o == null || o == "undefined" || o) && (r.setVisible(!0), this.vGridPanel.setVisible(u, !0)), r instanceof n.Controls.IControl && (f = r, p ? f.setReadOnly(!0) : (s = i.getIsEditable(!0) && !this.gTab.getIsReadOnly(), f.setReadOnly(!s), f.showObscureButton && f.showObscureButton(s), f.setMandatory(i.getIsMandatory(!0)), f.setBackground(i.getIsError()), !i.getIsDefaultFocus() || this.isDefaultFocusSet || r.getName().startsWith("lbl") || (f.setDefaultFocus(!0), this.isDefaultFocusSet = !0), r.getName().startsWith("lbl") || i.getStyleLogic() == "" || (l = i.getStyleLogic().split(","), a = this.evaluateStyleCondition(i, l), f.setHtmlStyle(a))))) : r.getIsVisible() && (r.setVisible(!1), this.vGridPanel.setVisible(u, !1)), i.getIsDisplayed(!0) || i.getIsMandatory(!0) || i.setError(!1))) } } }; n.GridController.prototype.evaluateStyleCondition = function (t, i) { for (var f = null, u, r = 0; r < i.length; r++)if ((u = i[r].split("?"), u.length == 2) && n.Evaluator.evaluateLogic(t, u[0])) { f = u[1]; break } return f }; n.GridController.prototype.dynamicDisplayLinks = function () { var s, o, f, t, r, i, e, u, h; if (!this.displayAsIncludedGC) for (s = this.gTab.getRowCount() == 0, o = this.vGridPanel.getLinkComponents(), f = 0; f < o.length; f++)t = o[f], r = t.getName(), r != null && (r.startsWith("lbl") && (r = r.substring(3)), i = this.gTab.getField(r), i != null && (i.getIsDisplayed(!0) ? (e = t.tag, !t.getIsVisible() && (e == null || e == "undefined" || e) && t.setVisible(!0), t instanceof n.Controls.IControl && (u = t, s ? u.setReadOnly(!0) : (h = i.getIsEditable(!0) && !this.gTab.getIsReadOnly(), u.setReadOnly(!h), u.setMandatory(i.getIsMandatory(!0)), u.setBackground(i.getIsError())))) : t.getIsVisible() && t.setVisible(!1), i.getIsDisplayed(!0) || i.getIsMandatory(!0) || i.setError(!1))) }; n.GridController.prototype.setDefaultFocus = function () { for (var e = this.gTab.getRowCount() == 0, r = this.vGridPanel.getComponents(), f = r.length, u, t, i, n = 0; n < f; n++)if (u = r[n], t = u.getName(), t != null && (i = this.gTab.getField(t), i != null && i.getIsDefaultFocus())) { this.vTable.setDefaultFocus(t); break } }; n.GridController.prototype.setVisible = function (n) { this.layoutLoaded || this.initLayout(); n ? (this.getRoot().show(), this.vTable.resize()) : this.getRoot().hide() }; n.GridController.prototype.getMTab = function () { return this.gTab }; n.GridController.prototype.getAPanel = function () { return this.aPanel }; n.GridController.prototype.getIsDisplayed = function () { return this.gTab.getIsDisplayed(!1) }; n.GridController.prototype.getTabLevel = function () { return this.gTab.getTabLevel() }; n.GridController.prototype.getTitle = function () { return this.gTab.getName() }; n.GridController.prototype.getSelection = function (n) { return this.vTable.getSelection(n) }; n.GridController.prototype.getSelectedRows = function () { return this.vTable.getSelectedRows() }; n.GridController.prototype.getColumnNames = function () { var t, i, n; if (this.colNames) return this.colNames; for (t = this.gTab.getTableModel().getFields(), i = {}, n = 0; n < t.length; n++)i[t[n].getColumnName()] = t[n].getHeader(); return this.colNames = i, this.colNames }; n.GridController.prototype.setMnemonics = function () { }; n.GridController.prototype.activate = function (n) { var t, i; this.vTable.activate(); n = n || {}; this.vTable.setReadOnly(!1); this.displayAsIncludedGC ? (i = this.aPanel.getLayout(), this.setUI(!1), this.getRoot().detach(), i.append(this.getRoot()), this.displayAsIncludedGC = !1, this.aPanel.getIncludedEmptyArea().css({ display: "none" })) : this.gTab.getIncluded_Tab_ID() == 0 && (t = n.vIncludedGC, t && (i = t.aPanel.getLayout(), t.setUI(!1), t.getRoot().detach(), this.aPanel.getIncludedEmptyArea().css({ display: "none" }))); this.isIncludedGCVisible = !1; this.vIncludedGC && (this.vIncludedGC.displayAsIncludedGC = !1, this.vIncludedGC.isIncludedGCVisible = !1); this.activateTree() }; n.GridController.prototype.multiRowResize = function () { this.singleRow || this.isCardRow || this.vTable.resize() }; n.GridController.prototype.activateTree = function () { var t, i, r, e, o, s, u, f; if (this.gTab.getIsTreeTab() && this.gTab.getTabNo() > 0) { if (t = 0, this.gTab.getTabLevel() > 0 && (i = this.gTab.getKeyColumnName(), r = "AD_Tree_ID", i.startsWith("CM") && (i.equals("CM_Container_ID") ? r = "AD_TreeCMC_ID" : i.equals("CM_CStage_ID") ? r = "AD_TreeCMS_ID" : i.equals("CM_Template_ID") ? r = "AD_TreeCMT_ID" : i.equals("CM_Media_ID") && (r = "AD_TreeCMM_ID")), t = n.Env.getCtx().getWindowContextAsInt(this.windowNo, r)), t == 0) { if (e = this.gTab.getAD_Table_ID(), o = n.Env.getCtx().getAD_Client_ID(), e == 0) return 0; s = "VIS_121"; u = []; u[0] = new n.DB.SqlParam("@AD_Client_ID", o); u[1] = new n.DB.SqlParam("@AD_Table_ID", e); f = executeReader(s, u); f.read() && (t = f.getInt(0)); f = null } this.m_tree != null && t > 0 && this.m_tree.initTree(t) } }; n.GridController.prototype.nodeSelectionChanged = function (n) { var u, t, f, r, i; if (n != null && (u = n.newValue, u != null)) { if (t = u, this.treeNodeID = t, this.onDemandTree) { this.aPanel && this.aPanel.setBusy && this.aPanel.setBusy(!0); this.gTab.setTreeNodeID(t); this.gTab.gridTable.setCurrentPage(1); this.navigate(0); this.query(0, 0, !1, t, this.treeID, this.gTab.getAD_Table_ID()); return } for (f = this.gTab.getRowCount(), r = -1, i = 0; i < f; i++)if (this.gTab.getKeyID(i) == t) { r = i; break } r != -1 && this.navigate(r) } }; n.GridController.prototype.skipRowInserting = function (n) { this.skipInserting = n }; n.GridController.prototype.query = function (n, t, i, r, u, f) { this.aPanel && this.aPanel.setBusy && this.aPanel.setBusy(!0); this.onDemandTree && (r && this.gTab.setTreeNodeID(r), u && this.gTab.setTreeID(u), f && this.gTab.setTreeTable(f), this.aPanel.isSummaryVisible ? this.gTab.setShowSummaryNodes(!0) : this.gTab.setShowSummaryNodes(!1)); var e = this.gTab.prepareQuery(n, t, i, !1) }; n.GridController.prototype.applyFilters = function (n) { var t = [], r, i; this.searchCode && this.searchCode != "" && t.push(this.searchCode); r = n.getWhereClause(); r != "" && t.push(n.getWhereClause()); this.aFilterPanel && (i = this.aFilterPanel.getFilterClause(), i != "" && t.push(i)); n.clear(); t.length > 0 ? n.addRestriction(t.join(" AND ")) : n = null; this.getMTab().getTableModel().setCurrentPage(1); this.getMTab().setQuery(n); this.query(0, 0, null) }; n.GridController.prototype.queryCompleted = function () { this.vTable.clear(); this.gTab.clearSelectedRow(); this.vTable.add(this.gTab.getTableModel().getDataTable()); this.gTab.getTableModel().setSortModel(this.vTable.getGrid().records); this.displayAsIncludedGC || (this.onRowInserting ? this.onRowInserting() : this.checkInsertNewRow()); this.navigate(this.gTab.getCurrentRow(), !this.gTab.getTableModel().getIsInserting()); this.isCardRow && this.vCardView.refreshUI(this.getVCardPanel().width()); this.isMapRow && this.vMapView.refreshUI(this.getVMapPanel().width()); this.aPanel && this.aPanel.setBusy(this.isCardRow); this.skipInserting = !1; this.dynamicDisplay(-1) }; n.GridController.prototype.checkInsertNewRow = function () { if (this.aPanel == null || this.aContentPane) return !1; var t = !0, i = this.gTab.getLinkColumnName(), r = n.context.getWindowContext(this.windowNo, i); return (i.Length > 0 && r.length == 0 && (t = !1), (this.gTab.getTableModel().getTotalRowCount() == 0 || this.gTab.getTableModel().getTotalRowCount() == null) && !this.gTab.getIsReadOnly() && this.gTab.getIsZoomAction() == !0 && (this.gTab.getIsZoomAction() == !0 || n.context.getIsAutoNew(this.windowNo) || this.gTab.getIsQueryNewRecord()) && t && this.gTab.getIsInsertRecord() && !this.skipInserting) ? (this.setNewRecordLayout(), this.dataNew(!1), !0) : !1 }; n.GridController.prototype.setNewRecordLayout = function () { var n = this.gTab.getNewRecordView(); n == u ? this.switchSingleRow() : n == r ? (this.isNewClick = !0, this.switchMultiRow()) : this.getIsCardRow() && this.switchSingleRow() }; n.GridController.prototype.vetoablechange = function (n) { var t = this.gTab.getTableModel(), i = this.gTab.getCurrentRow(), r = t.findColumn(n.propertyName); t.setValueAt(n.newValue, i, r) }; n.GridController.prototype.actionPerformed = function (n) { if (this.aContentPane) { this.aContentPane.actionPerformed(n); return } this.aPanel.actionPerformed(n) }; n.GridController.prototype.refreshUI = function () { this.dataRefreshAll() }; n.GridController.prototype.navigate = function (i, r) { var u; if (!r && i == this.gTab.getCurrentRow()) return this.gTab.getCurrentRow(); if (u = this.gTab.navigate(i, !0, r), u > -1 && !this.rowSetting ? (this.settingGridSelecton = !0, this.vTable.select(u), this.settingGridSelecton = !1, this.vCardView.navigate(u, !this.isCardRow)) : u > -1 && this.isCardRow && (this.settingGridSelecton = !0, this.vTable.select(u), this.settingGridSelecton = !1, this.vCardView.navigate(u, !0)), this.vHeaderPanel && this.vHeaderPanel.navigate(), u == -1) { this.cancelSel = !0; return } if (u > -1 && this.refreshTabPanelData(this.gTab.getRecord_ID()), this.m_tree != null && this.m_tree.setSelectedNode(this.gTab.getRecord_ID()), this.vTable.scrollInView(i), this.onDemandTree) { var f = this.gTab.getRecord_ID(), e = this.treeID, o = this.aPanel; t.ajax({ url: n.Application.contextUrl + "JsonData/GetTreeNodePath", data: { nodeID: f, treeID: e }, success: function (n) { var t = JSON.parse(n); o.setStatusLine(t) }, error: function (n) { console.log(n) } }) } return this.gTab.getCurrentRow() }; n.GridController.prototype.navigatePageExact = function (n) { this.gTab.getTableModel().setCurrentPage(n); this.query(this.gTab.getOnlyCurrentDays(), 0, !1, this.treeNodeID, this.treeID, this.gTab.getAD_Table_ID()) }; n.GridController.prototype.navigatePage = function (n) { this.gTab.getTableModel().setCurrentPageRelative(n); this.query(this.gTab.getOnlyCurrentDays(), 0, !1, this.treeNodeID, this.treeID, this.gTab.getAD_Table_ID()) }; n.GridController.prototype.navigateRelative = function (n) { return this.navigate(this.gTab.getCurrentRow() + n) }; n.GridController.prototype.dataRefresh = function () { var n = this.gTab.dataRefresh(); this.dynamicDisplay(-1); window.setTimeout(function (n) { n.notifyDependents(); n = null }, 500, this) }; n.GridController.prototype.dataRefreshAll = function () { this.gTab.dataRefreshAll() }; n.GridController.prototype.dataSave = function (n) { this.m_tree != null && this.gTab.SetSelectedNode(this.m_tree.currentNode); var t = this.gTab.dataSave(n); return t, t }; n.GridController.prototype.dataNew = function (n) { this.isDefaultFocusSet = !1; this.gTab.dataNew(n); this.dynamicDisplay(-1); this.notifyDependents(); this.onRowInserted && this.onRowInserted(); this.isDefaultFocusSet = !0 }; n.GridController.prototype.canDeleteRecords = function () { for (var i = this.vTable.getSelection(!0), f = this.vTable.getGrid().records, u = [], r, t = 0; t < i.length; t++)r = f[i[t]], "ad_client_id" in r && (n.MRole.getIsClientAccess(r.ad_client_id, !0) || u.push(i[t])); return u }; n.GridController.prototype.dataDelete = function () { var n = this.gTab.dataDelete(this.vTable.getSelection(!0)); return this.refreshTabPanelData(this.gTab.getRecord_ID()), this.dynamicDisplay(-1), n }; n.GridController.prototype.dataDeleteAsync = function () { this.aPanel.setBusy(!0); var n = this; n.gTab.getTableModel().dataDeleteAsync(n.vTable.getSelection(!0), n.gTab.currentRow).then(function () { n.gTab.setCurrentRow(n.gTab.currentRow, !0); n.refreshTabPanelData(n.gTab.getRecord_ID()); n.dynamicDisplay(-1); n.aPanel.setBusy(!1) }) }; n.GridController.prototype.rowChanged = function (n, i) { var r; if (this.m_tree != null) { if (t.isArray(i) && !n) { for (r = 0; r < i.length; r++)this.m_tree.nodeChanged(n, i[r], "", "", "", ""); return } if (!(i <= 0)) { var f = this.gTab.getValue("Name"), e = this.gTab.getValue("Description"), u = this.gTab.getValue("IsSummary"), o = u == !0 || u == "Y", s = this.gTab.getValue("Action"); this.m_tree.nodeChanged(n, i, f, e, o, s) } } }; n.GridController.prototype.dataIgnore = function () { this.gTab.dataIgnore(); this.dynamicDisplay(-1); this.notifyDependents(); this.vTable.refreshUndo() }; n.GridController.prototype.addSubTabDataStatusListner = function (n) { this.aContentPane = n }; n.GridController.prototype.removeSubTabDataStatusListner = function () { this.aContentPane = null }; n.GridController.prototype.dataStatusChanged = function (t) { var r, i, e, o, u, f, s, h; if (this.displayAsIncludedGC) { this.enableDisableToolbarItems(!0); return } if (this.aContentPane ? this.aContentPane.dataStatusChanged(t) : this.aPanel.dataStatusChanged(t), r = t.getChangedColumn(), this.vHeaderPanel ? this.vHeaderPanel.navigate() : this.aPanel.vHeaderPanel && this.aPanel.vHeaderPanel.navigate(!0), t.getIsChanged() && !(r < 0)) { if (i = this.gTab.getField(r), i != null) if (i.getCallout().length > 0) e = this.gTab.processFieldChange(i), e.length > 0 && n.ADialog.error(e); else for (o = i.getColumnName(), dependants = this.gTab.getDependantFields(o), u = 0; u < dependants.length; u++)(f = dependants[u], f != null) && (s = f.getLookup(), s != null) && (h = s.getValidation(), h.indexOf(o) != -1 && (this.gTab.getTableModel().setDisableNotification(!0), this.gTab.setValue(f, null), this.gTab.getTableModel().setDisableNotification(!1))); this.dynamicDisplay(r) } }; n.GridController.prototype.includeTab = function (n) { var t = n.getMTab(); return this.gTab.getIncluded_Tab_ID() != t.getAD_Tab_ID() ? !1 : (this.vIncludedGC = n, this.vIncludedGC.switchMultiRow(), !0) }; n.GridController.prototype.switchSingleRow = function () { if (!this.onlyMultiRow && !this.singleRow) { this.singleRow = !0; this.isCardRow = !1; this.isMapRow = !1; var n = this.getVTablePanel(), t = this.getVPanel(); (this.isIncludedGCVisible || !0) && (n.hide(), t.css("display", "block"), this.getVCardPanel().hide(), this.getVMapPanel().hide()); this.gTab.isHPanelNotShowInMultiRow && this.vHeaderPanel != null && (this.vHeaderPanel.showPanel(), this.vHeaderPanel.sizeChangedListner && this.vHeaderPanel.sizeChangedListner.onSizeChanged && this.vHeaderPanel.sizeChangedListner.onSizeChanged()); this.dynamicDisplay(-1) } }; n.GridController.prototype.switchMultiRow = function () { if (this.singleRow || this.isCardRow) { this.singleRow = !1; this.isCardRow = !1; this.isMapRow = !1; var n = this.getVTablePanel(); this.getVPanel().hide(); this.getVCardPanel().hide(); this.getVMapPanel().hide(); this.isIncludedGCVisible ? n.css({ float: "right" }) : n.css({ float: "" }); n.show(); n = null; this.vTable.resize(); this.vTable.refreshRow(); this.gTab.isHPanelNotShowInMultiRow && this.vHeaderPanel != null && (this.vHeaderPanel.hidePanel(), this.vHeaderPanel.sizeChangedListner && this.vHeaderPanel.sizeChangedListner.onSizeChanged && this.vHeaderPanel.sizeChangedListner.onSizeChanged()); this.isNewClick = !1 } }; n.GridController.prototype.switchCardRow = function (t) { var i, r; this.isCardRow || (this.singleRow = !1, this.isCardRow = !0, this.isMapRow = !1, this.getVTablePanel().hide(), this.getVPanel().hide(), this.getVMapPanel().hide(), i = this.getVCardPanel(), this.isIncludedGCVisible ? i.css({ float: "right" }) : i.css({ float: "" }), i.css("display", "block"), this.gTab.getTableModel().setCardID(this.vCardView.cardID), t || (this.aPanel.clearSearchBox(), this.refreshFilterPanelData(), this.vCardView.resetCard(), r = new n.Query, this.getMTab().setQuery(r), this.query(this.gTab.getOnlyCurrentDays(), 0, !1)), i = null) }; n.GridController.prototype.switchMapRow = function () { if (!this.isMapRow) { this.singleRow = !0; this.isCardRow = !1; this.isMapRow = !0; this.getVTablePanel().hide(); this.getVPanel().hide(); this.getVCardPanel().hide(); var n = this.getVMapPanel(); this.isIncludedGCVisible ? n.css({ float: "right" }) : n.css({ float: "" }); n.show(); this.vMapView.refreshUI(this.getVMapPanel().width()); n = null } }; n.GridController.prototype.notifyDependents = function () { this.vIncludedGC && this.switchIncludedGC() }; n.GridController.prototype.switchIncludedGC = function () { var r, t, i; this.vIncludedGC && !this.displayAsIncludedGC && (r = this.isIncludedGCVisible, r || (t = this.aPanel.getIncludedEmptyArea(), t.empty(), i = this.vIncludedGC.getRoot(), i.detach(), this.vIncludedGC.setUI(!0), t.append(i), t.height(n.Application.isMobile ? 250 : 350), t.css("display", "flex"), i.show(), this.vIncludedGC.vTable.activate(), this.vIncludedGC.vTable.setReadOnly(!0), this.isIncludedGCVisible = !0, this.singleRow || (this.singleRow = !0, this.switchMultiRow()), this.vIncludedGC.displayAsIncludedGC = !0, this.vIncludedGC.singleRow = !0, this.vIncludedGC.switchMultiRow(), this.vTable.resize()), window.setTimeout(function (n) { n.vIncludedGC.query(0, 0, !1); n = null }, 1, this)) }; n.GridController.prototype.removeRecord = function () { var n = this.vTable.getSelection(!0), t; if (n && n.length > 0) for (t = 0; t < n.length; t++)this.vTable.grid.unselect(n[t] + 1), this.vTable.grid.remove(n[t] + 1); this.navigate(0); this.aPanel.setBusy(!1) }; n.GridController.prototype.dispose = function () { this.gTab.removeDataStatusListener(this.aPanel); this.gTab.removeDataStatusListener(); this.gTab.getTableModel().removeTableModelListener(this.vTable); this.gTab.getTableModel().removeCardModelListener(this.vCardView); this.gTab.getTableModel().removeRowChangedListener(); this.gTab.getTableModel().removeQueryCompleteListner(); this.disposeComponent(); this.gTab = null; this.windowNo = null; this.onlyMultiRow = null; this.aPanel = null; this.m_tree && this.m_tree.dispose(); this.vTabPanel && (this.vTabPanel.dispose(), this.vTabPanel = null); this.aFilterPanel && (this.aFilterPanel.dispose(), this.aFilterPanel = null); this.vHeaderPanel && this.vHeaderPanel.dispose(); this.m_tree = null }; n.GridController.prototype.HEADER_HEIGHT = 55 }(VIS, jQuery), function (n, t) { function o(n, i, r) { var u = null; return t.ajax({ url: c, type: "POST", datatype: "json", contentType: "application/json; charset=utf-8", async: i, data: JSON.stringify(n) }).done(function (n) { u = n; r && r(n) }), u } function i() { function gt() { var i = document.importNode(l, !0); u = t(i.querySelector(".vis-ad-w-p")); tt = u.find(".vis-ad-w-p-busy"); y = u.find(".vis-ad-w-p-tb-lc"); k = u.find(".vis-ad-w-p-nav-btns"); v = u.find(".vis-ad-w-p-t-c-tc"); h = u.find(".vis-ad-w-p-t-c"); d = u.find(".vis-ad-w-p-tabs-oflow").hide(); vt = u.find(".vis-ad-w-p-tabs-t"); st = u.find(".vis-ad-w-p-tb-rc-abar"); e = u.find(".vis-ad-w-p-a-m-slist"); p = u.find(".vis-ad-w-p-a-m-dlist"); a = u.find(".vis-ad-w-p-a-main"); rt = u.find(".vis-ad-w-p-a-oflow"); ut = u.find(".vis-ad-w-p-header-l"); at = u.find(".vis-ad-w-p-center-inctab"); g = u.find(".vis-ad-w-p-tb-rc-a-list"); ft = u.find(".vis-ad-w-p-center-view"); it = u.find(".vis-ad-w-p-status"); w = u.find(".vis-ad-w-p-actionpanel-r"); o = u.find(".vis-ad-w-p-tb-s-input"); s = u.find(".vis-ad-w-p-tb-s-icon"); c = u.find(".vis-ad-w-p-tb-s-icon-down"); o.attr("placeholder", n.Msg.getMsg("Search")); et = u.find(".vis-ad-w-p-tb-s-btn"); pt = u.find(".vis-ad-w-p-tb-advsrch"); wt = u.find(".vis-ad-w-p-t-close"); bt = u.find(".vis-ad-w-p-t-name h5"); ot = u.find("span.vis-ad-w-p-tb-rc-action"); b = u.find(".vis-ad-w-p-filterpnl").hide(); kt = u.find(".vis-ad-w-p-setting"); ht = b.find(".vis-fp-bodywrap"); b.find(".vis-fp-header h4").text(n.Msg.getMsg("Filter")); yt = b.find(".vis-fp-header .vis-mark"); lt(); dt() } function ni() { vt.show(); it.show(); n.Application.isMobile && (rt.hide(), a.addClass("vis-ad-w-p-a-main-mob"), h.addClass("vis-ad-w-p-t-c-mob")); r.vTabbedPane.finishLayout(n.Application.isMobile); lt() } var lt, dt, r, i; this.$parentWindow; this.ctx = n.Env.getCtx(); this.curGC; this.curST; this.curTab; this.vTabbedPane = new n.VTabbedPane(!1); this.statusBar = new n.StatusBar; this.curWinTab = null; this.curTabIndex; this.firstTabId = null; this.DocActionVariables = {}; this.DocActionVariables.STATUS_COMPLETED = "CO"; this.DocActionVariables.STATUS_CLOSED = "CL"; this.DocActionVariables.STATUS_VOIDED = "VO"; this.DocActionVariables.STATUS_REVERSED = "RE"; this.toolbarCreated = !1; this.errorDisplayed = !1; this.isPersonalLock = n.MRole.getIsPersonalLock(); this.log = n.Logging.VLogger.getVLogger("APanel"); this.isSummaryVisible = !1; this.lastView = ""; var ft, k, y, it, v, h, d, o, et, s, c, ot, u, tt, g, st, e, p, a, rt, ut = "", at, vt, b = "", ht = "", yt = "", w = null, pt = null, wt = null, bt = null, kt = null, nt = [], ct = {}; this.defaultSearch = !0; this.isAutoCompleteOpen = !1; this.instructionPop = {}; this.instructionPop[this.ACTION_NAME_NEW] = !1; lt = function () { ot.attr("title", n.Msg.getMsg("FilterRecord")); kt.attr("title", n.Msg.getMsg("Settings")) }; dt = function () { u.on("click", function () { u.find(".vis-window-instruc-overlay-new").remove(); u.find(".vis-window-instruc-overlay-new-li").removeClass(".vis-window-instruc-overlay-new-li") }) }; this.createSearchAutoComplete = function () { if (o) { var i = this; o.autocomplete({ select: function (t, i) { r.defaultSearch = !1; r.isSummaryVisible ? r.curTab.setShowSummaryNodes(!0) : r.curTab.setShowSummaryNodes(!1); var u = new n.Query(r.curTab.getTableName(), !1); r.curTab.searchText = i.item.value; r.curTab.userQueryID = i.item.id; i.item.code != n.Msg.getMsg("All") && (r.curGC.searchCode = i.item.code); r.curGC.applyFilters(u); s.css("visibility", "visible"); c.css("visibility", "visible").css("transform", "rotate(360deg)"); t.stopPropagation() }, minLength: 0, open: function () { i.isAutoCompleteOpen = !0 }, close: function () { c.css("transform", "rotate(360deg)"); window.setTimeout(function () { i.isAutoCompleteOpen = !1 }, 400) }, source: [] }); o.autocomplete().data("ui-autocomplete")._renderItem = function (u, f) { var e = null, o; e = i.curTab.getTabLevel() == 0 ? f.defaultids && f.userid > 0 ? t("<span title='" + n.Msg.getMsg("DefaultSearch") + "'  data-id='" + f.id + "' class='VIS-winSearch-defaultIcon'><\/span>") : t("<span title='" + n.Msg.getMsg("MakeDefaultSearch") + "' data-id='" + f.id + "' class='VIS-winSearch-NonDefaultIcon'><\/span>") : t("<span title='" + n.Msg.getMsg("DefaultSearch") + "'  data-id='" + f.id + "'><\/span>"); o = t("<li>").append(t("<a style='display:block' title='" + f.title + "'>" + f.label + "<\/a>").append(e)).appendTo(u); e.on("click", function () { var i = t(this).data("id"); t.ajax({ url: n.Application.contextUrl + "JsonData/InsertUpdateDefaultSearch", dataType: "json", data: { AD_Tab_ID: r.curTab.getAD_Tab_ID(), AD_Table_ID: r.curTab.getAD_Table_ID(), AD_User_ID: r.ctx.getAD_User_ID(), AD_UserQuery_ID: i }, success: function () { }, error: function (n) { console.log(n) } }) }); return o } } }; r = this; gt(); it.append(this.statusBar.getRoot()); this.setSize = function () { return }; i = function (n) { r.actionPerformed(n) }; this.onTabChange = function (n) { r.tabActionPerformed(n) }; this.statusBar.onComboChange = function (n) { r.setBusy(!0); setTimeout(function () { r.curGC.navigatePageExact(n + 1); r.curGC.onDemandTree || r.setBusy(!1) }, 100) }; this.createToolBar = function () { this.aRefresh = this.addActions(this.ACTION_NAME_REFRESH, null, !0, !0, !1, i, null, "Shct_Refresh"); this.aDelete = this.addActions(this.ACTION_NAME_DELETE, null, !0, !0, !1, i, null, "Shct_Delete"); this.aNew = this.addActions(this.ACTION_NAME_NEW, null, !0, !1, !1, i, null, "Shct_New"); this.aIgnore = this.addActions("Ignore", null, !0, !0, !1, i, null, "Shct_Ignore"); this.aSave = this.addActions("Save", null, !0, !0, !1, i, null, "Shct_Save"); this.aFind = this.addActions("Find", null, !0, !0, !1, i, null, "Shct_Find"); this.aInfo = this.addActions("Info", null, !0, !0, !1, i, null, "Shct_Info"); this.aReport = this.addActions("Report", null, !0, !0, !1, i, null, "Shct_Report"); this.aPrint = this.addActions("Print", null, !0, !0, !1, i, null, "Shct_Print"); this.aBack = this.addActions("Back", null, !0, !0, !1, i, null, "Shct_Back"); y.append(this.aBack.getListItm()); y.append(this.aIgnore.getListItm()); y.append(this.aNew.getListItm()); y.append(this.aDelete.getListItm()); y.append(this.aSave.getListItm()); y.append(this.aRefresh.getListItm()); y.append(this.aReport.getListItm()); y.append(this.aPrint.getListItm()); pt.append(this.aFind.getListItm()); this.aPrevious = this.addActions(this.ACTION_NAME_PREV, null, !0, !0, !0, i, null, "Shct_PrevRec"); this.aFirst = this.addActions(this.ACTION_NAME_FIRST, null, !0, !0, !0, i, null, "Shct_FirstRec"); this.aLast = this.addActions(this.ACTION_NAME_LAST, null, !0, !0, !0, i, null, "Shct_LastRec"); this.aNext = this.addActions(this.ACTION_NAME_NEXT, null, !0, !0, !0, i, null, "Shct_NextRec"); this.aMulti = this.addActions("Multi", null, !1, !0, !0, i, !0, "Shct_MultiRow"); this.aCard = this.addActions("Card", null, !1, !0, !0, i, !0, "Shct_CardView"); this.aMap = this.addActions("Map", null, !1, !0, !0, i); k.append(this.aPrevious.getListItm()).append(this.aNext.getListItm()); k.append(this.aMulti.getListItm()); k.append(this.aCard.getListItm()); k.append(this.aMap.getListItm().hide()); this.aPageUp = this.addActions(this.ACTION_NAME_PAGEUP, null, !0, !0, !0, i, null, "Shct_PageUp"); this.aPageFirst = this.addActions("PageFirst", null, !0, !0, !0, i, null, "Shct_PageFirst"); this.aPageLast = this.addActions("PageLast", null, !0, !0, !0, i, null, "Shct_PageLast"); this.aPageDown = this.addActions(this.ACTION_NAME_PAGEDOWN, null, !0, !0, !0, i, null, "Shct_PageDown"); var r = this.gridWindow; actionItemCount_Right = 0; r.getIsAppointment() && (this.aAppointment = this.addActions("APT", null, !1, !1, !1, i), this.aAppointment.setTextDirection("r"), e.append(this.aAppointment.getListItmIT())); r.getIsTask() && (this.aTask = this.addActions("TAK", null, !1, !1, !1, i), this.aTask.setTextDirection("r"), e.append(this.aTask.getListItmIT())); r.getIsEmail() && (this.aEmail = this.addActions("EML", null, !1, !1, !1, i), this.aEmail.setTextDirection("r"), e.append(this.aEmail.getListItmIT())); r.getIsLetter() && (this.aLetter = this.addActions("LER", null, !1, !1, !1, i), this.aLetter.setTextDirection("r"), e.append(this.aLetter.getListItmIT())); r.getIsSms() && (this.aSms = this.addActions("SMS", null, !1, !1, !1, i), this.aSms.setTextDirection("r"), e.append(this.aSms.getListItmIT())); r.getIsFaxEmail() && (this.aFaxEmail = this.addActions("FaxEmail", null, !1, !1, !1, i), this.aFaxEmail.setTextDirection("r"), e.append(this.aFaxEmail.getListItmIT())); r.getIsChat() && (this.aChat = this.addActions(this.ACTION_NAME_CHAT, null, !1, !1, !1, i, !0), this.aChat.setTextDirection("r"), e.append(this.aChat.getListItmIT())); r.getIsAttachment() && (this.aAttachment = this.addActions("ATT", null, !1, !1, !1, i, !0), this.aAttachment.setTextDirection("r"), e.append(this.aAttachment.getListItmIT())); r.getIsHistory() && (this.aHistory = this.addActions("HIY", null, !1, !1, !1, i), this.aHistory.setTextDirection("r"), e.append(this.aHistory.getListItmIT())); r.getIsCheckRequest() && (this.aRequest = this.addActions("CRT", null, !0, !1, !1, i), this.aRequest.setTextDirection("r"), e.append(this.aRequest.getListItmIT())); n.AEnv.getIsWorkflowProcess() && (this.aWorkflow = this.addActions("Workflow", null, !0, !1, !1, i), this.aWorkflow.setTextDirection("r"), e.append(this.aWorkflow.getListItmIT())); r.getIsCopyReocrd() && (this.aCopy = this.addActions("CRD", null, !1, !1, !1, i), this.aCopy.setTextDirection("r"), e.append(this.aCopy.getListItmIT())); r.getIsSubscribedRecord() && (this.aSubscribe = this.addActions("SRD", null, !0, !1, !1, i, !0), this.aSubscribe.setTextDirection("r"), e.append(this.aSubscribe.getListItmIT())); r.getIsZoomAcross() && (this.aZoomAcross = this.addActions("ZAS", null, !0, !1, !1, i), this.aZoomAcross.setTextDirection("r"), e.append(this.aZoomAcross.getListItmIT())); n.MRole.getFormAccess(this.ctx.getContextAsInt("DMS_Form_ID")) && (r.getIsCreatedDocument() && (this.aCreateDocument = this.addActions("CDT", null, !1, !1, !1, i), this.aCreateDocument.setTextDirection("r"), e.append(this.aCreateDocument.getListItmIT())), r.getIsUploadedDocument() && (this.aUploadDocument = this.addActions("UDT", null, !1, !1, !1, i), this.aUploadDocument.setTextDirection("r"), e.append(this.aUploadDocument.getListItmIT())), r.getIsViewDocument() && (this.aViewDocument = this.addActions("VDT", null, !1, !1, !1, i, !0), this.aViewDocument.setTextDirection("r"), e.append(this.aViewDocument.getListItmIT())), r.getIsAttachDocumentFrom() && (this.aAttachFrom = this.addActions("ADF", null, !1, !1, !1, i, !0), this.aAttachFrom.setTextDirection("r"), e.append(this.aAttachFrom.getListItmIT()))); r.getIsMarkToExport() && (this.aMarkToExport = this.addActions("MTE", null, !1, !1, !1, i, !0), this.aMarkToExport.setTextDirection("r"), e.append(this.aMarkToExport.getListItmIT())); r.getIsImportMap() && (this.aImportMap = this.addActions("IMP", null, !1, !1, !1, i), this.aImportMap.setTextDirection("r"), e.append(this.aImportMap.getListItmIT())); r.getIsArchive(); r.getIsAttachmail(); r.getIsRoleCenterView(); this.isPersonalLock && (this.aLock = this.addActions("Lock", null, !0, !1, !1, i, !0), this.aLock.setTextDirection("r"), e.append(this.aLock.getListItmIT()), this.aRecAccess = this.addActions("RecordAccess", null, !0, !1, !1, i, !0), this.aRecAccess.setTextDirection("r"), e.append(this.aRecAccess.getListItmIT())); this.aPreference = this.addActions("Preference", null, !1, !1, !0, i); n.MRole.getDefault().getIsShowPreference() && g.append(this.aPreference.getListItmIT()); this.aHelp = this.addActions("Help", null, !0, !1, !0, i); g.append(this.aHelp.getListItmIT()); this.aCardDialog = this.addActions("CardDialog", null, !0, !1, !0, i); g.append(this.aCardDialog.getListItmIT()); this.aShowSummaryLevel = this.addActions("ShowSummaryNodes", null, !0, !1, !0, i, !0); g.append(this.aShowSummaryLevel.getListItmIT()); r = null; this.statusBar.setPageItem(this.aPageUp.getListItm()); this.statusBar.setComboPage(); this.statusBar.setPageItem(this.aPageDown.getListItm()); this.statusBar.render(); this.toolbarCreated = !0; this.setRightBarVisibility = function (n) { n && t(g.parent()[0]).removeClass("show") }; ni() }; this.setDynamicActions = function () { if (this.curGC != null) { p.css("display", "none"); var n = 0, t = []; if (this.curGC.leftPaneLinkItems.length > 0) for (t = this.curGC.leftPaneLinkItems, n = 0; n < t.length; n++)p.append(t[n].getControl()); if (n = 0, this.curGC.rightPaneLinkItems.length > 0) for (t = this.curGC.rightPaneLinkItems, n = 0; n < t.length; n++)p.append(t[n].getControl()); (this.curGC.leftPaneLinkItems.length > 0 || this.curGC.rightPaneLinkItems.length > 0) && (p.css("display", "flex"), this.updateLabelVisbility()); t = null } }; this.getRoot = function () { return u }; this.getLayout = function () { return ft }; this.getIncludedEmptyArea = function () { return at }; this.getParentDetailPane = function () { return ut }; this.getFilterPane = function () { return ht }; this.clearSearchBox = function () { o.val(""); s.css("visibility", "hidden"); r.defaultSearch = !0; r.clearSearchText() }; this.showTabPanel = function (n) { if (n) { var i = "vis-ad-w-p-center-flow-", r = "vis-ad-w-p-actionpanel-", t = this.curTab.getIsTPBottomAligned() ? "b" : "r", u = this.curTab.getIsTPBottomAligned() ? "r" : "b"; w.hasClass(r + t) || (w.parent().removeClass(i + u).addClass(i + t), w.removeClass(), w.addClass(r + t)); this.curGC && w.append(this.curGC.getTabPanel()); w.css({ display: "grid" }) } else w.css({ display: "none" }) }; this.showFilterPanel = function (n) { this.curGC ? (ht.append(this.curGC.getFilterPanel()), this.curGC.initFilterUI(), n || this.curGC.refreshFilterPanelData()) : b.hide() }; this.setTabPanelclass = function () { }; this.getTabControl = function () { return v }; this.getLinkControl = function () { return " New Link Control for header Composite" }; this.setTabControl = function (t) { var i, r; for (nt = t, i = 0; i < t.length; i++)r = t[i].getListItm(), ct[nt[i].action] = r, v.append(r); v.width() > h.width() && (n.Application.isMobile || d.show()) }; this.setTabNavigation = function () { v.width() > h.width() ? n.Application.isMobile || d.show() : d.hide() }; this.setSelectedTab = function (n) { this.selectedTab && this.selectedTab.removeClass("vis-apanel-tab-selected"); this.selectedTab = ct[n]; this.selectedTab.addClass("vis-apanel-tab-selected") }; this.navigateThroghtShortcut = function (n) { var t = null; n ? (t = v.find(".vis-apanel-tab-selected").next(), (!t || t.length <= 0) && (t = v.children().first())) : (t = v.find(".vis-apanel-tab-selected").prev(), (!t || t.length <= 0) && (t = v.children().last())); t.trigger("click") }; this.setBusy = function (n, t) { this.isLocked = n; n ? tt[0].style.visibility = "visible" : (tt[0].style.visibility = "hidden", t) }; this.startFilterPanel = function () { b.show(); this.refresh() }; ot.on("click", function () { r.startFilterPanel() }); yt.on("click", function () { b.hide(); r.refresh() }); d.on("click", function (i) { var r, f; if (i.stopPropagation(), r = t(i.target).data("dir"), r) { var c = h.width(), s = v.width(), e = h.scrollLeft(), o = Math.ceil(c / 2), u = 0; if (n.Application.isRTL && (r == "r" ? r = "b" : r == "rl" ? r = "bf" : r == "bf" ? r = "rl" : r == "b" && (r = "r")), r == "r") { if (e + o >= s - o && !n.Application.isRTL) return; f = s - c; u = e + o; h.animate({ scrollLeft: u > f ? f : u }, 1e3) } else if (r == "b") if (n.Application.isRTL) u = e - o, h.animate({ scrollLeft: u > 0 ? 0 : u }, 1e3); else { if (e == 0) return; u = e - o; h.animate({ scrollLeft: u < 0 ? 0 : u }, 1e3) } if (r == "rl") { if (e + o >= s - o) return; n.Application.isRTL ? h.animate({ scrollLeft: 0 }, 500) : (f = s - c, h.animate({ scrollLeft: f }, 500)) } else if (r == "bf") if (n.Application.isRTL) f = s - c, h.animate({ scrollLeft: -f }, 500); else { if (e == 0) return; u = e - o; h.animate({ scrollLeft: 0 }, 500) } } }); rt.on("click", function (n) { var r, o; if (n.stopPropagation(), r = t(n.target).data("dir"), r) { var s = a.height(), h = e.height() + p.height(), u = a.scrollTop(), f = Math.ceil(s / 2), i = 0; if (r == "d") { if (u + f >= h - f) return; o = h - s; i = u + f; a.animate({ scrollTop: i > o ? o : i }, 1e3) } else if (r == "u") { if (u == 0) return; i = u - f; a.animate({ scrollTop: i < 0 ? 0 : i }, 1e3) } } }); et.on(n.Events.onTouchStartOrClick, function (n) { r.cmd_find(o.val()); r.clearSearchText(); o.val(""); n.stopPropagation() }); if (!n.Application.isMobile) o.on("keyup", function (t) { var u = t.charCode || t.keyCode, i; if (u == 13) { if (!r.defaultSearch) return; r.cmd_find(o.val()); o.val("") } else u == 8 && s.css("visibility") == "visible" && (t.preventDefault(), r.defaultSearch = !0, o.val(""), s.css("visibility", "hidden"), i = new n.Query, i.addRestriction(" 1 = 1 "), r.findRecords(i)) }); c.on("click", function () { r.isAutoCompleteOpen ? c.css("transform", "rotate(360deg)") : (c.css("transform", "rotate(180deg)"), r.refreshSavedASearchList(!0)) }); s.on("click", function () { s.css("visibility", "hidden"); r.defaultSearch = !0; r.clearSearchText(); o.val(""); var t = new n.Query; r.findRecords(t); c.css("transform", "rotate(360deg)") }); this.setAdvancedSerachText = function (n, t) { n ? s.css("visibility", "hidden") : (s.css("visibility", "visible"), c.css("visibility", "visible")); o.val(t) }; this.toggleASearchIcons = function (n, t) { n && t ? (s.css("visibility", "visible"), c.css("visibility", "visible")) : n && !t ? (s.css("visibility", "hidden"), c.css("visibility", "visible")) : (s.css("visibility", "hidden"), c.css("visibility", "hidden")) }; this.setSearchFocus = function (n) { n ? o.focus() : o.trigger("focusout") }; this.refreshSavedASearchList = function (t, i) { var u = [], e; u[0] = new n.DB.SqlParam("@AD_Tab_ID", r.curTab.getAD_Tab_ID()); u[1] = new n.DB.SqlParam("@AD_User_ID", r.ctx.getAD_User_ID()); u[2] = new n.DB.SqlParam("@AD_Tab_ID1", r.curTab.getAD_Tab_ID()); u[3] = new n.DB.SqlParam("@AD_User_ID1", r.ctx.getAD_User_ID()); u[4] = new n.DB.SqlParam("@AD_Client_ID", r.ctx.getAD_Client_ID()); u[5] = new n.DB.SqlParam("@AD_Tab_ID2", r.curTab.getAD_Tab_ID()); u[6] = new n.DB.SqlParam("@AD_Table_ID", r.curTab.getAD_Table_ID()); e = this; f("VIS_116", u, function (r) { var f = [], h, u; if (r && r.tables[0].rows && r.tables[0].rows.length > 0) for (c.css("visibility", "visible"), f.push({ label: n.Msg.getMsg("All"), value: n.Msg.getMsg("All"), code: n.Msg.getMsg("All") }), h = !1, u = 0; u < r.tables[0].rows.length; u++)r.tables[0].rows[u].cells.ad_defaultuserquery_id > 0 ? (f.push({ title: r.tables[0].rows[u].cells.title, label: r.tables[0].rows[u].cells.name, value: r.tables[0].rows[u].cells.name, code: r.tables[0].rows[u].cells.code, id: r.tables[0].rows[u].cells.ad_userquery_id, defaultids: r.tables[0].rows[u].cells.ad_defaultuserquery_id, userid: r.tables[0].rows[u].cells.ad_defaultuserquery_id }), h = !0) : f.push({ title: r.tables[0].rows[u].cells.title, label: r.tables[0].rows[u].cells.name, value: r.tables[0].rows[u].cells.name, code: r.tables[0].rows[u].cells.code, id: r.tables[0].rows[u].cells.ad_userquery_id }); else e.toggleASearchIcons(!1, !1); i || (i = o.val()); i && i.length > 0 ? (i.length > 25 ? o.val(i.substr(0, 25) + "...") : o.val(i), s.css("visibility", "visible"), e.defaultSearch = !1) : s.css("visibility", "hidden"); o.autocomplete("option", "source", f); t && (o.autocomplete("search", ""), o.trigger("focus")) }) }; this.findRecords = function (t) { this.curTab.getTableModel().setCurrentPage(1); this.isSummaryVisible ? this.curTab.setShowSummaryNodes(!0) : this.curTab.setShowSummaryNodes(!1); this.curGC.skipRowInserting(!0); t || (t = new n.Query); this.curGC.applyFilters(t) }; this.setTitle = function (n) { bt.text(n) }; this.highlightButton = function (t, i) { var u = i.$li, r = this.getRoot(); if (i.getAction() == this.ACTION_NAME_NEW) { if ((!t || o.val().length > 0) && (this.instructionPop[this.ACTION_NAME_NEW] = !0), this.instructionPop[this.ACTION_NAME_NEW]) { r.find(".vis-window-instruc-overlay-new").length > 0 && (r.find(".vis-window-instruc-overlay-new").remove(), u.removeClass("vis-window-instruc-overlay-new-li")); return } r.find(".vis-window-instruc-overlay-new").length <= 0 && (r.prepend('<div class="vis-window-instruc-overlay-new"><div class="vis-window-instruc-overlay-new-inn"><p>' + n.Msg.getMsg("CreateNewRec") + "<\/p><\/div><\/div>"), u.addClass("vis-window-instruc-overlay-new-li"), this.instructionPop[this.ACTION_NAME_NEW] = !0) } }; wt.on("click", function () { r.$parentWindow.dispose() }); this.updateLabelVisbility = function () { var n = parseInt(a.width()); n > 50 ? (e.find("span").show(), p.find("span").show()) : (e.find("span").hide(), p.find("span").hide()) }; st.on(n.Events.onTouchStartOrClick, function (n) { n.stopPropagation(); n.preventDefault(); var t = parseInt(a.width()); t > 50 ? (e.find("span").hide(), p.find("span").hide()) : a.css({ position: "absolute" }); a.animate({ width: t > 50 ? "30" : "220" }, 300, "swing", function () { t < 50 ? (e.find("span").show(), p.find("span").show()) : (a.css({ position: "" }), a.css({ width: "" })); r.curGC && r.curGC.multiRowResize(); r.setTabNavigation() }) }); this.disposeComponent = function () { if (et.off(n.Events.onTouchStartOrClick), o.remove(), o = null, st.off(n.onTouchStartOrClick), rt.off("click"), d.off("click"), u.remove(), tt.remove(), u = tt = ft = k = y = it = null, r = null, i = null, this.toolbarCreated && (this.aRefresh.dispose(), this.aDelete.dispose(), this.aNew.dispose(), this.aSave.dispose(), this.aPrevious.dispose(), this.aFirst.dispose(), this.aLast.dispose(), this.aNext.dispose(), this.aPageUp.dispose(), this.aPageFirst.dispose(), this.aPageLast.dispose(), this.aPageDown.dispose(), this.aCard.dispose(), this.aCardDialog.dispose(), this.aShowSummaryLevel && this.aShowSummaryLevel.dispose(), this.aChat && this.aChat.dispose(), this.aAppointment && this.aAppointment.dispose(), this.aHelp.dispose(), this.aSubscribe && this.aSubscribe.dispose(), this.aAttachment && this.aAttachment.dispose(), this.aHistory && this.aHistory.dispose(), this.aZoomAcross && this.aZoomAcross.dispose(), this.aRequest && this.aRequest.dispose(), this.aMarkToExport && this.aMarkToExport.dispose(), this.aWorkflow && this.aWorkflow.dispose(), this.aRecAccess && this.aRecAccess.dispose(), this.aImportMap && this.aImportMap.dispose(), this.aRefresh = this.aDelete = this.aNew = this.aPrevious = this.aFirst = this.aLast = this.aNext = null, this.aChat = this.aPageUp = this.aPageFirst = this.aPageLast = this.aPageDown = null, this.aHelp = this.aSubscribe = this.aAttachment = null, this.toolbarCreated = null, this.aZoomAcross = this.aRequest = this.aMark = this.aWorkflow = this.aHistory = null, this.aAppointment = null, this.aRecAccess = this.aImportMap = this.aCard = this.aCardDialog = this.aShowSummaryLevel = null), this.statusBar.dispose(), this.statusBar.onComboChange = null, this.statusBar = null, this.getRoot = null, this.getLayout = null, this.setBusy = null, this.createToolBar = null, this.$parentWindow = null, this.ctx = null, this.curGC = null, this.curST = null, this.curTab = null, this.vTabbedPane = null, this.curWinTab = null, this.curTabIndex = null, this.firstTabId = null, ut.remove(), ut = null, this.getParentDetailPane = null, nt) for (var t = 0; t < nt.length; t++)nt[t].dispose(); nt = null; ct = null; v.remove() } } function a(i) { t.ajax({ url: n.Application.contextUrl + "Posting/PostByNewLogic", dataType: "json", async: !0, data: { AD_Client_ID: n.context.getAD_Client_ID() }, error: function () { n.ADialog.info(n.Msg.getMsg("ERRORGettingPostingServer")) }, success: function (n) { i && i(n.result) } }) } function s(i, r, f, e, o, s, h) { var a = i.getName(), c = !1, y = !0, v; try { if (i.getAskUserBGProcess() == !0 || i.getIsBackgroundProcess() == !0) { var p = t('<div class="vis-confirm-popup-check"><label>' + n.Msg.translate(n.context, "IsBackgroundProcess") + "<\/label><\/div>"), l = t('<input type="checkbox">'), w = i.getIsBackgroundProcess(); l.prop("checked", w); l.prop("disabled", w); p.prepend(l); n.ADialog.confirmCustomUI("StartProcess?", !0, i.getDescription() + "\n" + i.getHelp(), "Confirm", p, function (n) { if (n) return isBg = l.is(":checked"), u(i, r, f, e, h, o, c, a, isBg) }) } else if (v = i.getIsBackgroundProcess(), s || i.getDescription().equals("") && i.getHelp().equals("") || (y = !1, n.ADialog.confirm("StartProcess?", !0, i.getDescription() + "\n" + i.getHelp(), "Confirm", function (n) { if (n) return u(i, r, f, e, h, o, c, a, v) })), y) return u(i, r, f, e, h, o, c, a, v) } catch (b) { n.ADialog.error("Error?", !0, "error in process : " + b.message); c = !1 } return !1 } function u(t, i, r, u, f, e, o, s, h) { var l = t.getDescription(), c, a; return (l == null || l.length == 0) && (l = s), c = new n.ProcessInfo(l, t.getProcess_ID(), i, r), c.setAD_User_ID(u.getAD_User_ID()), c.setAD_Client_ID(u.getAD_Client_ID()), c.setAD_Window_ID(e.$parentWindow === undefined ? 0 : e.$parentWindow.AD_Window_ID), c.setIsBatch(f), c.setUseCrystalReportViewer(u.getIsUseCrystalReportViewer()), c.setIsBackground(h), a = new n.ProcessCtl(e, c, null), t.isPdf ? c.setFileType(n.ProcessCtl.prototype.REPORT_TYPE_PDF) : t.isCsv && c.setFileType(n.ProcessCtl.prototype.REPORT_TYPE_CSV), a.process(e.curWindowNo), o = !0, e = null, t = null, f = !1, startWOasking = !1, actionProcessAfterSave = null, o } function r(i, r) { var e, o, s, u, f; window.VADMS ? r == "CDT" ? (u = new n.CFrame, e = new window.VADMS.editDocument(0, "", 0, "", 0, null, "", i.curTab.getAD_Window_ID(), i.curTab.getAD_Table_ID(), i.curTab.getRecord_ID()), u.setName(n.Msg.getMsg("VADMS_CreateDocument")), u.setTitle(n.Msg.getMsg("VADMS_CreateDocument")), u.hideHeader(!0), u.setContent(e), e.initialize(), u.show()) : r == "ADF" ? (o = n.context.getContext("VADMS_Document_ID"), o.length > 0 && (s = { docID: o, winID: i.curTab.getAD_Window_ID(), tableID: i.curTab.getAD_Table_ID(), recID: i.curTab.getRecord_ID() }, t.ajax({ url: n.Application.contextUrl + "JsonData/AttachFrom", dataType: "json", data: s, success: function (t) { JSON.parse(t) == "OK" ? (i.curTab.loadDocuments(), i.aViewDocument.setPressed(i.curTab.hasDocument()), n.ADialog.confirm("AttachWithOther", !0, "", "Confirm", function (t) { t || n.context.setContext("VADMS_Document_ID", 0) }), i = null) : n.ADialog.error("NotAttached", !0, "") } }))) : r == "VDT" ? (u = new n.CFrame, f = new window.VADMS.DocumentManagementSystem, u.setName(n.Msg.getMsg("VADMS_Document")), u.setTitle(n.Msg.getMsg("VADMS_Document")), u.hideHeader(!0), f.setWindowNo(n.Env.getWindowNo()), f.setWindowID(i.curTab.getAD_Window_ID()), f.setTableID(i.curTab.getAD_Table_ID()), f.setRecordID(i.curTab.getRecord_ID()), f.setWindowName(i.gridWindow.getName()), u.setContent(f), f.initialize(), u.show()) : r == "UDT" && window.VADMS.uploaddocument(0, i.curTab.getAD_Window_ID(), i.curTab.getAD_Table_ID(), i.curTab.getRecord_ID(), i.$parentWindow.name, i.curTab.getName()) : n.ADialog.error("PleaseInstallDMSModule", !0, "") } var h = n.Application.contextUrl, c = h + "JsonData/JDataSetWithCode", f = function (t, i, r) { var e = r ? !0 : !1, f = { sql: t, page: 1, pageSize: 0 }, u; return i && (f.param = i), u = null, o(f, e, function (t) { u = (new n.DB.DataSet).toJson(t); r && r(u) }), u }, e = function (t, i, r) { var f = r ? !0 : !1, e = { sql: t, page: 1, pageSize: 0 }, u; return i && (e.param = i), u = null, o(e, f, function (t) { i = (new n.DB.DataSet).toJson(t); var i = (new n.DB.DataSet).toJson(t); u = i.getTable(0).getRows().length > 0 ? i.getTable(0).getRow(0).getCell(0) : null; i.dispose(); i = null; f && r(u) }), u }, l = document.querySelector("#vis-ad-paneltmp").content; i.prototype.ACTION_NAME_FIRST = "First"; i.prototype.ACTION_NAME_LAST = "Last"; i.prototype.ACTION_NAME_PREV = "Previous"; i.prototype.ACTION_NAME_NEXT = "Next"; i.prototype.ACTION_NAME_PAGEDOWN = "PageDown"; i.prototype.ACTION_NAME_PAGEUP = "PageUp"; i.prototype.ACTION_NAME_NEW = "New"; i.prototype.ACTION_NAME_DELETE = "Delete"; i.prototype.ACTION_NAME_REFRESH = "Refresh"; i.prototype.ACTION_NAME_FIND = "Find"; i.prototype.ACTION_NAME_CHAT = "CHT"; i.prototype.ACTION_NAME_APPOINTMENT = "Appointment"; i.prototype.ACTION_NAME_ARCHIVE = "Archive"; i.prototype.keyDown = function (n) { if (n.altKey && this.curGC) { var t = this.aNew.getIsEnabled(); switch (n.keyCode) { case 78: t && this.actionPerformed(this.aNew.getAction()); break; case 83: this.ShortcutNavigation(this.aSave.getAction()); break; case 66: t && this.aBack.getIsEnabled() && this.actionPerformed(this.aBack.getAction()); break; case 68: t && this.actionPerformed(this.aDelete.getAction()); break; case 90: t || this.actionPerformed(this.aIgnore.getAction()); break; case 80: t && this.actionPerformed(this.aPrint.getAction()); break; case 82: t && this.actionPerformed(this.aReport.getAction()); break; case 81: t && this.actionPerformed(this.aRefresh.getAction()); break; case 65: this.actionPerformed(this.aFind.getAction()); break; case 70: this.setSearchFocus(!0); break; case 37: this.ShortcutNavigation(this.aFirst.getAction()); break; case 39: this.ShortcutNavigation(this.aLast.getAction()); break; case 38: this.ShortcutNavigation(this.aPrevious.getAction()); break; case 40: this.ShortcutNavigation(this.aNext.getAction()); break; case 84: this.actionPerformed(this.aMulti.getAction()); break; case 86: this.actionPerformed(this.aCard.getAction()); break; case 88: this.$parentWindow.dispose(); break; case 79: this.startFilterPanel(); break; case 33: if (n.ctrlKey) { this.aPageFirst.isEnabled && this.ShortcutNavigation(this.aPageFirst.getAction()); break } else { this.aPageUp.isEnabled && this.ShortcutNavigation(this.aPageUp.getAction()); break } case 34: if (n.ctrlKey) { this.aPageLast.isEnabled && this.ShortcutNavigation(this.aPageLast.getAction()); break } else { this.aPageDown.isEnabled && this.ShortcutNavigation(this.aPageDown.getAction()); break } }n.preventDefault(); n.stopPropagation() } else n.keyCode == 112 && (this.actionPerformed(this.aHelp.getAction()), n.preventDefault(), n.stopPropagation()) }; i.prototype.ShortcutNavigation = function (n) { var r = this, i = t(document.activeElement); i && i.length > 0 && i.trigger("change"); window.setTimeout(function () { r.actionPerformed(n) }, 200) }; i.prototype.sizeChanged = function () { this.setTabNavigation(); this.vTabbedPane.sizeChanged(); return }; i.prototype.refresh = function () { this.curGC && (this.curGC.vTable.resize(), this.curGC.vIncludedGC && this.curGC.vIncludedGC.vTable.refresh()); this.vTabbedPane.refresh() }; i.prototype.refreshData = function () { var n = this; window.setTimeout(function () { n.curTab.getAD_Tab_ID() == n.firstTabId.split("_")[1] ? n.curGC.dataRefreshAll() : n.selectFirstTab(!1, function () { n.curGC.dataRefreshAll() }); n.setBusy(!1) }, 100); this.setBusy(!0) }; i.prototype.addActions = function (t, i, r, u, f, e, o, s) { var t = new n.AppsAction({ action: t, parent: i, enableDisable: r, toggle: o, imageOnly: u, isSmall: f, onAction: e, toolTipText: s }); return t }; i.prototype.initPanel = function (i, r, u, f, e) { var v, b, y, s, a, d, g, rt, h, tt, ut; this.$parentWindow = u; v = new n.GridWindow(i); this.gridWindow = v; this.createToolBar(); var c = u.getWindowNo(), it = this.ctx.isAutoNew(), l = v.getTabs(); this.ctx.setAutoCommit(c, this.ctx.isAutoCommit()); this.ctx.setAutoNew(c, it); this.ctx.setIsSOTrx(c, v.getIsSOTrx()); !it && v.getIsTransaction() && this.ctx.setAutoNew(c, !0); this.ctx.setContext(c, "WindowName", v.getName()); b = v.getIsCompositeView(); this.vTabbedPane.init(this, b); !r && e && (r = new n.Query, y = l[0].getKeyColumnName(), y.length == 0 && (y = l[0].getLinkColumnName()), y.length != 0 && (y.endsWith("_ID") ? r.addRestriction(y, n.Query.prototype.EQUAL, e) : r.addRestriction(y, n.Query.prototype.EQUAL, e))); var o, p = [], nt = {}, w = !1, k = !0; for (s = 0; s < l.length; s++)a = c + "_" + l[s].getAD_Tab_ID(), d = { action: a, text: l[s].getName(), toolTipText: l[s].getDescription(), textOnly: !0, iconName: "" }, l[s].getTabLevel() > 0 && (d.textOnly = !1, d.iconName = l[s].getTabLevel() > 3 ? "tl-4" : "tl-" + l[s].getTabLevel()), p[s] = new n.AppsAction(d), o = l[s], k && (s === 0 && (r == null || r.list != null && r.list.length == 0 || r.list[0].code == -10) ? (this.curTab = o, this.firstTabId = a, w = !0, k = !1, r != null && o.setQuery(r)) : r != null && r.list != null && r.list.length > 0 && o.getKeyColumnName().toUpperCase() == r.list[0].columnName.toUpperCase() && (this.firstTabId = a, o.setQuery(r), this.curTab = o, w = !0, k = !1, s > 0 && this.setParentsContext(l, s))), g = null, o.getIsSortTab() ? (rt = new n.VSortTab(c, o.getAD_Table_ID(), o.getAD_ColumnSortOrder_ID(), o.getAD_ColumnSortYesNo_ID(), o.getIsReadOnly(), a), g = rt, s == 0 && (firstTabId = a)) : (h = new n.GridController(!0, !0, a), h.initGrid(!1, c, this, o), w && (this.curGC = h, w = !1), s !== 0 || w || (this.curTab = o, this.curGC = h, this.firstTabId = a, o.getIsHeaderPanel() && (h.initHeaderPanel(this.getParentDetailPane()), this.vHeaderPanel = h.vHeaderPanel, o.isHPanelNotShowInMultiRow && !o.getIsSingleRow() && (h.vHeaderPanel.hidePanel(), h.vHeaderPanel.sizeChangedListner && h.vHeaderPanel.sizeChangedListner.onSizeChanged && h.vHeaderPanel.sizeChangedListner.onSizeChanged()))), h.initFilterPanel(c, this.getFilterPane()), g = h, s === 0 && f && h.switchSingleRow(), o.getIncluded_Tab_ID() != 0 && (nt[o.getIncluded_Tab_ID()] = h), o.getHasPanel() && h.initTabPanel(v.getWindowWidth(), c), b || t.isEmptyObject(nt) || (tt = nt[o.getAD_Tab_ID()], tt != null && (ut = tt.includeTab(h)))), this.vTabbedPane.addTab(a, o, g, p[s]), p[s].onAction = this.onTabChange; k && r != null && r.list != null && r.list.length > 0 && this.curTab.setQuery(r); this.vTabbedPane.setTabControl(p); p = null; this.ctx.setWindowContext(c, "WindowName", i._vo.DisplayName); u.setTitle(n.Env.getHeader(this.ctx, c)); this.setTitle(n.Env.getHeader(this.ctx, c)); u.setName(i._vo.DisplayName); this.curWindowNo = c; b && this.setIncTabReziable(); i = null; u = null }; i.prototype.setIncTabReziable = function () { var n = this.getIncludedEmptyArea(), t = this; n.is(".ui-resizable") || n.resizable({ handles: "n", ghost: !0, minHeight: 40, maxHeight: 500, resize: function (t, i) { n.css("flex-basis", i.size.height + "px") }, start: function () { }, stop: function (i, r) { n.css({ "flex-basis": r.size.height + "px", top: "", width: "" }); t.refresh() } }) }; i.prototype.setIncTabReziable = function () { var n = this.getIncludedEmptyArea(), t = this; n.is(".ui-resizable") || n.resizable({ handles: "n", ghost: !0, minHeight: 40, maxHeight: 500, resize: function (t, i) { n.css("flex-basis", i.size.height + "px") }, start: function () { }, stop: function (i, r) { n.css({ "flex-basis": r.size.height + "px", top: "", width: "" }); t.refresh() } }) }; i.prototype.setParentsContext = function (t, i) { for (var u = [], f = t[i].query.list[0].code, e, o, r = i - 1; r >= 0; r--)t[r].getTabLevel() != t[i].getTabLevel() && t[r].getTabLevel() < t[i].getTabLevel() && (u.push({ TabNo: t[r].getTabNo(), columnName: t[r].getKeyColumnName(), childTableKeyColumn: t[i].getKeyColumnName(), index: r }), i = r); if (u) for (e = t[i].getWindowNo(), r = 0; r < u.length; r++)f && (t[u[r].index].query.addRestriction(u[r].childTableKeyColumn, n.Query.prototype.EQUAL, f), t[u[r].index].setIsZoomAction(!0)), o = { SelectColumn: u[r].columnName, SelectTable: u[r].childTableKeyColumn.substr(0, u[r].childTableKeyColumn.length - 3), WhereColumn: u[r].childTableKeyColumn, WhereValue: f }, f = n.dataContext.getJSONData(n.Application.contextUrl + "JsonData/GetZoomParentRec", o), f && n.context.setWindowContext(e, u[r].columnName, f.toString()) }; i.prototype.selectFirstTab = function (n) { this.curTab.setIsZoomAction(n); setTimeout(function (n) { n.tabActionPerformed(n.firstTabId); n.setTabNavigation(); n = null }, 10, this) }; i.prototype.getIsUILocked = function () { return this.isLocked }; i.prototype.lockUI = function () { this.setBusy(!0, !1) }; i.prototype.unlockUI = function (i) { var u = i != null && i.getAD_Process_ID() != this.curTab.getAD_Process_ID(), r; u && (this.curTab.dataRefresh(), i.getIsTimeout() && n.context.setWindowContext(this.curWindowNo, "Processed", "Y"), this.curGC.dynamicDisplay(-1), this.setStatusLine(i.getSummary(), i.getIsError()), i.customHTML && i.customHTML != "" ? this.displayDialog(t(i.customHTML)) : (n.ProcessInfoUtil.setLogFromDB(i), r = i.getLogInfo(), r.length > 0 && (n.ADialog.info(i.getTitle(), !0, r, ""), this.setStatusLine(i.getSummary(), i.getIsError())))); this.setBusy(!1, u) }; i.prototype.displayDialog = function (i) { var r = new n.ChildDialog; r.setTitle(""); var f = window.innerWidth - 150, e = window.innerHeight - 120, u = t('<div style="max-height: ' + e + "px; max-width: " + f + 'px; min-width: 150px; min-height: 60px;"><\/div>'); u.append(i); r.setContent(u); r.close = function () { r.dispose() }; r.show(); r.hidebuttons() }; i.prototype.actionPerformed = function (t, i) { if (!this.getIsUILocked() && (!(t.source instanceof n.Controls.VButton) || t.source.getField().getIsEditable(!0) && !this.curTab.getIsReadOnly())) { this.setBusy(!0); var r = this; setTimeout(function () { if (t.source instanceof n.Controls.VButton) { r.actionButton(t.source, i) || r.setBusy(!1, !0); return } r.actionPerformedCallback(r, t) }, 100) } }; i.prototype.actionPerformedCallback = function (t, i) { t.aFirst.getAction() === i ? (t.isDefaultFocusSet = !1, t.curGC.navigate(0)) : t.aPrevious.getAction() === i ? (t.isDefaultFocusSet = !1, t.curGC.navigateRelative(-1)) : t.aLast.getAction() === i ? (t.isDefaultFocusSet = !1, t.curGC.navigate(t.curTab.getRowCount() - 1)) : t.aNext.getAction() === i ? (t.isDefaultFocusSet = !1, t.curGC.navigateRelative(1)) : t.aMulti.getAction() === i ? (t.setLastView(""), !t.curGC.getIsSingleRow() && t.curGC.getIsCardRow() ? t.setLastView("Card") : t.curGC.getIsSingleRow() || t.setLastView("Multi"), t.aMulti.setPressed(!t.curGC.getIsSingleRow()), t.aCard.setPressed(!1), t.curGC.switchRowPresentation()) : t.aCard.getAction() === i ? (t.setLastView(""), t.curGC.getIsCardRow() ? t.curGC.switchMultiRow() : t.curGC.switchCardRow(), t.aMulti.setPressed(!1)) : t.aMap.getAction() === i ? (t.aMulti.setPressed(!0), t.aCard.setPressed(!1), t.curGC.switchMapRow()) : t.aBack.getAction() === i ? (t.getLastView() == "Multi" ? (t.aMulti.setPressed(!t.curGC.getIsSingleRow()), t.aCard.setPressed(!1), t.curGC.switchMultiRow(!0)) : t.getLastView() == "Card" && (t.curGC.switchCardRow(!0), t.aMulti.setPressed(!1), t.aCard.setPressed(!0)), t.setLastView("")) : t.aPageUp.getAction() === i ? (t.isDefaultFocusSet = !1, t.curGC.navigatePage(-1)) : t.aPageFirst.getAction() === i ? (t.isDefaultFocusSet = !1, t.curGC.navigatePage(0)) : t.aPageDown.getAction() === i ? (t.isDefaultFocusSet = !1, t.curGC.navigatePage(1)) : t.aPageLast.getAction() === i ? (t.isDefaultFocusSet = !1, t.curGC.navigatePage("last")) : t.aRefresh.getAction() === i ? t.cmd_refresh() : t.aIgnore.getAction() === i ? t.cmd_ignore() : t.aSave.getAction() === i ? t.cmd_save(!0) : t.aNew.getAction() === i ? t.cmd_new(!1) : t.aCopy && t.aCopy.getAction() === i ? t.cmd_new(!0) : t.aDelete.getAction() === i ? t.cmd_delete() : t.aFind.getAction() === i ? t.cmd_finddialog() : t.aChat && t.aChat.getAction() === i ? t.cmd_chat() : t.aAttachment && t.aAttachment.getAction() === i ? t.cmd_attachment() : t.aHistory && t.aHistory.getAction() == i ? t.cmd_history() : t.aPreference.getAction() === i ? t.cmd_preference() : t.aHelp.getAction() === i ? t.cmd_help() : t.aCardDialog.getAction() === i ? t.cmd_cardDialog() : t.aAppointment && t.aAppointment.getAction() === i ? t.cmd_appointment() : t.aTask && t.aTask.getAction() === i ? t.cmd_task() : t.aSubscribe && t.aSubscribe.getAction() === i ? t.cmd_subscribe() : t.aImportMap && t.aImportMap.getAction() === i ? t.cmd_ImportMap() : t.aEmail && t.aEmail.getAction() === i ? t.cmd_email() : t.aLetter && t.aLetter.getAction() === i ? t.cmd_letter() : t.aSms && t.aSms.getAction() === i ? t.cmd_sms() : t.aInfo.getAction() === i ? t.cmd_infoWindow() : t.aZoomAcross && t.aZoomAcross.getAction() === i ? t.cmd_zoomAcross() : t.aRequest && t.aRequest.getAction() === i ? t.cmd_request() : t.aReport.getAction() === i ? t.cmd_report() : t.isPersonalLock && t.aLock.getAction() === i ? t.cmd_lock() : t.isPersonalLock && t.aRecAccess.getAction() === i ? t.cmd_recAccess() : t.aWorkflow != null && i === t.aWorkflow.getAction() ? t.curTab.getRecord_ID() > 0 && n.AEnv.startWorkflowProcess(t.curTab.getAD_Table_ID(), t.curTab.getRecord_ID()) : t.aPrint.getAction() === i ? t.cmd_print() : t.aCreateDocument && t.aCreateDocument.getAction() === i ? r(t, i) : t.aUploadDocument && t.aUploadDocument.getAction() === i ? r(t, i) : t.aViewDocument && t.aViewDocument.getAction() === i ? r(t, i) : t.aAttachFrom && t.aAttachFrom.getAction() === i ? r(t, i) : t.aMarkToExport && t.aMarkToExport.getAction() === i ? t.cmd_markToExport() : t.aShowSummaryLevel.getAction() == i && t.ShowSummaryNodes(); t.setRightBarVisibility(!0); t.setBusy(!1); t = null }; i.prototype.actionButton = function (t, i) { var c = !1, l = !1, a = null, o = t.getColumnName(), r = n.context, h; i || (i = this); var u = this, s = 0, f = 0, e = 0; if (i.curTab && (s = i.curTab.getTabNo(), f = r.getTabRecordContext(u.curWindowNo, s, "AD_Table_ID", !1), e = r.getTabRecordContext(u.curWindowNo, s, "Record_ID", !1)), f < 0 && (f = r.getContextAsInt(u.curWindowNo, "AD_Table_ID")), e < 0 && (e = r.getContextAsInt(u.curWindowNo, "Record_ID")), o.equals("Record_ID")) { n.AEnv.zoom(f, e); return } return h = !0, i.curTab.needSave(!0, !1) && (h = !1, i.cmd_save(!0, function (n) { n && u.actionButtonCallBack(t, c, l, a, o, r, i) })), h ? u.actionButtonCallBack(t, c, l, a, o, r, i) : void 0 }; i.prototype.actionButtonCallBack = function (i, u, f, e, o, s, h) { var rt = h.curTab.getAD_Table_ID(), v = h.curTab.getRecord_ID(), c = h.curTab, k = h.curGC, l = this, y = this.curWindowNo, ut, d, p, tt, w, b, ft, g, nt, it, et, ot; if (v == -1 && c.getKeyColumnName().equals("AD_Language") && (v = s.getContextAsInt(y, "AD_Language_ID")), v == -1 && (i.getProcess_ID() == 306 || i.getProcess_ID() == 307) && (ut = c.getValue("AD_ChangeLog_ID"), v = ut), v == -1 && c.getKeyColumnName().equals("EntityType") && (v = c.getValue("AD_EntityType_ID")), v == -1 && c.getKeyColumnName().toUpperCase().endsWith("_ID")) { n.ADialog.error("SaveErrorRowNotFound", !0, ""); return } if (o.equals("PaymentRule")) { d = new n.VPayment(y, c, i); d.show(); d.init(); d.onClose = function () { d.isInitOK() && (k.dynamicDisplay(i.getName()), k.cmd_save(!1), this.checkAndCallProcess(i, rt, v, s, h, u, f)) }; return } if (o.equals("DocAction")) { p = new n.VDocAction(y, c, v); p.show(); p.onClose = function () { if (p.getNumberOfOptions() == 0) { p.dispose(); l.log.info("DocAction - No Options"); return } if (!p.isStartProcess()) { p.dispose(); return } f = p.isBatch(); u = !0; l.checkAndCallProcess(i, rt, v, s, h, u, f); p.dispose(); h = null }; return } if (o.equals("CreateFrom")) { if (tt = !1, (c.getAD_Window_ID() == 341 || c.getAD_Window_ID() == 170) && (window.MMPM ? (b = MMPM.Requisition.prototype.create(c.getAD_Window_ID(), c.getRecord_ID()), tt = !0) : window.DTD001 && (b = DTD001.Requisition.prototype.create(c.getAD_Window_ID(), c.getRecord_ID()), tt = !0)), tt) return; if (w = n.VCreateFrom.prototype.create(c), w != null) { w.isInitOK() ? (w.showDialog(), w.onClose = function () { w.dispose(); c.dataRefresh() }, w = null) : w.dispose(); return } } else { if (o.equals("GenerateSticker")) { window.DTD001 && (b = DTD001.StickerProduct.prototype.create(c.getAD_Window_ID(), c.getRecord_ID())); return } if (o.equals("DTD001_GenerateSticker")) { window.DTD001 && (b = DTD001.MRProductSticker.create(c.getAD_Window_ID(), c.getRecord_ID(), c.getTabLevel())); return } if (o.equals("BGT01_CreateLinePo")) { window.BGT01 && BGT01.CreateLineMovement(c.getAD_Window_ID(), c.getAD_Tab_ID(), c.getRecord_ID()); return } if (o == "Posted" && n.MRole.getDefault().getIsShowAcct()) { if (ft = n.context.getWindowContext(y, "Processed"), ft != "Y" && (g = n.context.getWindowContext(y, "DocStatus"), this.DocActionVariables.STATUS_COMPLETED != g && this.DocActionVariables.STATUS_CLOSED != g && this.DocActionVariables.STATUS_REVERSED != g && this.DocActionVariables.STATUS_VOIDED != g)) { n.ADialog.info(n.Msg.getMsg("PostDocNotComplete")); return } return nt = c.getValue("Posted"), nt != null && nt == "Y" ? (it = new n.AcctViewer(n.context.getAD_Client_ID(), c.getAD_Table_ID(), c.getRecord_ID(), y, c.getAD_Window_ID()), it != null && (l.setBusy(!1), it.showDialog()), it = null) : n.ADialog.confirm("PostImmediate?", !0, "", "Confirm", function (i) { if (i) { l.setBusy(!0, !0); var r = nt != null && nt != "N"; a(function (i) { var u = !1; if (i == "Yes" && (u = !0), window.FRPT && u) var f = Number(n.context.getWindowTabContext(y, 0, "AD_Org_ID")), e = c.getAD_Window_ID(), o = Number(n.context.getWindowTabContext(y, 0, "C_DocType_ID")), s = FRPT.PostingLogic(y, c.getAD_Table_ID(), c.getRecord_ID(), r, f, e, o, function () { k.dataRefresh(); l.setBusy(!1, !0); return }); else t.ajax({ url: n.Application.contextUrl + "Posting/PostImmediate", dataType: "json", data: { AD_Client_ID: n.context.getAD_Client_ID(), AD_Table_ID: c.getAD_Table_ID(), Record_ID: c.getRecord_ID(), force: r }, error: function () { l.setBusy(!1, !0); n.ADialog.info("ERRORGettingPostingServer") }, success: function (t) { t.result != "OK" ? (l.setBusy(!1, !0), n.ADialog.info(t.result)) : (l.setBusy(!1, !0), k.dataRefresh()) } }) }) } else return l.setBusy(!1, !0), !1 }), !1 } if (o.equals("SendNewEMail")) return } if (i.AD_Process_ID > 0) return et = this.checkAndCallProcess(i, rt, v, s, h), h = null, et; if (i.AD_Form_ID > 0 && (n.MRole.getFormAccess(i.AD_Form_ID) ? ot = new n.WForm(n.Env.getScreenHeight(), i.AD_Form_ID, c, y) : n.ADialog.warn("AccessTableNoView")), i.mField.getAD_Reference_Value_ID() == 435) { switch (i.value) { case "APT": l.cmd_appointment(); break; case "EML": l.cmd_email(); break; case "SMS": l.cmd_sms(); break; case "LER": l.cmd_letter(); break; case "TAK": l.cmd_task(); break; case "CHT": l.cmd_chat(); break; case "ATT": l.cmd_attachment(); break; case "HIY": l.cmd_history(); break; case "CRT": l.cmd_request(); break; case "CRD": l.cmd_new(!0); break; case "SRD": l.cmd_subscribe(); break; case "ZAS": l.cmd_zoomAcross(); break; case "MTE": l.cmd_markToExport(); break; case "IMP": l.cmd_ImportMap(); break; default: r(l, i.value) }c = k = l = null } }; i.prototype.checkAndCallProcess = function (n, t, i, r, u, f, e) { if (n.getProcess_ID() != 0) { var o = !0, h = this; return u.curTab.needSave(!0, !1) && (o = !1, u.cmd_save(!0, function (u) { if (u) return s(n, t, i, r, h, f, e) })), o ? s(n, t, i, r, h, f, e) : void 0 } }; i.prototype.tabActionPerformed = function (t) { var i, h, u, c, o; if (!this.vTabbedPane.getIsTabChanged(t)) return console.log("tabNotChange"), !1; var l = !1, f = !1, e = this.vTabbedPane.getTabElement(t), r = this.curST || this.curGC, s = null; if (this.toggleASearchIcons(!1, !1), this.setAdvancedSerachText(!0, ""), i = this, !this.vTabbedPane.getIsWorkbench()) { if (this.curWinTab = this.vTabbedPane, h = this.curWinTab.getSelectedIndex(), l = h < this.curTabIndex, u = null, c = null, e instanceof n.VSortTab ? (c = e, f = !0) : u = e, o = !0, this.curGC != null) { if (this.curTab.needSave(!0, !1)) if (this.curTab.needSave(!0, !0)) if (this.ctx.isAutoCommit(this.curWindowNo)) { if (!this.curTab.dataSave(!0)) return this.vTabbedPane.restoreTabChange(), this.setBusy(!1, !0), !1 } else o = !1, n.ADialog.confirm("SaveChanges?", !0, this.curTab.getCommitWarning(), "Confirm", function (n) { if (n) { if (!i.curTab.dataSave(!0)) return i.vTabbedPane.restoreTabChange(), i.setBusy(!1, !0), !1 } else i.curTab.dataIgnore(); r = i.curGC; s = i.curGC; i.curGC = null; i.curST != null && (i.curST.saveData(), i.curST.unRegisterAPanel(), r = i.curST, i.curST = null); i.curTabIndex = h; f || (i.curGC = u); i.tabActionPerformedCallback(t, l, f, e, r, s, u, c) }); else i.curTab.dataIgnore(); o && (r = this.curGC, s = this.curGC, this.curGC = null) } o && (this.curST != null && (this.curST.saveData(), this.curST.unRegisterAPanel(), r = this.curST, this.curST = null), this.curTabIndex = h, f || (this.curGC = u)) } return o && i.tabActionPerformedCallback(t, l, f, e, r, s, u, c), !0 }; i.prototype.tabActionPerformedCallback = function (t, i, r, u, f, e, o, s) { var h, c; f.setVisible(!1); f.getRoot().detach(); this.getLayout().append(u.getRoot()); u.setVisible(!0); this.vTabbedPane.setSelectedTab(t); h = i; r ? (this.curST = s, s.registerAPanel(this), s.loadData()) : (o.activate(e), e && e.detachDynamicAction(), this.curTab = o.getMTab(), this.setDynamicActions(), !this.curTab.getIsZoomAction() && this.curTab.getTabLevel() > 0 && (c = new n.Query, this.curTab.query = c, h = !1), i && this.curTab.getIsCurrent() ? (this.curTab.getTabLevel() == 0 ? this.curTab.searchText ? this.setAdvancedSerachText(!1, this.curTab.searchText) : this.curTab.hasSavedAdvancedSearch && this.toggleASearchIcons(!0, !1) : this.curTab.searchText ? this.setAdvancedSerachText(!1, this.curTab.searchText) : this.curTab.hasSavedAdvancedSearch && this.toggleASearchIcons(!0, !1), o.dataRefresh()) : (this.curTab.getTableModel().setCurrentPage(1), !this.curGC.onDemandTree || o.isZoomAction ? (this.clearSearchText(), this.setDefaultSearch(o), o.query(this.curTab.getOnlyCurrentDays(), 0, !1)) : this.setDefaultSearch(o)), this.curGC.onDemandTree ? this.aShowSummaryLevel.show() : this.aShowSummaryLevel.hide()); r ? (this.aMulti.setPressed(!1), this.aMulti.setEnabled(!1), this.aCard.setEnabled(!1), this.aCardDialog.setEnabled(!1), this.aNew.setEnabled(!1), this.aDelete.setEnabled(!1), this.aFind.setEnabled(!1), this.aRefresh.setEnabled(!1), this.aNext.setEnabled(!1), this.aLast.setEnabled(!1), this.aFirst.setEnabled(!1), this.aPrevious.setEnabled(!1), this.aPageFirst.setEnabled(!1), this.aPageUp.setEnabled(!1), this.aPageLast.setEnabled(!1), this.aPageDown.setEnabled(!1)) : (this.aMulti.setEnabled(!0), this.aMulti.setPressed(this.curGC.getIsSingleRow() || this.curGC.getIsMapRow()), this.aCard.setEnabled(!0), this.aCardDialog.setEnabled(!0), this.aFind.setEnabled(!0), this.aRefresh.setEnabled(!0)); this.showTabPanel(this.curTab.getHasPanel()); this.showFilterPanel(h); this.refresh(); this.setTabNavigation(); this.aParentDetail && this.aParentDetail.evaluate(u); f = u = null; this.curTab.getAD_Process_ID() == 0 ? this.aPrint.setEnabled(!1) : this.aPrint.setEnabled(!0); this.curTab.getIsMapView() ? this.aMap.show() : this.aMap.hide(); this.setLastView("") }; i.prototype.setDefaultSearch = function (t) { var i = this, u = [], r, o, e, s; if (u[0] = new n.DB.SqlParam("@AD_Tab_ID", this.curTab.getAD_Tab_ID()), u[1] = new n.DB.SqlParam("@AD_User_ID", this.ctx.getAD_User_ID()), u[2] = new n.DB.SqlParam("@AD_Tab_ID1", this.curTab.getAD_Tab_ID()), u[3] = new n.DB.SqlParam("@AD_User_ID1", this.ctx.getAD_User_ID()), u[4] = new n.DB.SqlParam("@AD_Client_ID", this.ctx.getAD_Client_ID()), u[5] = new n.DB.SqlParam("@AD_Tab_ID2", this.curTab.getAD_Tab_ID()), u[6] = new n.DB.SqlParam("@AD_Table_ID", this.curTab.getAD_Table_ID()), r = f("VIS_117", u), r && r.tables[0].rows && r.tables[0].rows.length > 0) if (i.curTab.hasSavedAdvancedSearch = !0, i.curTab.getTabLevel() != 0 || t.gTab.getIsZoomAction()) i.toggleASearchIcons(!0, !1); else { for (o = !1, e = 0; e < r.tables[0].rows.length; e++)r.tables[0].rows[e].cells.ad_defaultuserquery_id > 0 && (o = !0, i.setAdvancedSerachText(!1, r.tables[0].rows[e].cells.name), s = new n.Query(i.curTab.getTableName(), !1), s.addRestriction(r.tables[0].rows[e].cells.code), i.curTab.setQuery(s), i.defaultSearch = !1, i.curTab.searchText = r.tables[0].rows[e].cells.name, toastr.success(n.Msg.getMsg("DefaultSerachExist"), "", { timeOut: 4e3, positionClass: "toast-top-center", closeButton: !0 })); !i.curTab.hasSavedAdvancedSearch; i.toggleASearchIcons(!0, o) } else i.toggleASearchIcons(!1, !1), i.setAdvancedSerachText(!0, "") }; i.prototype.dataStatusChanged = function (t) { var s = t.getMessage(), p = this.curTab.getIsQueryActive() || this.curTab.getOnlyCurrentDays() > 0, i, h, o, y, c, l, a, v, u; p && (s = "[ " + s + " ]"); this.statusBar.setStatusDB(s, t); (t.getAD_Message() != null || t.getInfo() != null) && (i = new StringBuilder, h = t.getAD_Message(), h != null && h.length > 0 && i.append(n.Msg.getMsg(t.getAD_Message())), o = t.getInfo(), o != null && o.length > 0 && (i.length() > 0 && !i.endsWith(":") && i.append(": "), i.append(o)), i.length() > 0 && (y = i.indexOf("\n"), y != -1 && i.replace("\n", " - "), this.setStatusLine(i.toString(), t.getIsError()))); t.getIsError() && !t.getIsConfirmed() ? (n.ADialog.error(t.getAD_Message(), !0, t.getInfo()), t.setConfirmed(!0), this.errorDisplayed = !0) : t.getIsWarning() && !t.getIsConfirmed() && (n.ADialog.warn(t.getAD_Message(), !0, t.getInfo()), t.setConfirmed(!0)); c = t.getIsFirstRow(); this.aFirst.setEnabled(!c); this.aPrevious.setEnabled(!c); l = t.getIsLastRow(); this.aNext.setEnabled(!l); this.aLast.setEnabled(!l); a = t.getIsFirstPage(); this.aPageFirst.setEnabled(!a); this.aPageUp.setEnabled(!a); v = t.getIsLastPage(); this.aPageLast.setEnabled(!v); this.aPageDown.setEnabled(!v); var r = t.getIsChanged() || t.getIsInserting(), f = this.curTab.getIsReadOnly(), e = !f; e && (e = this.curTab.getIsInsertRecord()); this.aNew.setEnabled(!r && e); this.aCopy && this.aCopy.setEnabled(!r && e); this.aRefresh.setEnabled(!r); this.aDelete.setEnabled(!r && !f && t.getCurrentRow() > -1); f && this.curTab.getIsAlwaysUpdateField() && (f = !1); this.aIgnore.setEnabled(r && !f); this.aSave.setEnabled(r && !f); this.aCardDialog.setEnabled(!r); t.getTotalRows() == 0 && e ? (this.aNew.setEnabled(!0), this.aDelete.setEnabled(!1), this.curGC.isZoomAction || this.highlightButton(!0, this.aNew)) : this.highlightButton(!1, this.aNew); this.aMulti.setPressed(this.curGC.getIsSingleRow() || this.curGC.getIsMapRow()); this.aCard.setPressed(this.curGC.getIsCardRow()); this.aBack.setEnabled(this.getLastView().length > 0); this.aChat && this.aChat.setPressed(this.curTab.hasChat()); this.aAttachment && this.aAttachment.setPressed(this.curTab.hasAttachment()); this.aMarkToExport && this.aMarkToExport.setPressed(this.curTab.hasMarked()); this.aSubscribe && this.aSubscribe.setPressed(this.curTab.HasSubscribed()); this.isPersonalLock && (this.aLock.setEnabled(!0), this.aLock.setPressed(this.curTab.getIsLocked()), this.aRecAccess.setEnabled(!0)); this.curTab.getRecord_ID() == -1 ? (this.aChat && this.aChat.setEnabled(!1), this.aAttachment && this.aAttachment.setEnabled(!1), this.aSubscribe && this.aSubscribe.setEnabled(!1), this.aHistory && this.aHistory.setEnabled(!1), this.aEmail && this.aEmail.setEnabled(!1), this.aLetter && this.aLetter.setEnabled(!1), this.aSms && this.aSms.setEnabled(!1), this.aFaxEmail && this.aFaxEmail.setEnabled(!1), this.aCreateDocument && this.aCreateDocument.setEnabled(!1), this.aUploadDocument && this.aUploadDocument.setEnabled(!1), this.aViewDocument && this.aViewDocument.setEnabled(!1), this.aAttachFrom && this.aAttachFrom.setEnabled(!1), this.aZoomAcross && this.aZoomAcross.setEnabled(!1), this.aMarkToExport && this.aMarkToExport.setEnabled(!1), this.aArchive && this.aArchive.setEnabled(!1), this.aEmailAttach && this.aEmailAttach.setEnabled(!1), this.aAppointment && this.aAppointment.setEnabled(!1), this.aTask && this.aTask.setEnabled(!1), this.aRequest && this.aRequest.setEnabled(!1), this.aWorkflow && this.aWorkflow.setEnabled(!1), this.aCopy && this.aCopy.setEnabled(!1), this.aLock && this.aLock.setEnabled(!1), this.aRecAccess && this.aRecAccess.setEnabled(!1)) : (this.aChat && this.aChat.setEnabled(!0), this.aAttachment && this.aAttachment.setEnabled(!0), this.aSubscribe && this.aSubscribe.setEnabled(!0), this.aHistory && this.aHistory.setEnabled(!0), this.aEmail && this.aEmail.setEnabled(!0), this.aLetter && this.aLetter.setEnabled(!0), this.aSms && this.aSms.setEnabled(!0), this.aFaxEmail && this.aFaxEmail.setEnabled(!0), this.aImportMap && this.aImportMap.setEnabled(!0), this.aCreateDocument && this.aCreateDocument.setEnabled(!0), this.aUploadDocument && this.aUploadDocument.setEnabled(!0), this.aViewDocument && this.aViewDocument.setEnabled(!0), this.aAttachFrom && this.aAttachFrom.setEnabled(!0), this.aZoomAcross && this.aZoomAcross.setEnabled(!0), this.aMarkToExport && this.aMarkToExport.setEnabled(!0), this.aArchive && this.aArchive.setEnabled(!0), this.aEmailAttach && this.aEmailAttach.setEnabled(!0), this.aAppointment && this.aAppointment.setEnabled(!0), this.aTask && this.aTask.setEnabled(!0), this.aRequest && this.aRequest.setEnabled(!0), this.aWorkflow && this.aWorkflow.setEnabled(!0), this.aCopy && this.aCopy.setEnabled(!0), this.aLock && this.aLock.setEnabled(!0)); t.getIsInserting() ? this.statusBar.setInfo(null) : (u = this, n.GridTab.prototype.getFooterInfo(this.curTab.getTableName(), n.context, this.curTab.getWindowNo(), this.curTab.getTabNo(), t.getRecord_ID()).then(function (n) { u && u.statusBar && u.statusBar.setInfo(n) }, function (n) { u && u.statusBar && u.statusBar.setInfo(n) })); this.curWinTab == this.vTabbedPane && (this.curWinTab.evaluate(null), this.curWinTab.notifyDataChanged()) }; i.prototype.setStatusLine = function (n, t) { this.statusBar.setStatusLine(n, t) }; i.prototype.cmd_refresh = function () { this.cmd_save(!1); this.curGC.dataRefreshAll() }; i.prototype.cmd_ignore = function () { this.curGC.dataIgnore() }; i.prototype.cmd_help = function () { var t = new n.Apps.help(this.gridWindow) }; i.prototype.cmd_cardDialog = function () { var t = new n.CVDialog(this); t.show() }; i.prototype.cmd_save = function (n, t) { if (this.curST != null && (n = !1), this.errorDisplayed = !1, this.curST != null) { this.curST.saveData(); this.aSave.setEnabled(!1); return } return this.cmd_save2(n, this.curTab, this.curGC, this, t) }; i.prototype.cmd_save2 = function (t, i, r, u, f) { var o = !0, e; return i.getCommitWarning().length > 0 && i.needSave(!0, !1) && (o = !1, n.ADialog.confirm("SaveChanges?", !0, i.getCommitWarning(), "Confirm", function (n) { if (n) { var i = r.dataSave(t); t && !i && !u.errorDisplayed; r.refreshTabPanelData(u.curTab.getRecord_ID()); t && r.dynamicDisplay(-1) } }), f && f(e)), o ? (e = r.dataSave(t), t && !e && !u.errorDisplayed, t && r.dynamicDisplay(-1), f && f(e), r.refreshTabPanelData(i.getRecord_ID()), e) : void 0 }; i.prototype.cmd_new = function (n) { this.curTab.getIsInsertRecord() && (this.curGC.setNewRecordLayout(), this.curGC.dataNew(n)) }; i.prototype.cmd_delete = function () { var t, i; if (!this.curTab.getIsReadOnly()) { if (t = this.curGC.canDeleteRecords(), t.length > 0) { n.ADialog.error("CannotDelete", !0, " [ " + t.join(",") + "]"); return } i = this; n.ADialog.confirm("DeleteRecord?", !0, "", "Confirm", function (n) { n && i.curGC.dataDeleteAsync() }) } }; i.prototype.cmd_find = function (n) { if (this.curTab) { if (!this.defaultSearch) { this.defaultSearch = !0; return } this.setBusy(!0); var t = null; n && n.trim() !== "" && (n = "%" + n + "%", t = this.curTab.getSearchQuery(n)); this.findRecords(t) } }; i.prototype.cmd_chat = function () { var o = this.curTab.getRecord_ID(), r, u, f, t, i, e; if (o == -1) { this.aChat.setEnabled(!1); return } for (r = null, u = null, f = 0; f < this.curTab.getFieldCount(); f++)if (t = this.curTab.getField(f), t.getIsKey() && (r = t.getHeader()), (t.getColumnName().toString() == "Name" || t.getColumnName().toString() == "DocumentNo") && t.getValue() != null && t.getValue() != "" && (u = t.getValue()), r != null && u != null) break; i = this; e = new n.Chat(o, this.curTab.getCM_ChatID(), this.curTab.getAD_Table_ID(), r + ": " + u, this.curWindowNo); e.onClose = function () { i.curTab.loadChats(); i.aChat.setPressed(i.curTab.hasChat()); i = null }; e.show() }; i.prototype.cmd_appointment = function () { var t = this.curTab.getRecord_ID(), i = this.curTab.getAD_Table_ID(); t != -1 && n.AppointmentsForm.init(i, t, 0, 0, !1, !0) }; i.prototype.cmd_task = function () { var t = this.curTab.getRecord_ID(), i = this.curTab.getAD_Table_ID(); t != -1 && n.AppointmentsForm.init(i, t, 0, 0, !0) }; i.prototype.cmd_letter = function () { var r = this.curTab.getRecord_ID(), i, t; if (r == -1) { this.aLetter.setEnabled(!1); return } i = new n.Email("", this.curTab, this.curGC, r, !1); t = new n.CFrame; t.setName(n.Msg.getMsg("Letter")); t.setTitle(n.Msg.getMsg("Letter")); t.hideHeader(!0); t.setContent(i); t.show(); i.initializeComponent() }; i.prototype.cmd_email = function () { var r = this.curTab.getRecord_ID(), i, t; if (r == -1) { this.aEmail.setEnabled(!1); return } i = new n.Email("", this.curTab, this.curGC, r, !0); t = new n.CFrame; t.setName(n.Msg.getMsg("EMail")); t.setTitle(n.Msg.getMsg("EMail")); t.hideHeader(!0); t.setContent(i); t.show(); i.initializeComponent() }; i.prototype.cmd_report = function () { var i, t, r, u, e, s, f, h, o; if (!n.MRole.getDefault().getIsCanReport(this.curTab.getAD_Table_ID())) { n.ADialog.warn("AccessCannotReport"); return } if (this.curTab.needSave(!0, !1)) { this.cmd_save(!0); return } for (i = null, i = this.curTab.query && this.curTab.query.list.length > 0 ? this.curTab.query : new n.Query(this.curTab.getTableName()), i.tableName = this.curTab.getTableName(), t = this.curTab.getLinkColumnName(), t.length == 0 && (t = this.curTab.getKeyColumnName()), r = null, u = null, e = 0, s = this.curTab.getFieldCount(); e < s; e++)if (f = this.curTab.getField(e), f.getIsKey() && (r = f.getHeader()), (f.getColumnName() == "Name" || f.getColumnName() == "DocumentNo") && f.getValue() != null && (u = f.getValue()), r != null && u != null) break; h = this.curTab.getParentColumnNames().length == 0; t.length != 0 && (h && (this.curTab.getLinkColumnName() == null || this.curTab.getLinkColumnName() == "") || (t.endsWith("_ID") ? r == null && u == null ? i.addRestriction(t, n.Query.prototype.EQUAL, n.context.getContextAsInt(this.curWindowNo, t)) : i.addRestriction(t, n.Query.prototype.EQUAL, n.context.getContextAsInt(this.curWindowNo, t), r, u) : r == null && u == null ? i.addRestriction(t, n.Query.prototype.EQUAL, n.context.getContext(this.curWindowNo, t)) : i.addRestriction(t, n.Query.prototype.EQUAL, n.context.getContext(this.curWindowNo, t), r, u))); o = this.curGC.onDemandTree ? this.isSummaryVisible ? new n.AReport(this.curTab.getAD_Table_ID(), i, this.curTab.getAD_Tab_ID(), this.curWindowNo, this.curTab, this.curGC.treeID, this.curGC.treeNodeID, !0) : new n.AReport(this.curTab.getAD_Table_ID(), i, this.curTab.getAD_Tab_ID(), this.curWindowNo, this.curTab, this.curGC.treeID, this.curGC.treeNodeID, !1) : new n.AReport(this.curTab.getAD_Table_ID(), i, this.curTab.getAD_Tab_ID(), this.curWindowNo, this.curTab, 0, 0, !1) }; i.prototype.cmd_print = function () { var i = this.curGC.getSelectedRows(), r, f, s, l, h, o, t, c, u; if (i.length == 0) { n.ADialog.info("SelectRecord"); return } if (r = this.curTab.getAD_Process_ID(), r != 0) if (f = "VIS_118", s = [], s[0] = new n.DB.SqlParam("@AD_Process_ID", r), l = e(f, s), f = "VIS_119", h = e(f), i.length > 1 && l > 0 && h && h.toString() > "1.0.0.3") { if (this.curTab.needSave(!0, !1)) { this.cmd_save(!0); return } for (o = "", t = 0; t < i.length; t++)t == 0 ? o = i[t][this.curTab.getKeyColumnName().toLower()] : o += "," + i[t][this.curTab.getKeyColumnName().toLower()]; u = new n.APrint(r, this.curTab.getAD_Table_ID(), 0, this.curWindowNo, o, this.curTab, !0); u.start(this.aPrint.getListItmIT()) } else { if (c = this.curTab.getRecord_ID(), c == -1) { n.ADialog.info(n.Msg.getMsg("SelectRecord")); return } if (this.curTab.needSave(!0, !1)) { this.cmd_save(!0); return } u = new n.APrint(r, this.curTab.getAD_Table_ID(), c, this.curWindowNo, null, this.curTab); u.start(this.aPrint.getListItmIT()) } }; i.prototype.cmd_sms = function () { var r = this.curTab.getRecord_ID(), i, t; if (r == -1) { this.aSms.setEnabled(!1); return } i = new n.Sms(this.curTab, this.curGC, r, !1); t = new n.CFrame; t.setName(n.Msg.getMsg("Sms")); t.setTitle(n.Msg.getMsg("Sms")); t.hideHeader(!0); t.setContent(i); t.show(); i.initializeComponent() }; i.prototype.cmd_subscribe = function () { var i = this.curTab.getRecord_ID(), t, r; if (i == -1) { this.aSubscribe.setEnabled(!1); return } t = this; r = function () { t.curTab.loadSubscribe(); t.aSubscribe.setPressed(t.curTab.HasSubscribed()) }; n.dataContext.subscribeUnsubscribeRecords(this.curTab.getCM_SubScribedID(), this.curTab.getAD_Window_ID(), i, this.curTab.getAD_Table_ID(), r) }; i.prototype.cmd_ImportMap = function () { if (window.VDIU) { if (this.curTab.getIsReadOnly()) { n.ADialog.warn("ReadOnly"); return } var i = new VDIU.ImportExcel(this.curTab.getAD_Window_ID(), this.gridWindow.getName()), t = new n.CFrame; t.setName(n.Msg.getMsg("Import")); t.setTitle(n.Msg.getMsg("Import")); t.setContent(i); t.show(); i.initialize() } else n.ADialog.error("PleaseInstallExcelImportModule") }; i.prototype.cmd_attachment = function () { if (this.curTab.getRecord_ID() < 1) { this.aAttachment.setEnabled(!1); return } var t = this, i = new n.attachmentForm(this.curTab.getWindowNo(), 0, this.curTab.getAD_Table_ID(), this.curTab.getRecord_ID(), ""); i.setIsWindowAction(!0); i.show(); i.onClose = function () { t.curTab.loadAttachments(); t.aAttachment.setPressed(t.curTab.hasAttachment()); t = null } }; i.prototype.cmd_history = function () { var t = null, i = 0, r = 0; (Object.keys(this.curGC.getColumnNames()).indexOf("C_BPartner_ID") > 0 || this.curTab.getField("C_BPartner_ID") != null && this.curTab.getField("C_BPartner_ID").getValue() > 0) && (i = this.curTab.getField("C_BPartner_ID").getValue()); (Object.keys(this.curGC.getColumnNames()).indexOf("AD_User_ID") > 0 || this.curTab.getField("AD_User_ID") != null && this.curTab.getField("AD_User_ID").getValue() > 0) && (r = this.curTab.getField("AD_User_ID").getValue()); t = new n.AttachmentHistory(this.curTab.getAD_Table_ID(), this.curTab.getRecord_ID(), i, r, this.curTab.getKeyColumnName()); t.show() }; i.prototype.clearSearchText = function () { this.curGC && (this.curGC.searchCode = "", this.curTab.searchText = "") }; i.prototype.cmd_finddialog = function () { var i = new n.Find(this.curWindowNo, this.curTab, 0), t = this, r = ""; i.onClose = function () { var e, o; if (i.getIsOKPressed() || i.needRefresh()) { t.setAdvancedSerachText(!0, ""); t.clearSearchText(); t.isSummaryVisible ? t.curTab.setShowSummaryNodes(!0) : t.curTab.setShowSummaryNodes(!1); var u = i.getQuery(), s = i.getCurrentDays(), f = i.getIsCreated(); r = i.getSavedQueryName(); t.curTab.userQueryID = i.getSavedID(); i.dispose(); i = null; t.curTab.getTableModel().setCurrentPage(1); u != null && u.getIsActive() ? (t.curTab.setQuery(u), t.curGC.query(0, 0, f)) : u != null && (e = n.MRole.getDefault().getMaxQueryRecords(), t.curTab.setQuery(null), t.curGC.query(s, e, f)); o = t.curTab.getIsQueryActive() || t.curTab.getOnlyCurrentDays() > 0; t.aFind.setPressed(o); t.curGC.getIsSingleRow() && t.curGC.switchMultiRow(!0) } t.refreshSavedASearchList(!1, r); t = null }; i.show() }; i.prototype.cmd_preference = function () { var t = new n.Framework.UserPreference; t.load(); t.showDialog(); t = null }; i.prototype.cmd_infoWindow = function () { n.InfoMenu.show(this.aInfo.getItem()) }; i.prototype.cmd_zoomAcross = function () { var r = this.curTab.getRecord_ID(), i, t, u; r > 0 && (i = new n.Query, t = this.curTab.getKeyColumnName(), t.length == 0 && (t = this.curTab.getLinkColumnName()), t.length != 0 && (t.endsWith("_ID") ? i.addRestriction(t, n.Query.prototype.EQUAL, n.context.getContextAsInt(this.curWindowNo, t)) : i.addRestriction(t, n.Query.prototype.EQUAL, n.context.getContext(this.curWindowNo, t))), u = new n.AZoomAcross(this.aZoomAcross, this.curTab.getTableName(), i, this.curTab.getAD_Window_ID(), this, this.aZoomAcross.getListItmIT(), t, r), u.init()) }; i.prototype.cmd_request = function () { var t = this.curTab.getRecord_ID(); if (t > 0) { var r = this.curTab.getAD_Table_ID(), u = this.curTab.getValue("C_BPartner_ID"), i = new n.ARequest(this.aRequest, r, t, u, null, this.aRequest.getListItmIT()); i.getRequests(); i = null } }; i.prototype.cmd_markToExport = function () { var f = this.curTab.getRecord_ID(), e = this.curGC.getSelectedRows(), h = null, o = this.curTab.getAD_Table_ID(), s = this.curTab.getTableName(), c, l, a, r, v, u, i, t; if (f == -1) { if (c = { AD_Table_ID: o }, l = n.dataContext.getJSONData(n.Application.contextUrl + "JsonData/GetKeyColumns", c), l == null) return } else { if (a = s + "_ID", r = "", this.curGC.singleRow) { h = f; i = new n.MarkModule; i.init(h, o, s); i.show(); t = this; i.onClose = function () { t.curTab.loadMarking(); t.aMarkToExport.setPressed(t.curTab.hasMarked()); t = null }; return } if (v = e.length, v == 1) r = f; else { for (u = 0; u < e.length; u++)r += e[u][a.toLowerCase()] + ","; r.endsWith(",") && (r = r.substring(0, r.length - 1)) } i = new n.MarkModule; i.init(r, o, s); i.show(); t = this; i.onClose = function () { t.curTab.loadMarking(); t.aMarkToExport.setPressed(t.curTab.hasMarked()); t = null }; return } }; i.prototype.cmd_lock = function () { var i = !1, t; this.isPersonalLock && ((t = this.curTab.getRecord_ID(), t == -1 || t < 0) || (this.curTab.locks(n.context, t, this.aLock.getIsPressed()), this.curTab.loadAttachments(), i = this.curTab.getIsLocked(), this.aLock.setPressed(i))) }; i.prototype.cmd_recAccess = function () { var t = new n.RecordAccessDialog; t.Load(this.curTab.getAD_Table_ID(), this.curTab.getRecord_ID()) }; i.prototype.ShowSummaryNodes = function () { this.isSummaryVisible ? (this.aShowSummaryLevel.setPressed(!1), this.isSummaryVisible = !1) : (this.aShowSummaryLevel.setPressed(!0), this.isSummaryVisible = !0) }; i.prototype.cmd_call = function () { var r = this.curTab.getRecord_ID(), u, i, t; if (r == -1) { this.aCall.setEnabled(!1); return } u = this.curTab.getAD_Table_ID(); VA048 && VA048.Apps ? (i = new VA048.Apps.CallForm, i.initializeComponent(u, r), t = new n.CFrame, t.setName(n.Msg.getMsg("Call")), t.setTitle(n.Msg.getMsg("Call")), t.hideHeader(!0), t.setContent(i), t.show()) : alert(n.Msg.getMsg("Please install Communication module first")) }; i.prototype.getLastView = function () { return this.lastView || (this.lastView = ""), this.lastView }; i.prototype.setLastView = function (n) { n == "Card" || n == "Multi" ? this.aBack.setEnabled(!0) : (this.aBack.setEnabled(!1), strview = ""); this.lastView = n }; i.prototype.dispose = function () { this.aParentDetail && this.aParentDetail.dispose(); this.curST != null && (this.curST.unRegisterAPanel(), this.curST = null); this.vTabbedPane.dispose(); this.vTabbedPane = null; this.gridWindow && (this.gridWindow.dispose(), this.gridWindow = null, this.ctx.setAutoCommit(this.$parentWindow.getWindowNo(), !1), this.ctx.removeWindow(this.$parentWindow.getWindowNo()), n.MLookupCache.cacheReset(this.$parentWindow.getWindowNo())); this.ctx = null; this.$parentWindow = null; this.tabPages = null; this.curGC = null; this.curST = null; this.aParentDetail = null; this.curTab = null; this.disposeComponent() }; n.APanel = i }(VIS, jQuery), function (n, t) { function i(i, r) { function w() { s = u.find(".vis-ad-w-p-t-c-inc-tc"); f = u.find(".vis-ad-w-p-t-c-inc"); h = u.find(".vis-ad-w-p-inc-tabs-oflow").hide(); v = u.find(".vis-ad-w-p-inc-tabs"); u.css("display", "flex"); y = u.find(".vis-ad-w-p-inc-content"); e = u.find(".vis-ad-w-p-inc-tb-lc"); l = u.find(".vis-ad-w-p-inc-tab-a-list"); c = u.find(".vis-ad-w-p-inc-tab-ac-buttons") } function p(n) { n ? u.css("display", "none") : u.css("display", "flex") } var u, o; this.aTabbedPane = i; u = r; this.tabLIObj = []; this.tabItems = []; this.tabIds = []; this.tabs = []; this.headerTab = null; this.aNew = null; this.aSave = null; this.aDelete = null; this.aRefresh = null; var s = null, f = null, h = null, v = null, y = null, e = null, l = null, c = null, a = this; w(); o = function (n) { a.actionPerformed(n) }; h.on("click", function (n) { var e, o; if (n.stopPropagation(), e = t(n.target).data("dir"), e) { var c = f.width(), h = s.width(), i = f.scrollLeft(), r = Math.ceil(c / 2), u = 0; if (e == "r") { if (i + r >= h - r) return; o = h - c; u = i + r; f.animate({ scrollLeft: u > o ? o : u }, 1e3) } else if (e == "b") { if (i == 0) return; u = i - r; f.animate({ scrollLeft: u < 0 ? 0 : u }, 1e3) } if (e == "rl") { if (i + r >= h - r) return; o = h - c; f.animate({ scrollLeft: o }, 500) } else if (e == "bf") { if (i == 0) return; u = i - r; f.animate({ scrollLeft: 0 }, 500) } } }); this.setTabControl = function (n) { var i, t, r; if (this.resetListners(), this.headerTab = n, s.empty(), n.ChildTabsItems.length == 0) { p(!0); return } for (p(), i = 0; i < n.ChildTabsItems.length; i++)t = n.ChildTabsItems[i], r = t.getListItm(), this.tabLIObj[t.action] = r, s.append(r), t.setEnabled(!1), t.onAction = null, n.TabLevel + 1 >= n.ChildTabs[i].getTabLevel() && (t.onAction = this.onTabChange, t.setEnabled(!0)), n.ChildEle[i].addSubTabDataStatusListner(this), this.tabItems.push(n.ChildEle[i]), this.tabIds.push(t.getAction()), this.tabs.push(t), i == 0 && (this.selectedTab = r) }; this.setSelectedTab = function (n) { this.selectedTab && this.selectedTab.removeClass("vis-apanel-tab-selected"); this.selectedTab = this.tabLIObj[n]; this.selectedTab.addClass("vis-apanel-tab-selected") }; this.onTabChange = function (n) { a.tabActionPerformed(n) }; this.getLayout = function () { return y }; this.setTabNavigation = function () { s.width() > f.width() ? n.Application.isMobile || h.show() : h.hide() }; this.createToolBar = function () { var n = this.aTabbedPane.getAPanel(); this.aRefresh = n.addActions(n.ACTION_NAME_REFRESH, null, !0, !0, !1, o, null, "Shct_Refresh"); this.aDelete = n.addActions(n.ACTION_NAME_DELETE, null, !0, !0, !1, o, null, "Shct_Delete"); this.aNew = n.addActions(n.ACTION_NAME_NEW, null, !0, !0, !1, o, null, "Shct_New"); this.aIgnore = n.addActions("Ignore", null, !0, !0, !1, o, null, "Shct_Ignore"); this.aSave = n.addActions("Save", null, !0, !0, !1, o, null, "Shct_Save"); this.aMulti = n.addActions("Multi", null, !1, !0, !0, o, !0, "Shct_MultiRow"); e.append(this.aIgnore.getListItm()); e.append(this.aNew.getListItm()); e.append(this.aDelete.getListItm()); e.append(this.aSave.getListItm()); e.append(this.aRefresh.getListItm()); e.append(this.aMulti.getListItm()) }; this.createToolBar(); this.finishLayout = function () { n.Application.isMobile || f.addClass("vis-ad-w-p-t-c-mob") }; this.setDynamicActions = function (n, t) { if (c.css("display", "none"), n != null) if (t) n.detachDynamicAction(); else { var i = 0, r = []; if (n.leftPaneLinkItems.length > 0) for (r = this.curGC.leftPaneLinkItems, i = 0; i < r.length; i++)l.append(r[i].getControl()); if (i = 0, n.rightPaneLinkItems.length > 0) for (r = this.curGC.rightPaneLinkItems, i = 0; i < r.length; i++)l.append(r[i].getControl()); (n.leftPaneLinkItems.length > 0 || n.rightPaneLinkItems.length > 0) && (c.css("display", "flex"), c.find("span").show()); r = null } }; this.disposeComponents = function () { a = null; u.remove(); $ulToobar = $ulNav = u = s = f = h = v = null; l = c = null } } i.prototype.resetListners = function () { for (var n = 0; n < this.tabItems.length; n++)this.tabItems[n].removeSubTabDataStatusListner(); this.tabLIObj = []; this.tabItems = []; this.tabIds = []; this.tabs = []; this.setDynamicActions(this.curGC, !0); this.curST && this.curST.setVisible(!1); this.curGC && this.curGC.setVisible(!1); this.curST = this.curGC = null; this.curTabIndex = -1 }; i.prototype.getTabElement = function (n) { return this.newTabIndex = this.tabIds.indexOf(n), this.tabItems[this.newTabIndex] }; i.prototype.getIsZoomToHeader = function (n) { return this.curTabIndex == this.tabIds.indexOf(n) ? !0 : !1 }; i.prototype.onParentTabChange = function (n) { n = n.replace("st_", ""); this.aTabbedPane.getAPanel().onTabChange(n) }; i.prototype.tabActionPerformed = function (t) { var h = !1, c = !1, r = this.getTabElement(t), u = this.curST || this.curGC, e = null, i = this, o, s, f; if (h = this.newTabIndex < this.curTabIndex, o = null, s = null, r instanceof n.VSortTab ? (s = r, c = !0) : o = r, f = !0, this.curGC != null) { if (this.curTab.needSave(!0, !1)) if (this.curTab.needSave(!0, !0)) if (n.Env.getCtx().isAutoCommit(this.curWindowNo)) { if (!this.curTab.dataSave(!0)) return this.setBusy(!1, !0), !1 } else f = !1, n.ADialog.confirm("SaveChanges?", !0, this.curTab.getCommitWarning(), "Confirm", function (n) { if (n) { if (!i.curTab.dataSave(!0)) return i.setBusy(!1, !0), !1 } else i.curTab.dataIgnore(); u = i.curGC; e = i.curGC; i.curGC = null; i.tabActionPerformedCallback(t, h, c, r, u, e, o, s) }); else i.curTab.dataIgnore(); f && (u = this.curGC, e = this.curGC, this.curGC = null) } return f && this.curST != null && (this.curST.saveData(), u = this.curST, this.curST = null), f && i.tabActionPerformedCallback(t, h, c, r, u, e, o, s), !0 }; i.prototype.sizeChanged = function () { this.setTabNavigation(); return }; i.prototype.refresh = function () { this.curGC && this.curGC.vTable.resize(); return }; i.prototype.tabActionPerformedCallback = function (t, i, r, u, f, e, o, s) { if (this.setDynamicActions(e, !0), this.getIsZoomToHeader(t)) { console.log("zoom to parent tab"); this.onParentTabChange(t); return !1 } if (this.curTabIndex = this.newTabIndex, r) this.curST = s, s.loadData(); else { if (this.curGC = o, o.activate(e), this.setDynamicActions(this.curGC), this.curTab = o.getMTab(), !o.isZoomAction && this.curTab.getTabLevel() > 0) { var h = new n.Query; this.curTab.query = h } i && this.curTab.getIsCurrent() ? o.dataRefresh() : this.reQuery() } r ? (this.aMulti.setPressed(!1), this.aMulti.setEnabled(!1), this.aNew.setEnabled(!1), this.aDelete.setEnabled(!1), this.aRefresh.setEnabled(!1)) : (this.aMulti.setEnabled(!0), this.aMulti.setPressed(this.curGC.getIsSingleRow() || this.curGC.getIsMapRow()), this.aRefresh.setEnabled(!0)); f && (f.setVisible(!1), f.getRoot().detach()); this.getLayout().append(u.getRoot()); u.setVisible(!0); this.setSelectedTab(t); this.setTabNavigation(); f = u = null }; i.prototype.reQuery = function () { if (this.curTabIndex < 0 && this.tabs.length > 0) { this.onTabChange(this.tabs[0].getAction()); return } this.curGC && (this.curTab.getTableModel().setCurrentPage(1), (!this.curGC.onDemandTree || this.curGC.isZoomAction) && (this.curTab.searchText = "", this.curGC.query(this.curTab.getOnlyCurrentDays(), 0, !1))) }; i.prototype.dataStatusChanged = function (t) { if (t) { t.getIsError() && !t.getIsConfirmed() ? (n.ADialog.error(t.getAD_Message(), !0, t.getInfo()), t.setConfirmed(!0), this.errorDisplayed = !0) : t.getIsWarning() && !t.getIsConfirmed() && (n.ADialog.warn(t.getAD_Message(), !0, t.getInfo()), t.setConfirmed(!0)); var r = t.getIsChanged() || t.getIsInserting(), i = this.curTab.getIsReadOnly(), u = !i; u && (u = this.curTab.getIsInsertRecord()); this.aNew.setEnabled(!r && u); this.aRefresh.setEnabled(!r); this.aDelete.setEnabled(!r && !i && t.getCurrentRow() > -1); i && this.curTab.getIsAlwaysUpdateField() && (i = !1); this.aIgnore.setEnabled(r && !i); this.aSave.setEnabled(r && !i); t.getTotalRows() == 0 && u && (this.aNew.setEnabled(!0), this.aDelete.setEnabled(!1)); this.aMulti.setPressed(this.curGC.getIsSingleRow() || this.curGC.getIsMapRow()); this.curTab.getRecord_ID() < 1 && this.aDelete.setEnabled(!1); this.evaluate(null) } else this.curGC && this.curTab.needSave(!0, !1) && this.curTab.needSave(!0, !0) && this.curGC.dataIgnore(), this.reQuery() }; i.prototype.actionPerformed = function (t) { if (!this.getIsUILocked()) { var i = this; setTimeout(function () { if (t.source instanceof n.Controls.VButton) { i.actionButton(t.source) || i.setBusy(!1, !0); return } i.actionPerformedCallback(i, t) }); this.setBusy(!0) } }; i.prototype.actionPerformedCallback = function (n, t) { if (n.aMulti.getAction() === t) n.aMulti.setPressed(!n.curGC.getIsSingleRow()), n.curGC.switchRowPresentation(); else if (n.aRefresh.getAction() === t) n.cmd_save(!1), n.curGC.dataRefreshAll(); else if (n.aIgnore.getAction() === t) n.curGC.dataIgnore(); else if (n.aSave.getAction() === t) n.cmd_save(!0); else if (n.aNew.getAction() === t) { if (!n.curTab.getIsInsertRecord()) return; n.curGC.dataNew(!1) } else n.aDelete.getAction() === t && n.cmd_delete(); n.setBusy(!1); n = null }; i.prototype.cmd_save = function (t, i) { var f, u, r; if (this.curST != null && (t = !1), this.errorDisplayed = !1, this.curST != null) { this.curST.saveData(); this.aSave.setEnabled(!1); return } return f = !0, this.curTab.getCommitWarning().length > 0 && this.curTab.needSave(!0, !1) && (f = !1, u = this, n.ADialog.confirm("SaveChanges?", !0, this.curTab.getCommitWarning(), "Confirm", function (n) { if (n) { var i = u.curGC.dataSave(t); t && !i && !u.errorDisplayed; t && u.curGC.dynamicDisplay(-1) } }), i && i(r)), f ? (r = this.curGC.dataSave(t), t && !r && !this.errorDisplayed, t && this.curGC.dynamicDisplay(-1), i && i(r), r) : void 0 }; i.prototype.cmd_delete = function () { var t, i; if (!this.curTab.getIsReadOnly()) { if (t = this.curGC.canDeleteRecords(), t.length > 0) { n.ADialog.error("CannotDelete", !0, " [ " + t.join(",") + "]"); return } i = this; n.ADialog.confirm("DeleteRecord?", !0, "", "Confirm", function (n) { n && i.curGC.dataDeleteAsync(); i = null }) } }; i.prototype.actionButton = function (n) { this.aTabbedPane.getAPanel().actionButton(n, this) }; i.prototype.evaluate = function () { for (var i, r, u, t = 0; t < this.tabItems.length; t++)i = this.tabItems[t], i instanceof n.GridController && (r = i, u = this.headerTab.TabLevel + 1 >= this.headerTab.ChildTabs[t].getTabLevel() && r.getIsDisplayed(), this.tabs[t].setEnabled(u)) }; i.prototype.setBusy = function (n) { this.aTabbedPane.getAPanel().setBusy(n) }; i.prototype.getIsUILocked = function () { this.aTabbedPane.getAPanel().getIsUILocked() }; i.prototype.dispose = function () { this.disposeComponents(); this.aNew.dispose(); this.aSave.dispose(); this.aDelete.dispose(); this.aRefresh.dispose(); this.aPanel = null }; n.ContentPane = i }(VIS, jQuery), function (n, t) { function r(t) { return ' <div class="vis-fp-bodycontent vis-formouterwrpdiv">                                                      <div class="vis-fp-viwall" >                                                           <span>' + n.Msg.getMsg("ViewMore") + '<\/span>                                    <\/div>                                                                         <div class="vis-fp-datawrap">      <div class="vis-fp-static-ctrlwrp">                                           <div class="vis-fp-static-ctrlinnerwrp"><\/div>         <\/div>                                                                            <div class="vis-fp-custcolumns" id="accordion_' + t + '"">                         <div class="card">                                                                    <div class="card-header" style="cursor:pointer" data-toggle="collapse" href="#collapseOne_' + t + '">                                                             <span>' + n.Msg.getMsg("CustomCondition") + '<\/span>                                                   <a class="card-link" >                      <i class="vis vis-arrow-up"><\/i>                                              <\/a>                                                                          <\/div>                                                                            <div id="collapseOne_' + t + '"" class="collapse" data-parent="#accordion_' + t + '" >                 <div class="card-body">                                                               <div class="input-group vis-input-wrap">                                              <div class="vis-control-wrap">                                                        <select class="vis-fp-cols">                                                      <\/select>                                                                         <label class="vis-fp-lblcols">' + n.Msg.getMsg("Column") + '<\/label>                                  <\/div>                                                                        <\/div>                                                                            <div class="input-group vis-input-wrap">                                              <div class="vis-control-wrap">                                                        <select class="vis-fp-op">                                                        <\/select>                                                                         <label class="vis-fp-lblop">' + n.Msg.getMsg("Operator") + '<\/label>                                  <\/div>                                                                        <\/div>                                                                            <div class="vis-fp-valueone">                                                     <\/div>                                                                            <div class="vis-fp-valuetwo">                                                     <\/div>                                                                            <div class="vis-fp-valuethree">                                                   <\/div>                                                                            <div class="vis-fp-cc-addbtnwrp">                                                     <span class="vis-fp-cc-addbutton">' + n.Msg.getMsg("Add") + '<\/span>                                  <\/div>                                                                        <\/div>                                                                        <\/div>                                                                        <\/div>                                                                            <div class="vis-fp-custcoltagswrp">                                                   <div class="vis-fp-custcoltag">                                                   <\/div>                                                                        <\/div><!-- vis-fp-custcoltagswrp -->                                          <\/div>  <\/div>                                                                      <\/div>' } function i(i, u) { function ft(i) { var f = "", s = e.find(".vis-fp-inputgroupseprtr"), h, u, a, v, p, w, r, y; if (s && s.length > 0) for (h = 0; h < s.length; h++) { var b = t(s[h]), c = b.find(".vis-fp-inputvalueforupdate"), l = b.data("columnname"); if (c && c.length > 0) { for (u = "", a = 0; a < c.length; a++)(v = t(c[a]), v[0].type != "checkbox" || v.is(":checked")) && (p = i.parseWhereCondition(l, n.Query.prototype.EQUAL, v.data("id"), null), u += u != "" ? " OR " + p : "(" + p); for (u != "" && (u += ")", f += f != "" ? " AND " + u : u), w = !1, r = 0; r < i.listOfFilterQueries.length; r++)i.listOfFilterQueries[r].columnName == l && (w = !0, u != "" ? i.listOfFilterQueries[r].whereClause = u : i.listOfFilterQueries.splice(r, 1)); w || u == "" || i.listOfFilterQueries.push({ columnName: l, whereClause: u }) } else for (r = 0; r < i.listOfFilterQueries.length; r++)i.listOfFilterQueries[r].columnName == l && i.listOfFilterQueries.splice(r, 1) } return y = o.getDynamicFilter(), y != "" && (f != "" ? f += " AND " + y : f = y), f } function et(n) { var r = p.children()[1], i = null; p.children().length > 2 && (i = p.children()[2]); i ? t(i).prop("disabled", !n).prop("readonly", !n) : r != null && t(r).prop("disabled", !n).prop("readonly", !n) } function ot(n) { var r = b.children()[1], i = null; b.children().length > 2 && (i = b.children()[2]); i ? t(i).prop("disabled", !n).prop("readonly", !n) : r != null && t(r).prop("disabled", !n).prop("readonly", !n) } function g(n) { var t = null; t = n ? w : a; t != null && t.setValue(null) } function st(i, r) { var f, e, u, c; if (i && (a = null), w = null, f = null, e = null, f = i ? p.children()[0] : b.children()[0], f != null && (t(f).remove(), e != null && t(e).remove(), f = null), u = null, u = r != null ? r.getIsKey() ? new n.Controls.VNumTextBox(r.getColumnName(), !1, !1, !0, r.getDisplayLength(), r.getFieldLength(), r.getColumnName()) : n.VControlFactory.getControl(null, r, !0, !0, !1) : new n.Controls.VTextBox("columnName", !1, !0, !1, 20, 20, "format", "GetObscureType", !1), u != null) { u.setMandatory(!1); u.setReadOnly(!1); r.getDisplayType() == n.DisplayType.AmtDimension && (u.hideButton(!1), u.setReadOnlyTextbox(!1)); n.DisplayType.Text == r.getDisplayType() || n.DisplayType.TextLong == r.getDisplayType() ? (u.getControl().attr("rows", "1"), u.getControl().css("width", "100%")) : n.DisplayType.YesNo == r.getDisplayType() ? u.getControl().css("clear", "both") : n.DisplayType.IsDate(r.getDisplayType()) && u.getControl().css("line-height", "1"); var o = null, s = t('<div class="input-group vis-input-wrap">'), h = t('<div class="vis-control-wrap">'); u.getBtnCount() > 0 && !(u instanceof n.Controls.VComboBox) && (o = u.getBtn(0)); i && (p.append(s), s.append(h), h.append(u.getControl()), a = u, o && (c = t('<div class="input-group-append">'), s.append(c), c.append(o)), r.getDisplayType() == n.DisplayType.YesNo || h.append("<label>" + n.Msg.getMsg("QueryValue") + "<\/label>")); r.getDisplayType() == n.DisplayType.AmtDimension } } function nt(t) { var i = null; return (i = t ? a : w, i != null) ? i.getDisplayType() == n.DisplayType.YesNo ? i.getValue().toString().toLowerCase() == "true" ? "Y" : "N" : i.displayType == n.DisplayType.AmtDimension ? i.getText() : i.getValue() : "" } function tt(t) { var i = null; return (i = t ? a : w, i != null) ? i.displayType == n.DisplayType.AmtDimension ? i.getText() : i.getDisplay() : "" } function ht() { var i = l.val(), t, r, n, u; if (!i || i == "-1" || (t = l.find("option:selected").text(), r = "", t == null || t.trim().length == 0)) return !1; r = i.toString(); n = h.val(); (n == null || n == undefined) && (n = h.find("option:selected").text()); u = h.val(); ct(t, r, n, u, tt(!0), nt(!0), tt(!1), nt(!1), !0) } function ct(n, t, i, r, u, e, s, h) { f == null && (f = {}); t in f || (f[t] = []); f[t].push({ Name: n, Value: e, Text: u, Optr: i, Where: o.parseWhereCondition(t, i, e, h) }); it(t) } function lt(n) { f == null && (f = {}); n in f && delete f[n]; it(n) } function it(n) { var u = k.find('[data-id="' + n + '"]'), t, r, i; if (u.length > 0 && u.remove(), n in f) { for (t = [], r = f[n], t.push('<div class="vis-fp-currntrcrds" data-id="' + n + '"><span  class="vis-fp-inputvalueforupdate">'), i = 0; i < r.length; i++)i != 0 ? t.push(" | ") : (t.push(r[i].Name), t.push(r[i].Optr)), t.push(r[i].Text); t.push('<\/span> <i class="vis vis-mark"><\/i><\/div>'); k.append(t.join(" ")) } o.fireValChanged(); g() } var rt = r(i), a, w, f = null, e = t(rt), at = e.find(".vis-fp-datawrap"), s = e.find(".vis-fp-static-ctrlwrp"), d = e.find(".vis-fp-static-ctrlinnerwrp"), v = e.find(".vis-fp-viwall"), y = t(v.find("span")[0]), c = e.find(".vis-fp-custcolumns"), l = c.find(".vis-fp-cols"), h = c.find(".vis-fp-op"), ut = c.find(".vis-fp-cc-addbtnwrp"), p = c.find(".vis-fp-valueone"), b = c.find(".vis-fp-valuetwo"), k = c.find(".vis-fp-custcoltag"), o; y.text(n.Msg.getMsg("ViewMore")); this.curGC = u; this.winNo = i; this.selectionfields = null; this.curTabfields = null; this.curTab = null; this.listOfFilterQueries = []; this.ctrlObjects = {}; this.getRoot = function () { return e }; this.setLayout = function () { var e, r, o, f, i, u, c, l; if (this.selectionfields && this.selectionfields.length > 0) for (e = 0; e < this.selectionfields.length; e++)if (f = this.selectionfields[e], f.getIsDisplayed()) { i = {}; n.DisplayType.IsLookup(f.getDisplayType()) || n.DisplayType.ID == f.getDisplayType() ? (i = jQuery.extend(!0, {}, f), i.lookup = jQuery.extend(!0, {}, f.lookup), i.lookup.initialize()) : i = f; this.selectionfields[e] = i; r = i.getIsKey() ? new n.Controls.VNumTextBox(i.getColumnName(), !1, !1, !0, i.getDisplayLength(), i.getFieldLength(), i.getColumnName()) : n.VControlFactory.getControl(null, i, !0, !0, !1); r.setReadOnly(!1); r.setMandatory(!1); this.ctrlObjects[i.getColumnName()] = r; var a = t('<div class="vis-fp-inputgroupseprtr" data-ColumnName="' + r.getName() + '" data-cid="' + r.getName() + "_" + this.curTab.getAD_Tab_ID() + '"><\/div>'), s = t('<div class="vis-control-wrap">'), h = t('<div class="input-group vis-input-wrap">'); i.getDisplayType() == n.DisplayType.YesNo ? (u = [], u.push('<div class="vis-fp-lst-searchrcrds">'), u.push('<div class="vis-fp-inputspan">'), u.push('<div class="vis-fp-istagwrap"><input class="vis-fp-chboxInput vis-fp-inputvalueforupdate" type="checkbox" data-column="' + r.getName() + '" data-keyval="' + r.getName() + '_Y" data-id="Y"'), u.push('><span data-id="Y">' + n.Msg.getMsg("Yes") + "<\/span> <\/div>"), u.push("<\/div>"), u.push('<div class="vis-fp-inputspan">'), u.push('<div class="vis-fp-istagwrap"><input class="vis-fp-chboxInput vis-fp-inputvalueforupdate" type="checkbox" data-column="' + r.getName() + '" data-keyval="' + r.getName() + '_N" data-id="N"'), u.push('><span data-id="N">' + n.Msg.getMsg("No") + "<\/span> <\/div>"), u.push("<\/div>"), u.push("<\/div>"), s.append("<label>" + i.getHeader() + "<\/label>"), h.append(s), h.append(u.join(""))) : (o = n.VControlFactory.getLabel(i), r.addVetoableChangeListener(this), s.append(r.getControl()), o && (o.getControl().find("sup").hide(), o && s.append(o.getControl())), h.append(s)); r && r.getBtnCount() > 1 && (c = r.getBtn(0), c && (l = t('<div class="input-group-append">'), l.append(c), h.append(l))); a.append(h); d.append(a); this.getFilterOption(i) } }; this.fireValChanged = function (n) { this.refreshAll(n) }; this.vetoablechange = function (n) { var o = e.find('[data-cid="' + n.propertyName + "_" + this.curTab.getAD_Tab_ID() + '"]'), i = t.grep(this.selectionfields, function (t) { if (t.getColumnName() == n.propertyName) return t }), r, u, f; r = i[0].lookup && i[0].lookup.getDisplay ? i[0].lookup.getDisplay(n.newValue) : n.newValue; this.ctrlObjects[n.propertyName] && this.ctrlObjects[n.propertyName].setValue(n.newValue); u = t('<span data-id="' + n.newValue + '" class="vis-fp-inputvalueforupdate" >' + r + "<\/span>"); f = t('<i data-id="' + n.newValue + '" data-keyval="' + n.propertyName + "_" + n.newValue + '" class="vis vis-mark"><\/i><\/div><\/div>'); o.append(t('<div class="vis-fp-currntrcrdswrap">').append(t('<div class="vis-fp-currntrcrds">').append(u).append(f))); this.ctrlObjects[n.propertyName] && this.ctrlObjects[n.propertyName].setValue(null); this.fireValChanged(n.propertyName) }; this.setFilterOptions = function (n, i) { var u, a = [], f = [], v = s.find('[data-cid="' + i + "_" + this.curTab.getAD_Tab_ID() + '"]'), c, y, e, r, o, l, h; if (v && v.length > 0 && (u = v.find(".vis-fp-lst-searchrcrds"), c = u.find("input"), c && c.length > 0)) for (y = 0; y < c.length; y++)e = t(c[y]), e.is(":checked") && (a.push(e.data("id")), e.parent().parent().find(".vis-fp-spanCount").text("(0)"), f.push(e.parent().parent())), e.parent().parent().remove(); for (u && u.length != 0 || (u = t('<div class="vis-fp-lst-searchrcrds vis-fp-lst-searchrcrdswrp"><\/div>'), v.append(u)), r = 0; r < n.length; r++) { if (o = [], l = n[r].ID, isNaN(l) || (l = parseFloat(l)), h = a.indexOf(l), h > -1) { f[h].find(".vis-fp-spanCount").text("(" + n[r].Count + ")"); u.append(f[h]); f.splice(h, 1); a.splice(h, 1); continue } r < 5 && (o.push('<div class="vis-fp-inputspan">'), o.push('<div class="vis-fp-istagwrap"><input class="vis-fp-chboxInput vis-fp-inputvalueforupdate" type="checkbox" data-column="' + i + '" data-keyval="' + i + "_" + n[r].ID + '" data-id="' + n[r].ID + '"'), o.push('><span data-id="' + n[r].ID + '">' + n[r].Name + '<\/span> <\/div><span class="vis-fp-spanCount">(' + n[r].Count + ")<\/span>"), o.push("<\/div>"), u.append(o.join(""))) } for (r = 0; r < f.length; r++)u.append(f[r]); f = []; a = [] }; this.hardRefreshFilterPanel = function () { s.find(".vis-fp-lst-searchrcrdswrp").remove(); s.find(".vis-fp-currntrcrdswrap").remove(); k.find(".vis-fp-currntrcrds").remove(); f = []; l.val(-1); h.val(-1); g(!1) }; this.getFilterClause = function () { return ft(this) }; this.fillColumns = function (n) { l.append(n) }; o = this; s.on("click", "i", function () { var n = t(this); n.hasClass("vis-mark") && (n.parent().parent().remove(), o.fireValChanged(n.data("keyval"))) }); k.on("click", "i", function () { var n = t(this), i; n.hasClass("vis-mark") && (i = n.parent().data("id"), lt(i)) }); e.on("click", function (n) { if ($target = t(n.target), $target.is("input") && $target.hasClass("vis-fp-chboxInput")) { var i = $target.data("column"); o.fireValChanged(i) } }); ut.on("click", function () { ht() }); v.on("click", "span", function () { s.toggleClass("vis-fp-static-ctrlwrp-auto"); y.text() == n.Msg.getMsg("ViewMore") ? y.text(n.Msg.getMsg("ViewLess")) : y.text(n.Msg.getMsg("ViewMore")) }); l.on("change", function () { var t = l.val(), r, i; t && t != "-1" && (r = null, r = t.endsWith("_ID") || t.endsWith("_Acct") || t.endsWith("_ID_1") || t.endsWith("_ID_2") || t.endsWith("_ID_3") ? o.getOperatorsQuery(n.Query.prototype.OPERATORS_ID) : t.startsWith("Is") ? o.getOperatorsQuery(n.Query.prototype.OPERATORS_YN) : o.getOperatorsQuery(n.Query.prototype.CVOPERATORS), i = o.getTargetMField(t), i != null && n.DisplayType.IsDate(i.getDisplayType()), i.getDisplayType() != n.DisplayType.DateTime, h.html(r), h[0].SelectedIndex = 0, st(!0, i), h.prop("disabled", !1)); et(!0); ot(!1) }); e.on("mouseover", function () { d.height() > s.parent().height() - 60 && d.height() + 15 >= s.height() ? v.css("visibility", "visible") : v.css("visibility", "hidden") }); e.on("mouseout", function () { y.text() == n.Msg.getMsg("ViewMore") && v.css("visibility", "hidden") }); this.disposeComponent = function () { e.remove(); this.listOfFilterQueries = []; o = null }; this.getDynamicFilter = function () { var i = "", u, r, n, t; for (u in f) { for (r = f[u], n = [], t = 0; t < r.length; t++)t == 0 ? (n.push(" ( "), n.push(r[t].Where)) : n.push(" OR " + r[t].Where); n.length > 0 && n.push(" ) "); i != "" && (i += " AND "); i += n.join(" ") } return i } } i.prototype.init = function () { var s, h, r, e, u, t, o, i, f; if (!this.initialzed) { for (this.curTab = this.curGC.getMTab(), s = this.curTab.getFields(), this.selectionfields = [], this.curTabfields = [], h = '<option value="-1"> <\/option>', r = [], e = 0; e < s.length; e++)(u = s[e], t = jQuery.extend(!0, {}, u), (n.DisplayType.IsLookup(u.getDisplayType()) || n.DisplayType.ID == u.getDisplayType()) && (t.lookup = jQuery.extend(!0, {}, u.lookup), t.lookup.initialize && t.lookup.initialize()), this.curTabfields.push(t), t.getIsEncrypted()) || (o = t.getColumnName(), t.getDisplayType() == n.DisplayType.Button && (t.getAD_Reference_Value_ID() == 0 ? t.setDisplayType(n.DisplayType.String) : o.endsWith("_ID") ? t.setDisplayType(n.DisplayType.Table) : (t.setDisplayType(n.DisplayType.List), t.lookup = new n.MLookupFactory.getMLookUp(n.context, this.winNo, t.getAD_Column_ID(), n.DisplayType.List))), i = t.getHeader(), i != null && i.length != 0 || (i = n.Msg.getElement(n.context, o), i != null && i.Length != 0)) && (t.getIsKey() && (i += " (ID)"), t.getIsSelectionColumn() ? this.selectionfields.push(t) : r.push({ value: o, text: i })); for (r.sort(function (n, t) { var i = n.text.toUpperCase(), r = t.text.toUpperCase(); return i > r ? 1 : i < r ? -1 : 0 }), f = 0; f < r.length; f++)h += '<option value="' + r[f].value + '">' + r[f].text + "<\/option>"; this.fillColumns(h); this.selectionfields.sort(function (n, t) { return n.getSelectionSeqNo() - t.getSelectionSeqNo() }); this.getFixedColumns(); this.setLayout(); this.initialzed = !0 } }; i.prototype.getFixedColumns = function () { this.selectionfields && this.selectionfields.length != 0 || (this.selectionfields = t.grep(this.curTabfields, function (n) { if (n.getColumnName() == "Name" || n.getColumnName() == "Value" || n.getColumnName() == "DocumentNo") return n })) }; i.prototype.getFilterOption = function (t, i) { var f, e, o, a, v, s; if (i || (i = ""), t && t.getShowFilterOption()) { var h = "", r = "", c = "", l = ""; t.getLookup() && (h = t.getLookup().info.keyColumn, r = t.getLookup().info.displayColSubQ, c = n.Env.parseContext(n.Env.getCtx(), this.winNo, this.curTab.getTabNo(), t.getLookup().info.validationCode, !1), l = t.getLookup().info.tableName); f = this.curTab.getWhereClause(); f = n.Env.parseContext(n.Env.getCtx(), this.winNo, this.curTab.getTabNo(), f, !1); e = this.curTab.getLinkWhereClause(); e && e.length > 0 && (i += i != "" ? " AND " + e : " " + e); f && f.length > 0 && (i += i != "" ? " AND " + f : " " + f); o = this.getDynamicFilter(); o && o.length > 0 && (i += i != "" ? " AND " + o : " " + o); r.indexOf("||'^^'|| NVL((SELECT NVL(ImageURL,'')") > 0 && r.indexOf("thing.png^^') ||' '||") > 0 && (a = r.substr(0, r.indexOf("||'^^'|| NVL((SELECT NVL(Imag")), r = r.substr(r.indexOf("othing.png^^') ||' '||") + 22), r = a + "||'_'||" + r); r.indexOf("||'^^'|| NVL((SELECT NVL(ImageURL,'')") > 0 ? r = r.replace(r.substr(r.indexOf("||'^^'|| NVL((SELECT NVL(Imag"), r.indexOf("Images/nothing.png^^')") + 21), "") : r.indexOf("nothing.png") > -1 && (r = r.replace(r.substr(r.indexOf("NVL((SELECT NVL(ImageURL,'')"), r.indexOf("thing.png^^') ||' '||") + 21), "")); v = { keyCol: h, displayCol: r, validationCode: c, tableName: l, AD_Referencevalue_ID: t.getAD_Reference_Value_ID(), pTableName: this.curTab.getTableName(), pColumnName: t.getColumnName(), whereClause: i }; s = this; u.getFilters(v).then(function (n) { var t = n.keyCol; n = n.list; s.setFilterOptions(n, t); s = null }) } }; i.prototype.refreshFilterOptions = function (n, t) { var i, u, r, f, e; if (t && this.hardRefreshFilterPanel(), this.selectionfields) for (i = 0; i < this.selectionfields.length; i++)if (this.selectionfields[i].getShowFilterOption() && (u = this.selectionfields[i], u.getColumnName() != n)) { for (r = "", f = 0; f < this.listOfFilterQueries.length; f++)e = this.listOfFilterQueries[f], e.columnName != u.getColumnName() && (r.length > 1 && (r += " AND "), r += e.whereClause); this.getFilterOption(u, r) } }; i.prototype.refreshAll = function (t) { var i = new n.Query(this.curTab.getTableName(), !0); this.curGC.applyFilters(i); this.refreshFilterOptions(t) }; i.prototype.getTargetMField = function (n) { var t, i; if (n == null || n.length == 0) return null; for (t = 0; t < this.curTabfields.length; t++)if (i = this.curTabfields[t], n.equals(i.getColumnName())) return i; return null }; i.prototype.parseValue = function (t, i) { var u, r, e, f, o; if (i == null || (u = t.getDisplayType(), r = i.toString(), r == null || r.equals(n.Env.NULLString) || r == "" || r.toUpper() == "NULL")) return null; try { if (u == n.DisplayType.Integer || n.DisplayType.IsID(u) && t.getColumnName().endsWith("_ID")) return parseInt(r); if (n.DisplayType.IsNumeric(u)) return parseFloat(r); if (n.DisplayType.IsDate(u)) { e = ""; try { return new Date(r) } catch (h) { e = "" } try { return Date.Parse(e) } catch (c) { return null } } } catch (s) { return f = s.message, (f == null || f.length == 0) && (f = s.toString()), o = "", o += t.getColumnName() + " = " + r + " - " + f, n.ADialog.error("ValidationError", !0, o.toString()), null } return r }; i.prototype.createDirectSql = function (t, i, r, u, f) { var e = "", o = /(\d{4})-(\d{2})-(\d{2})T(\d{2})\:(\d{2})\:(\d{2})/; return typeof t == "string" && (e += " UPPER( "), e += this.curTab.getTableName() + "." + r, typeof t == "string" && (e += " ) "), t == null || "NULL".equals(t.toString().toUpper()) || "NullValue".toUpper().equals(t.toString().toUpper()) ? e += u.equals(n.Query.prototype.EQUAL) ? " IS NULL " : " IS NOT NULL " : (e += u, (n.Query.prototype.IN.equals(u) || n.Query.prototype.NOT_IN.equals(u)) && (e += "("), t instanceof Date || t && o.test(t.toString()) ? e += n.DB.to_date(t, !1) : "string" == typeof t ? f ? (e += " UPPER( ", e += n.DB.to_string(t.toString()), e += " ) ") : e += t.toString() : e += t, n.Query.prototype.BETWEEN.equals(u) ? (e += " AND ", i instanceof Date || i && o.test(i.toString()) ? e += n.DB.to_date(i, !1) : typeof i == "string" ? (e += " UPPER( ", e += n.DB.to_string(i.toString()), e += " ) ") : e += i) : (n.Query.prototype.IN.equals(u) || n.Query.prototype.NOT_IN.equals(u)) && (e += ")")), e }; i.prototype.parseWhereCondition = function (t, i, r, u) { var e = this.getTargetMField(t), v = e.getColumnSQL(), o, f, s, c; if (r != null && r.length > 0 && n.DisplayType.IsText(e.getDisplayType()) && i == n.Query.prototype.EQUAL && (i = n.Query.prototype.LIKE, r = "%" + r + "%"), o = "", f = null, r != null && (r.toString().trim().startsWith("adddays") || r.toString().trim().startsWith("@")) || (f = this.parseValue(e, r)), r == null || r.toString().length < 1) { if (n.Query.prototype.BETWEEN.equals(i)) return o; f = n.Env.NULLString } if (e.getIsVirtualColumn()) if (v = e.vo.ColumnSQL, t = e.vo.ColumnSQL, n.Query.prototype.BETWEEN.equals(i)) { if (u == null || u.toString().trim().length < 1 || (s = this.parseValue(e, u), s == null)) return o; o = this.createDirectSql(f, s, t, i, !0) } else o = this.createDirectSql(f, s, t, i, !0); else { var l = "C_DimAmt", y = "IsActive", p = "Amount", w = "S", h = "E", b = "L", k = "ECT", d = "F", a = "R", g = "OM", nt = "WH"; if (e.getDisplayType() == n.DisplayType.DateTime && n.Query.prototype.EQUAL.equals(i) && f) { var tt = f.getFullYear(), it = f.getMonth(), rt = f.getDate(); s = new Date(tt, it, rt, 24, 00, 00); f = new Date(tt, it, rt, 00, 00, 00); i = n.Query.prototype.BETWEEN } if (n.Query.prototype.BETWEEN.equals(i)) { if (u = s, u == null || u.toString().trim().length < 1) return o; e.getDisplayType() == n.DisplayType.AmtDimension && (c = w + h + b + k + " " + l + "_ID " + d + a + g + " " + l + " " + nt + h + a + h + " " + y + "='Y' AND " + p + " " + i + r + " AND " + u, f = n.MRole.getDefault().addAccessSQL(c.toString(), "C_DimAmt", n.MRole.SQL_NOTQUALIFIED, n.MRole.SQL_RO), i = n.Query.prototype.IN); o = this.createDirectSql(f, s, v, i, !1) } else e.getDisplayType() == n.DisplayType.AmtDimension && (c = w + h + b + k + " " + l + "_ID " + d + a + g + " " + l + " " + nt + h + a + h + " " + y + "='Y' AND " + p + " " + i + r, f = n.MRole.getDefault().addAccessSQL(c.toString(), "C_DimAmt", n.MRole.SQL_NOTQUALIFIED, n.MRole.SQL_RO), i = n.Query.prototype.IN), f == null && r != null && (r.toString().trim().startsWith("adddays") || r.toString().trim().startsWith("@")) ? (o = t + i + r, e.getDisplayType() == n.DisplayType.AmtDimension && (o = t + n.Query.prototype.IN + "(" + f + ")")) : o = this.createDirectSql(f, s, v, i, !0) } return o }; i.prototype.dispose = function () { this.disposeComponent(); this.curGC = this.curTab = this.curTabfields = this.selectionfields = null }; i.prototype.getOperatorsQuery = function (t, i) { var f = "", r = "", u; for (u in t) r = t[u], i && (r = n.Msg.getMsg(r)), f += '<option value="' + u + '">' + r + "<\/option>"; return f }; var u = { getFilters: function (i) { return new Promise(function (r) { var u = null; t.ajax({ url: n.Application.contextUrl + "JsonData/GetRecordForFilter", type: "POST", datatype: "json", contentType: "application/json; charset=utf-8", data: JSON.stringify(i) }).done(function (n) { u = n; u = JSON.parse(u); r(u) }) }) } }; n.FilterPanel = i }(VIS, jQuery), function (n, t) { n.ThemeCnfgtor = function () { function g() { k("0, 152, 247", "255, 255, 255", "238, 238, 238", "51, 51, 51"); r(!0); i.load(n.Application.contextUrl + "Theme/ThemeCnfgtr/?windowNo=" + b, function () { nt(); h() }) } function k(n, t, i, r) { document.documentElement.style.setProperty("--v-c-th-primary", n); document.documentElement.style.setProperty("--v-c-th-on-primary", t); document.documentElement.style.setProperty("--v-c-th-secondary", i); document.documentElement.style.setProperty("--v-c-th-on-secondary", r) } function nt() { d = i.find("#divTheme_" + b); f = i.find(".vis-thed-clrpickerouterwrap"); l = i.find(".vis-thed-botsavesec"); a = f.find('input[name="primary"]'); v = f.find('input[name="onprimary"]'); y = f.find('input[name="secondary"]'); p = f.find('input[name="onsecondary"]'); s = l.find("input"); o = i.find(".vis-thed-savedlistwrap"); f.find("input").on("change", function () { this.name == "primary" ? document.documentElement.style.setProperty("--v-c-th-primary", u(this.value)) : this.name == "onprimary" ? document.documentElement.style.setProperty("--v-c-th-on-primary", u(this.value)) : this.name == "secondary" ? document.documentElement.style.setProperty("--v-c-th-secondary", u(this.value)) : this.name == "onsecondary" && document.documentElement.style.setProperty("--v-c-th-on-secondary", u(this.value)) }); l.find("a").on("click", function () { if (s.val().trim() == "") { n.ADialog.error("EnterName"); return } var i = t(this), f = i.data("action") == "sandd"; r(!0); tt(u(a.val()), u(v.val()), u(y.val()), u(p.val()), f, s.val()) }); o.on("click", "LI", function (i) { r(!0); var u = t(i.currentTarget).data("id"); i.target.className.indexOf("vis-delete") > -1 ? n.ADialog.confirm("DeleteRecord?", !0, "", "Confirm", function (t) { t ? n.dataContext.postJSONData(n.Application.contextUrl + "Theme/Delete", { id: u }, function () { h() }) : r(!1) }) : n.dataContext.postJSONData(n.Application.contextUrl + "Theme/SetDefault", { id: u }, function () { h() }) }) } function r(n) { e[0].style.visibility = n ? "visible" : "hidden" } function tt(t, i, u, f, e, o) { var s = {}; s.Primary = t; s.OnPrimary = i; s.Seconadary = u; s.OnSecondary = f; s.IsDefault = e; s.Name = o; r(!0); n.dataContext.postJSONData(n.Application.contextUrl + "Theme/Save", s, it) } function it(n) { n > 0 ? (h(), s.val("")) : r(!1) } function h() { r(!0); o.empty(); n.dataContext.getJSONData(n.Application.contextUrl + "Theme/GetList", { id: 0 }, function (n) { for (var i = [], t, u = 0; u < n.length; u++)t = n[u], i.push('<li class="vis-thed-savedlistitem'), t.IsDefault && i.push(" vis-thed-selectedlistitem"), i.push('" data-id="' + t.Id + '">'), i.push('<div class="vis-theme-rec" style="width:80px">'), i.push('<span class="vis-theme-color" style="background-color:rgba(' + t.Primary + ',1)"><\/span>'), i.push('<span class="vis-theme-color" style="background-color:rgba(' + t.OnPrimary + ',1)"><\/span>'), i.push('<span class="vis-theme-color" style="background-color:rgba(' + t.Seconadary + ',1)"><\/span>'), i.push('<span class="vis-theme-color" style="background-color:rgba(' + t.OnSecondary + ',1)"><\/span>'), i.push("<\/div>"), i.push('<a class="vis-thed-themename">' + t.Name + "<\/a>"), t.IsDefault && i.push('<i class="vis vis-markx"><\/i>'), i.push('<span style="margin:0 3px 0 3px" class="vis vis-delete"><\/span>'), i.push("<\/li>"), t.IsDefault && (a.val(c(t.Primary)), v.val(c(t.OnPrimary)), y.val(c(t.Seconadary)), p.val(c(t.OnSecondary)), k(t.Primary, t.OnPrimary, t.Seconadary, t.OnSecondary)); o.append(i.join(" ")); r(!1) }) } function rt(n, t, i) { var r = i | t << 8 | n << 16; return "#" + (16777216 + r).toString(16).slice(1) } function c(n) { var n = n.split(","); return rt(n[0], n[1], n[2]) } function u(n) { var t = ut(n); return t ? t.r + "," + t.g + "," + t.b : t } function ut(n) { var t; return n = n.replace(/^#?([a-f\d])([a-f\d])([a-f\d])$/i, function (n, t, i, r) { return t + t + i + i + r + r }), t = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(n), t ? { r: parseInt(t[1], 16), g: parseInt(t[2], 16), b: parseInt(t[3], 16) } : null } function ft() { var u = t(window).width() - 150, f = t(window).height() - 10, r; e.height(f); e.width(u); i.append(e); r = new n.ChildDialog; r.setContent(i); r.setWidth(u); r.setHeight(f); r.setTitle(n.Msg.getMsg("ThemeConfig")); r.setModal(!0); r.onClose = function () { w.dispose(); t("#ui-datepicker-div").remove(); i = null; w = null }; r.show(); r.hideButtons() } var i = t("<div class='vis-forms-container'>"), e = t("<div class='vis-apanel-busy'>"), b = n.Env.getWindowNo(), d = null, f = null, l = null, o = null, a = null, v = null, y = null, p = null, s = null, w = this; this.show = function () { g(); ft() }; this.dispose = function () { i.remove(); i = null; w = null } } }(VIS, jQuery)