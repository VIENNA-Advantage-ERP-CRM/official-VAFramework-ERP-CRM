(function (n, t) { function w(n, i, r) { var u = null; return t.ajax({ url: tt, type: "POST", datatype: "json", contentType: "application/json; charset=utf-8", async: i, data: JSON.stringify(n) }).done(function (n) { u = n; r && r(n) }), u } function ft(i, r, u) { var f = null; return i.sql = n.secureEngine.encrypt(i.sql), t.ajax({ url: rt, type: "POST", datatype: "json", contentType: "application/json; charset=utf-8", async: r, data: JSON.stringify(i) }).done(function (n) { f = n; u && u(n) }), f } function u() { function h() { var s, h, c; r = t("<table class='vis-awindow'>"); s = t("<td style='max-height:42px;'>"); u = t("<td class='vis-height-full'>"); e = t("<h1>"); i = t('<a href="javascript:void(0)" title="' + n.Msg.getMsg("Close") + " " + n.Msg.getMsg("Shct_Close") + '" class="vis-mainMenuIcons vis-icon-menuclose"><\/a>'); o = t("<div class='vis-awindow-toolbar' >"); f = t("<div class='vis-awindow-header vis-menuTitle' >").append(i).append(e).append(o); s.append(f); h = t("<tr>").append(s); c = t("<tr>").append(u); r.append(h).append(c) } var f, r, u, e, i, o, s; this.name; this.windowNo; this.id; this.cPanel; this.isHeaderVisible = !0; this.onClosed; this.title = "window"; f = null; o = null; this.onLoad = null; h(); this.setTitle = function (n) { this.title = n; e.text(this.title) }; this.setSize = function (n) { r.height(n) }; this.hideHeader = function (n) { this.isHeaderVisible = !n; n ? f.hide() : f.show(); this.sizeChanged() }; this.hideCloseIcon = function (n) { n ? i.hide() : i.show() }; this.getRootLayout = function () { return r }; this.getContentGrid = function () { return u }; this.setToolbar = function (n) { o.append(n) }; s = this; i.on(n.Events.onTouchStartOrClick, function (n) { n.preventDefault(); n.stopPropagation(); s.dispose() }); this.disposeComponent = function () { s = null; i && i.off(n.Events.onTouchStartOrClick); i = null; r && r.remove(); u && u.remove(); r = u = e = i = null; this.setTitle = null; this.name = null; this.windowNo = null; this.id = null; this.setTitle = null; this.setName = null; this.getRootLayout = null; this.getContentGrid = null; this.onLoad = null } } function i() { function rr() { k = t("<div style='position:relative;'>"); g = t("<div class='vis-apanel-busy'>"); a = t("<ul class='vis-appsaction-ul'>"); dt = t("<div class='vis-apanel-search'>"); ui = t("<div class='vis-apanel-toolbar'>").append(a); rt = t("<ul class='vis-appsaction-ul vis-apanel-nav-ul'>"); ri = t("<div class='vis-apanel-nav'>").append(rt); p = t("<ul class='vis-appsaction-ul vis-apanel-tabcontrol-ul'>"); w = t("<div class='vis-apanel-tabcontrol'>").append(p); d = t("<div class='vis-apanel-tab-oflow'>").hide(); d.html("<a href='javascript:void(0)'><img data-dir='bf' src='" + n.Application.contextUrl + "Areas/VIS/Images/base/thumb-" + (n.Application.isRTL ? "last" : "first") + ".png'><\/a><a href='javascript:void(0)'><img data-dir='b' src='" + n.Application.contextUrl + "Areas/VIS/Images/base/thumb-" + (n.Application.isRTL ? "forward" : "back") + ".png'><\/a><a href='javascript:void(0)' ><img data-dir='r' src='" + n.Application.contextUrl + "Areas/VIS/Images/base/thumb-" + (n.Application.isRTL ? "back" : "forward") + ".png' /><\/a><a href='javascript:void(0)' ><img data-dir='rl' src='" + n.Application.contextUrl + "Areas/VIS/Images/base/thumb-" + (n.Application.isRTL ? "first" : "last") + ".png' /><\/a>"); ii = t("<div class='vis-apanel-header-nav'>").hide(); pt = t("<td style='width:40px;' style='height:100%' rowspan='3'>"); ht = t("<div class='vis-apanel-lb'>"); ti = t("<div class='vis-apanel-lb-toggle' ><img class='vis-apanel-lb-img' title='" + n.Msg.getMsg("Actions") + "' src='" + n.Application.contextUrl + "Areas/VIS/Images/base/mt24.png'><\/div>"); e = t("<ul class='vis-apanel-lb-ul'>"); b = t('<div class="vis-apanel-lb-main">'); st = t("<div class='vis-apanel-lb-oflow'>").hide(); st.html("<a data-dir='u' href='javascript:void(0)'><img style='margin-left:10px' data-dir='u' src='" + n.Application.contextUrl + "Areas/VIS/Images/base/arrow-top.png' ><\/a><a data-dir='d' href='javascript:void(0)' ><img style='margin-left:10px' data-dir='d' src='" + n.Application.contextUrl + "Areas/VIS/Images/base/arrow-bottom.png' /><\/a>"); ht.append(ti); ht.append(b); ht.append(st); pt.append(ht); wt = t("<td style='width:auto;height:100%;' rowspan='3'>"); y = t("<td class='vis-apanel-table-td3' style='height:100%;' rowspan='3'>"); ct = t("<a href='javascript:void(0)' class='vis-flex-prev vis-apanel-sliderBackground'>").html("<img src='" + n.Application.contextUrl + "Areas/VIS/Images/arrow-slider.png'>"); et = t("<div class='vis-apanel-bar-fixpart' style='position:absolute'>").append(ct); nt = t("<div class='vis-apanel-bar-varpart' style='overflow-y:auto'>"); ut = t("<div class='vis-apanel-bar' style='position:relative'>").append(et).append(nt); lt = t("<td rowspan='3' style='height:100%;vertical-align:top;max-width:8px;display:none'>").append(ut); ni = t("<ul class='vis-apanel-rb-ul'>"); ir = t("<ul class='vis-apanel-rb-ul'>"); ot = t("<ul class='vis-apanel-rb-ul'>"); l = n.Application.isRTL ? t("<td class='vis-window-tab-td-rtl' style='display:none; max-width:" + bt + "px' rowspan='3' >") : t("<td class='vis-window-tab-td' style='display:none;max-width:" + bt + "px' rowspan='3'>"); nr = t("<td style='height:" + v + "px;position:relative'setwi>").append(ii); kt = t("<td style='height:100%;'>"); ft = t("<div class='vis-apanel-statusbar'>").hide(); gi = t("<td style='height:" + h + "px'>").append(ft); fi = t("<tr>").append(gi); ei = t("<tr>").append(kt); oi = t("<tr>").append(pt).append(wt).append(nr).append(y).append(l).append(lt); si = t('<div class="vis-window-tab-panel-outerwrap">'); at = t('<div class="vis-window-tab-panels vis-pull-left">'); hi = t('<div class="vis-window-tabpanel-head vis-pull-left">'); vt = t('<div class="vis-window-tab-panelContent">'); ci = t(' <div class="vis-window-tab-panels-iconsbar vis-pull-right">'); li = t('<div class="vis-window-tab-icons">'); ai = t('<h3 class="vis-pull-left">'); vi = t('<span class="vis-window-tab-infoicon">'); tt = t("<ul>"); yi = t('<span class="vis-pull-right">').append('<i class="glyphicon glyphicon-remove"><\/i>'); li.append(tt); ci.append(vi).append(li); hi.append(ai).append(yi); at.append(hi).append(vt); si.append(at).append(ci); l.append(si); it = t("<table class='vis-apanel-table' >"); k.append(it); k.append(g); r = t("<input type='text' class='vis-apanel-search' placeholder='" + n.Msg.getMsg("Search") + "'><span style='right:58px;display:none' class='glyphicon glyphicon glyphicon-remove VIS-winSearch-autocom'><\/span><span style='display:none' class='glyphicon glyphicon-chevron-down VIS-winSearch-autocom'><\/span>"); gt = t("<img  title='" + n.Msg.getMsg("Search") + " " + n.Msg.getMsg("Shct_Search") + "' src='" + f.prototype.getPath() + "Sear.png'>"); dt.append(r).append(gt) } function ur() { ii.append(w).append(d).append(ri); nt.append("<h1 class='vis-apnel-rb-header'>" + n.Msg.getMsg("Action") + "<\/h1>").append(ni); nt.append("<h1 class='vis-apnel-rb-header'>" + n.Msg.getMsg("Related") + "<\/h1>").append(ot); b.append(e); ii.show(); ft.show(); it.append(oi).append(ei).append(fi); fi = ei = oi = null } function bi() { l.css({ position: "relative", "z-index": "" }); var t = "w"; n.Application.isRTL && (t = "e"); l.is(".ui-resizable") || l.resizable({ handles: t, minWidth: 102, maxWidth: bt, resize: function (n, t) { i.panelWidth = t.size.width; l.css({ position: "absolute", left: "", "z-index": "99" }) }, start: function () { l.css({ position: "absolute", "z-index": "99" }) }, stop: function (t, r) { i.curTab.getIncluded_Tab_ID() == 0 ? y.css("width", "0px") : y.css("width", ""); var u = i.curGC.getCurrentPanel(); u && u.sizeChanged && u.sizeChanged(r.originalSize.width); n.Application.isRTL ? l.css({ position: "relative", right: "", "z-index": "" }) : l.css({ position: "relative", left: "", "z-index": "" }); i.setWidth(-1, !0); i.curTab.getIncluded_Tab_ID() > 0 && i.curGC.vIncludedGC.vTable.resize(); i.setTabNavigation() } }) } var tr, ki, di, i, wi, u; this.$parentWindow; this.ctx = n.Env.getCtx(); this.curGC; this.curST; this.curTab; this.vTabbedPane = new n.VTabbedPane(!1); this.statusBar = new o; this.curWinTab = null; this.curTabIndex; this.firstTabId = null; tr = 0; ki = 0; this.toolbarCreated = !1; this.errorDisplayed = !1; this.isPersonalLock = n.MRole.getIsPersonalLock(); this.log = n.Logging.VLogger.getVLogger("APanel"); di = !1; this.isSummaryVisible = !1; var it, ri, kt, rt, dt, ui, a, ft, p, w, d, r, gt, k, g, et, nt, ut, ir, ot, ni, pt, ti, e, b, st, wt = "", y, ht, ii, ct, fi, ei, oi, gi, nr, l, lt, si, at, hi, vt, ci, li, ai, vi, tt, yi, bt = t(document).width() / 2, yt = [], pi = {}; this.defaultSearch = !0; this.isAutoCompleteOpen = !1; this.panelWidth = 0; this.windowWidth = 0; this.createSearchAutoComplete = function () { if (r) { var u = this; t(r[0]).autocomplete({ source: function (f, e) { if (f.term.trim().length != 0) { t(r[2]).css("transform", "rotate(180deg)"); var o = []; o[0] = new n.DB.SqlParam("@AD_Tab_ID", i.curTab.getAD_Tab_ID()); o[1] = new n.DB.SqlParam("@AD_User_ID", i.ctx.getAD_User_ID()); o[2] = new n.DB.SqlParam("@AD_Tab_ID1", i.curTab.getAD_Tab_ID()); o[3] = new n.DB.SqlParam("@AD_User_ID1", i.ctx.getAD_User_ID()); o[4] = new n.DB.SqlParam("@AD_Client_ID", i.ctx.getAD_Client_ID()); o[5] = new n.DB.SqlParam("@AD_Tab_ID2", i.curTab.getAD_Tab_ID()); o[6] = new n.DB.SqlParam("@AD_Table_ID", i.curTab.getAD_Table_ID()); o[7] = new n.DB.SqlParam("@queryData", f.term); c("VIS_114", o, function (f) { var h = [], l, o, a, s; if (f && f.tables[0].rows && f.tables[0].rows.length > 0) { for (h.push({ title: n.Msg.getMsg("All"), name: n.Msg.getMsg("All"), code: n.Msg.getMsg("All") }), t(r[1]).css("display", "block"), t(r[2]).css("display", "block"), l = !1, o = 0; o < f.tables[0].rows.length; o++)f.tables[0].rows[o].cells.ad_defaultuserquery_id > 0 ? (h.push({ title: f.tables[0].rows[o].cells.title, name: f.tables[0].rows[o].cells.name, code: f.tables[0].rows[o].cells.code, id: f.tables[0].rows[o].cells.ad_userquery_id, defaultids: f.tables[0].rows[o].cells.ad_defaultuserquery_id, userid: f.tables[0].rows[o].cells.ad_defaultuserquery_id }), l = !0) : h.push({ title: f.tables[0].rows[o].cells.title, name: f.tables[0].rows[o].cells.name, code: f.tables[0].rows[o].cells.code, id: f.tables[0].rows[o].cells.ad_userquery_id }); u.toggleASearchIcons(!0, l) } else a = "VIS_115", s = [], s[0] = new n.DB.SqlParam("@AD_Client_ID", i.ctx.getAD_Client_ID()), s[1] = new n.DB.SqlParam("@AD_Tab_ID", i.curTab.getAD_Tab_ID()), s[2] = new n.DB.SqlParam("@AD_Table_ID", i.curTab.getAD_Table_ID()), c(a, s, function (n) { n && n.tables[0].rows && n.tables[0].rows.length > 0 && (n.tables[0].rows[0].cells[0] > 0 ? u.toggleASearchIcons(!0, !1) : u.toggleASearchIcons(!1, !1)) }); e(t.map(h, function (n) { return { label: n.name, value: n.name, code: n.code, title: n.title, id: n.id, defid: n.defaultids, userid: n.userid } })) }) } }, select: function (u, f) { i.defaultSearch = !1; i.isSummaryVisible ? i.curTab.setShowSummaryNodes(!0) : i.curTab.setShowSummaryNodes(!1); var e = new n.Query(i.curTab.getTableName(), !1); i.curTab.searchText = f.item.value; i.curTab.userQueryID = f.item.id; f.item.code != n.Msg.getMsg("All") && e.addRestriction(f.item.code); i.curTab.getTableModel().setCurrentPage(1); i.curTab.setQuery(e); i.curGC.query(0, 0, !1); t(r[1]).css("display", "inherit"); t(r[2]).css("display", "inherit"); t(r[2]).css("transform", "rotate(360deg)"); u.stopPropagation() }, minLength: 0, open: function () { u.isAutoCompleteOpen = !0 }, close: function () { t(r[2]).css("transform", "rotate(360deg)"); window.setTimeout(function () { u.isAutoCompleteOpen = !1 }, 400) } }); window.setTimeout(function () { t(r[0]).autocomplete().data("ui-autocomplete")._renderItem = function (r, f) { var e = null, o; e = u.curTab.getTabLevel() == 0 ? f.defaultids && f.userid > 0 ? t("<span title='" + n.Msg.getMsg("DefaultSearch") + "'  data-id='" + f.id + "' class='VIS-winSearch-defaultIcon'><\/span>") : t("<span title='" + n.Msg.getMsg("MakeDefaultSearch") + "' data-id='" + f.id + "' class='VIS-winSearch-NonDefaultIcon'><\/span>") : t("<span title='" + n.Msg.getMsg("DefaultSearch") + "'  data-id='" + f.id + "'><\/span>"); o = t("<li>").append(t("<a style='display:block' title='" + f.title + "'>" + f.label + "<\/a>").append(e)).appendTo(r); e.on("click", function () { var r = t(this).data("id"); t.ajax({ url: n.Application.contextUrl + "JsonData/InsertUpdateDefaultSearch", dataType: "json", data: { AD_Tab_ID: i.curTab.getAD_Tab_ID(), AD_Table_ID: i.curTab.getAD_Table_ID(), AD_User_ID: i.ctx.getAD_User_ID(), AD_UserQuery_ID: r }, success: function () { }, error: function (n) { console.log(n) } }) }); return o } }, 200) } }; i = this; rr(); ft.append(this.statusBar.getRoot()); wi = n.Env.getScreenHeight() - s; it.height(wi); g.height(wi); this.setSize = function (t) { it.height(t); ht.height(t); ut.height(t); ft.height(h); b.height(t - 43); e.height() > b.height() && (n.Application.isMobile || (b.height(t - 83), st.show())); this.aParentDetail && this.aParentDetail.setSize(t); g.height(t); t = null }; u = function (n) { i.actionPerformed(n) }; this.onTabChange = function (n) { i.tabActionPerformed(n) }; this.statusBar.onComboChange = function (n) { i.setBusy(!0); setTimeout(function () { i.curGC.navigatePageExact(n + 1); i.curGC.onDemandTree || i.setBusy(!1) }, 100) }; this.createToolBar = function () { this.aRefresh = this.addActions(this.ACTION_NAME_REFRESH, null, !0, !0, !1, u, null, "Shct_Refresh"); this.aDelete = this.addActions(this.ACTION_NAME_DELETE, null, !0, !0, !1, u, null, "Shct_Delete"); this.aNew = this.addActions(this.ACTION_NAME_NEW, null, !0, !0, !1, u, null, "Shct_New"); this.aIgnore = this.addActions("Ignore", null, !0, !0, !1, u, null, "Shct_Ignore"); this.aSave = this.addActions("Save", null, !0, !0, !1, u, null, "Shct_Save"); this.aFind = this.addActions("Find", null, !0, !0, !1, u, null, "Shct_Find"); this.aInfo = this.addActions("Info", null, !0, !0, !1, u, null, "Shct_Info"); this.aReport = this.addActions("Report", null, !0, !0, !1, u, null, "Shct_Report"); this.aPrint = this.addActions("Print", null, !0, !0, !1, u, null, "Shct_Print"); a.append(this.aIgnore.getListItm()); a.append(this.aNew.getListItm()); a.append(this.aDelete.getListItm()); a.append(this.aSave.getListItm()); a.append(this.aRefresh.getListItm()); a.append(this.aReport.getListItm()); a.append(this.aPrint.getListItm()); a.append((new f).getSeprator(!1, !0)); a.append(this.aFind.getListItm()); this.aPrevious = this.addActions(this.ACTION_NAME_PREV, null, !0, !0, !0, u, null, "Shct_PrevRec"); this.aFirst = this.addActions(this.ACTION_NAME_FIRST, null, !0, !0, !0, u, null, "Shct_FirstRec"); this.aLast = this.addActions(this.ACTION_NAME_LAST, null, !0, !0, !0, u, null, "Shct_LastRec"); this.aNext = this.addActions(this.ACTION_NAME_NEXT, null, !0, !0, !0, u, null, "Shct_NextRec"); this.aMulti = this.addActions("Multi", null, !1, !0, !0, u, !0, "Shct_MultiRow"); this.aCard = this.addActions("Card", null, !1, !0, !0, u, null, "Shct_CardView"); this.aMap = this.addActions("Map", null, !1, !0, !0, u); rt.append(this.aFirst.getListItm()).append(this.aPrevious.getListItm()).append(this.aNext.getListItm()).append(this.aLast.getListItm()); rt.append(this.aMulti.getListItm()); rt.append(this.aCard.getListItm()); rt.append(this.aMap.getListItm().hide()); this.aPageUp = this.addActions("PageUp", null, !0, !0, !0, u, null, "Shct_PageUp"); this.aPageFirst = this.addActions("PageFirst", null, !0, !0, !0, u, null, "Shct_PageFirst"); this.aPageLast = this.addActions("PageLast", null, !0, !0, !0, u, null, "Shct_PageLast"); this.aPageDown = this.addActions("PageDown", null, !0, !0, !0, u, null, "Shct_PageDown"); var t = this.gridWindow; ki = 0; t.getIsAppointment() && (this.aAppointment = this.addActions("Appointment", null, !1, !1, !1, u), e.append(this.aAppointment.getListItmIT())); t.getIsTask() && (this.aTask = this.addActions("Task", null, !1, !1, !1, u), e.append(this.aTask.getListItmIT())); t.getIsEmail() && (this.aEmail = this.addActions("EMail", null, !1, !1, !1, u), e.append(this.aEmail.getListItmIT())); t.getIsLetter() && (this.aLetter = this.addActions("Letter", null, !1, !1, !1, u), e.append(this.aLetter.getListItmIT())); t.getIsSms() && (this.aSms = this.addActions("Sms", null, !1, !1, !1, u), e.append(this.aSms.getListItmIT())); t.getIsFaxEmail() && (this.aFaxEmail = this.addActions("FaxEmail", null, !1, !1, !1, u), e.append(this.aFaxEmail.getListItmIT())); t.getIsChat() && (this.aChat = this.addActions(this.ACTION_NAME_CHAT, null, !1, !1, !1, u, !0), e.append(this.aChat.getListItmIT())); t.getIsAttachment() && (this.aAttachment = this.addActions("Attachment", null, !1, !1, !1, u, !0), e.append(this.aAttachment.getListItmIT())); t.getIsHistory() && (this.aHistory = this.addActions("History", null, !1, !1, !1, u), e.append(this.aHistory.getListItmIT())); t.getIsCheckRequest() && (this.aRequest = this.addActions("Request", null, !0, !1, !1, u), e.append(this.aRequest.getListItmIT())); n.AEnv.getIsWorkflowProcess() && (this.aWorkflow = this.addActions("Workflow", null, !0, !1, !1, u), e.append(this.aWorkflow.getListItmIT())); t.getIsCopyReocrd() && (this.aCopy = this.addActions("Copy", null, !1, !1, !1, u), e.append(this.aCopy.getListItmIT())); t.getIsSubscribedRecord() && (this.aSubscribe = this.addActions("Subscribe", null, !0, !1, !1, u, !0), e.append(this.aSubscribe.getListItmIT())); t.getIsZoomAcross() && (this.aZoomAcross = this.addActions("ZoomAcross", null, !0, !1, !1, u), e.append(this.aZoomAcross.getListItmIT())); t.getIsCreatedDocument() && (this.aCreateDocument = this.addActions("CreateDocument", null, !1, !1, !1, u), e.append(this.aCreateDocument.getListItmIT())); t.getIsUploadedDocument() && (this.aUploadDocument = this.addActions("UploadDocument", null, !1, !1, !1, u), e.append(this.aUploadDocument.getListItmIT())); t.getIsViewDocument() && (this.aViewDocument = this.addActions("ViewDocument", null, !1, !1, !1, u, !0), e.append(this.aViewDocument.getListItmIT())); t.getIsAttachDocumentFrom() && (this.aAttachFrom = this.addActions("AttachDocumentFrom", null, !1, !1, !1, u, !0), e.append(this.aAttachFrom.getListItmIT())); t.getIsMarkToExport() && (this.aMarkToExport = this.addActions("Mark", null, !1, !1, !1, u, !0), e.append(this.aMarkToExport.getListItmIT())); t.getIsImportMap() && (this.aImportMap = this.addActions("Import", null, !1, !1, !1, u), e.append(this.aImportMap.getListItmIT())); t.getIsArchive(); t.getIsAttachmail(); t.getIsRoleCenterView(); this.isPersonalLock && (this.aLock = this.addActions("Lock", null, !0, !1, !1, u, !0), e.append(this.aLock.getListItmIT()), this.aRecAccess = this.addActions("RecordAccess", null, !0, !1, !1, u, !0), e.append(this.aRecAccess.getListItmIT())); this.aPreference = this.addActions("Preference", null, !1, !1, !0, u); n.MRole.getDefault().getIsShowPreference() && ot.append(this.aPreference.getListItmIT()); this.aHelp = this.addActions("Help", null, !0, !1, !0, u); ot.append(this.aHelp.getListItmIT()); this.aCardDialog = this.addActions("CardDialog", null, !0, !1, !0, u); ot.append(this.aCardDialog.getListItmIT()); this.aShowSummaryLevel = this.addActions("ShowSummaryNodes", null, !0, !1, !0, u, !0); ot.append(this.aShowSummaryLevel.getListItmIT()); t = null; this.statusBar.setPageItem(this.aPageFirst.getListItm()); this.statusBar.setPageItem(this.aPageUp.getListItm()); this.statusBar.setComboPage(); this.statusBar.setPageItem(this.aPageDown.getListItm()); this.statusBar.setPageItem(this.aPageLast.getListItm()); this.statusBar.render(); this.toolbarCreated = !0; this.$parentWindow.setToolbar(ui); this.$parentWindow.setToolbar(dt); ur() }; this.setDynamicActions = function () { if (this.curGC != null) { var n = 0, t = []; if (this.curGC.leftPaneLinkItems.length > 0) for (t = this.curGC.leftPaneLinkItems, n = 0; n < t.length; n++)ni.append(t[n].getControl()); if (n = 0, this.curGC.rightPaneLinkItems.length > 0) for (t = this.curGC.rightPaneLinkItems, n = 0; n < t.length; n++)ni.append(t[n].getControl()); t = null } }; this.getRoot = function () { return k }; this.getLayout = function () { return kt }; this.getIncludedEmptyArea = function () { return y }; this.getParentDetailPane = function () { return wt }; vi.on("click", function () { et.trigger("click") }); this.setTabPanelIcons = function () { var t, n; this.curGC && (tt.empty(), tt.append(this.curGC.createTabPanel(this.curTab.getTabPanels())), this.curGC.getCurrentPanel() ? (t = this.curGC.getCurrentPanelID(), n = tt.find("[data-panelid='" + t + "']").first(), n && n.length > 0 ? (bi(), n.trigger("click"), this.showPanelContainer(!0)) : this.showPanelContainer(!1)) : (n = tt.find("[default='true']").first(), n && n.length > 0 ? (bi(), n.trigger("click"), this.showPanelContainer(!0)) : this.showPanelContainer(!1))) }; this.setCurrentTabPanel = function () { if (this.curGC) { var n = this.curGC.getCurrentPanel(); n && (vt.empty(), vt.append(n.getRoot()), this.showPanelContainer(!0)) } }; this.showTabPanel = function (n) { if (n) if (l.css({ display: "" }), this.curTab.getIncluded_Tab_ID() > 0) { y.css("width", ""); var t = y.attr("style", t) } else l.width() <= 40 ? y.css({ width: "", "padding-left": "", "padding-right": "" }) : y.width(0); else y.css("width", ""), l.css({ display: "" }), l.css("width", "40px"), at.css("display", "none") }; this.setIncludedTabWidth = function (n) { n ? y.css("width", "") : y.css("width", "0px") }; this.showPanelContainer = function (n) { n ? (l.css("width", this.panelWidth + "px"), at.css({ display: "", "z-index": "" })) : (l.css({ display: "" }), l.css("width", "40px"), at.css("display", "none"), w.css("width", ""), l.is(".ui-resizable") && l.resizable("destroy")); this.setTabNavigation() }; this.setWidth = function (n) { var i = this; n && (n > 0 && (n = 100 - n, n = t(document).width() * n / 100, n > bt && (n = bt), l.css({ width: n + "px" }), i.panelWidth = n), this.refresh()) }; yi.on("click", function () { i.showPanelContainer(!1); i.setIncludedTabWidth(!0); i.setWidth(-1, !1); i.curGC.setCurrentPanel(null); i.setTabNavigation(); var n = tt.find(".vis-selected-list")[0]; t(n).removeClass("vis-selected-list") }); tt.on("click", function (n) { var r = t(n.target), f, u; r.is("li") ? (u = r.siblings(".vis-selected-list"), u && u.removeClass("vis-selected-list"), u.removeClass("vis-selected-list"), r.addClass("vis-selected-list"), r = r.find("img")) : r.is("img") && (f = t(r.parent()), u = f.siblings(".vis-selected-list"), u && u.removeClass("vis-selected-list"), f.addClass("vis-selected-list")); ai.text(r.data("name")); vt.empty(); i.curGC.setCurrentPanelID(r.data("panelid")); i.curGC.setCurrentPanel(r.data("cname"), i.$parentWindow.getWindowNo()); vt.append(i.curGC.getCurrentPanel().getRoot()); bi(); l.width() <= 40 && i.showPanelContainer(!0); i.curTab.getIncluded_Tab_ID() == 0 ? i.setIncludedTabWidth(!1) : i.setIncludedTabWidth(!0); i.showTabPanel(!0); i.setWidth(-1, !0); i.setTabNavigation() }); this.setTabControl = function (t) { var i, r; for (yt = t, i = 0; i < t.length; i++)r = t[i].getListItm(), pi[yt[i].action] = r, p.append(r); p.width() > w.width() && (n.Application.isMobile || d.show()) }; this.setTabNavigation = function () { p.width() > w.width() ? n.Application.isMobile || d.show() : d.hide() }; this.setSelectedTab = function (n) { this.selectedTab && this.selectedTab.removeClass("vis-apanel-tab-selected"); this.selectedTab = pi[n]; this.selectedTab.addClass("vis-apanel-tab-selected") }; this.navigateThroghtShortcut = function (n) { var t = null; n ? (t = p.find(".vis-apanel-tab-selected").next(), (!t || t.length <= 0) && (t = p.children().first())) : (t = p.find(".vis-apanel-tab-selected").prev(), (!t || t.length <= 0) && (t = p.children().last())); t.trigger("click") }; this.setBusy = function (n, t) { di = n; n ? g[0].style.visibility = "visible" : (g[0].style.visibility = "hidden", t) }; d.on("click", function (n) { var f, e; if (n.stopPropagation(), f = t(n.target).data("dir"), f) { var s = w.width(), o = p.width(), i = w.scrollLeft(), r = Math.ceil(s / 2), u = 0; if (f == "r") { if (i + r >= o - r) return; e = o - s; u = i + r; w.animate({ scrollLeft: u > e ? e : u }, 1e3) } else if (f == "b") { if (i == 0) return; u = i - r; w.animate({ scrollLeft: u < 0 ? 0 : u }, 1e3) } if (f == "rl") { if (i + r >= o - r) return; e = o - s; w.animate({ scrollLeft: e }, 500) } else if (f == "bf") { if (i == 0) return; u = i - r; w.animate({ scrollLeft: 0 }, 500) } } }); st.on("click", function (n) { var r, o; if (n.stopPropagation(), r = t(n.target).data("dir"), r) { var s = b.height(), h = e.height(), u = b.scrollTop(), f = Math.ceil(s / 2), i = 0; if (r == "d") { if (u + f >= h - f) return; o = h - s; i = u + f; b.animate({ scrollTop: i > o ? o : i }, 1e3, "easeOutBounce") } else if (r == "u") { if (u == 0) return; i = u - f; b.animate({ scrollTop: i < 0 ? 0 : i }, 1e3, "easeOutBounce") } } }); gt.on(n.Events.onTouchStartOrClick, function (u) { if (t(r[1]).is(":visible") == !0) { t(r[1]).css("display", "none"); t(r[0]).val(""); i.curTab.searchText = ""; var f = new n.Query; i.findRecords(f) } else i.cmd_find(r.val()), t(r[1]).css("display", "none"), i.curTab.searchText = "", r.val(""); u.stopPropagation() }); if (!n.Application.isMobile) t(r[0]).on("keyup", function (u) { var e = u.charCode || u.keyCode, f; if (e == 13) { if (!i.defaultSearch) return; t(r[1]).css("display", "none"); i.cmd_find(t(r[0]).val()); t(r[0]).val("") } else e == 8 && t(r[1]).is(":visible") == !0 && (u.preventDefault(), i.defaultSearch = !0, t(r[1]).css("display", "none"), t(r[0]).val(""), f = new n.Query, f.addRestriction(" 1 = 1 "), i.findRecords(f)) }); t(r[2]).on("click", function () { i.isAutoCompleteOpen ? t(r[2]).css("transform", "rotate(360deg)") : (t(r[2]).css("transform", "rotate(180deg)"), i.refreshSavedASearchList(!0)) }); t(r[1]).on("click", function () { t(r[1]).css("display", "none"); i.defaultSearch = !0; i.curTab.searchText = ""; t(r[0]).val(""); var u = new n.Query; i.findRecords(u); t(r[2]).css("transform", "rotate(360deg)") }); this.setAdvancedSerachText = function (n, i) { n ? t(r[1]).css("display", "none") : (t(r[1]).css("display", "inherit"), t(r[2]).css("display", "inherit")); t(r[0]).val(i) }; this.toggleASearchIcons = function (n, i) { n && i ? (t(r[1]).css("display", "inherit"), t(r[2]).css("display", "inherit")) : n && !i ? (t(r[1]).css("display", "none"), t(r[2]).css("display", "inherit")) : (t(r[1]).css("display", "none"), t(r[2]).css("display", "none")) }; this.setSearchFocus = function (n) { n ? t(r[0]).focus() : t(r[0]).trigger("focusout") }; this.refreshSavedASearchList = function (u, f) { var e = [], o; e[0] = new n.DB.SqlParam("@AD_Tab_ID", i.curTab.getAD_Tab_ID()); e[1] = new n.DB.SqlParam("@AD_User_ID", i.ctx.getAD_User_ID()); e[2] = new n.DB.SqlParam("@AD_Tab_ID1", i.curTab.getAD_Tab_ID()); e[3] = new n.DB.SqlParam("@AD_User_ID1", i.ctx.getAD_User_ID()); e[4] = new n.DB.SqlParam("@AD_Client_ID", i.ctx.getAD_Client_ID()); e[5] = new n.DB.SqlParam("@AD_Tab_ID2", i.curTab.getAD_Tab_ID()); e[6] = new n.DB.SqlParam("@AD_Table_ID", i.curTab.getAD_Table_ID()); o = this; c("VIS_116", e, function (i) { var s = [], h, e; if (i && i.tables[0].rows && i.tables[0].rows.length > 0) for (t(r[2]).css("display", "inherit"), s.push({ label: n.Msg.getMsg("All"), value: n.Msg.getMsg("All"), code: n.Msg.getMsg("All") }), h = !1, e = 0; e < i.tables[0].rows.length; e++)i.tables[0].rows[e].cells.ad_defaultuserquery_id > 0 ? (s.push({ title: i.tables[0].rows[e].cells.title, label: i.tables[0].rows[e].cells.name, value: i.tables[0].rows[e].cells.name, code: i.tables[0].rows[e].cells.code, id: i.tables[0].rows[e].cells.ad_userquery_id, defaultids: i.tables[0].rows[e].cells.ad_defaultuserquery_id, userid: i.tables[0].rows[e].cells.ad_defaultuserquery_id }), h = !0) : s.push({ title: i.tables[0].rows[e].cells.title, label: i.tables[0].rows[e].cells.name, value: i.tables[0].rows[e].cells.name, code: i.tables[0].rows[e].cells.code, id: i.tables[0].rows[e].cells.ad_userquery_id }); else o.toggleASearchIcons(!1, !1); f || (f = t(r[0]).val()); f && f.length > 0 ? (f.length > 25 ? t(r[0]).val(f.substr(0, 25) + "...") : t(r[0]).val(f), t(r[1]).css("display", "inherit"), o.defaultSearch = !1) : t(r[1]).css("display", "none"); t(r[0]).autocomplete("option", "source", s); u && (t(r[0]).autocomplete("search", ""), t(r[0]).trigger("focus")) }) }; this.findRecords = function (n) { var t = !1, i; this.curTab.getTableModel().setCurrentPage(1); this.isSummaryVisible ? this.curTab.setShowSummaryNodes(!0) : this.curTab.setShowSummaryNodes(!1); this.curGC.skipRowInserting(!0); n != null && n.getIsActive() ? (this.curTab.setQuery(n), this.curGC.query(0, 0, t)) : (i = 0, this.curTab.setQuery(null), this.curGC.query(0, i, t)) }; ti.on(n.Events.onTouchStartOrClick, function (n) { n.stopPropagation(); n.preventDefault(); var t = pt.width(); t > 50 && e.find("span").hide(); pt.animate({ width: t > 50 ? 40 : 200 }, 300, "swing", function () { t < 50 && e.find("span").show(); i.curGC && i.curGC.multiRowResize(); i.setWidth(-1, !0); i.setTabNavigation() }) }); et.on("click", function (r) { r.stopPropagation(); var u = n.Application.isRTL; ut.width() > 100 ? (ut.animate({ left: u ? 0 : k.width() - 8 + "px", width: "8px" }, 500, "swing", function () { nt.css({ width: "0px" }) }), nt.animate({ width: "0px" }, 500, "swing"), i.curTab.getHasPanel() ? (t(ct.find("img")).css({ transform: "rotate(360deg)", display: "none" }), lt.css("display", "none")) : (t(ct.find("img")).css({ transform: "rotate(360deg)" }), lt.css("display", "none"))) : (ut.css({ position: "absolute", width: "8px", left: u ? 0 : k.width() - 8 }), ut.animate({ left: u ? 0 : k.width() - 220 + "px", width: "220px" }, 500, "swing"), nt.animate({ width: "212px" }, 500, "swing"), i.curTab.getHasPanel() ? (t(ct.find("img")).css({ transform: "rotate(180deg)", display: "" }), lt.css("display", "")) : (t(ct.find("img")).css({ transform: "rotate(180deg)" }), lt.css("display", ""))) }); this.disposeComponent = function () { if (gt.off(n.Events.onTouchStartOrClick), r.remove(), r = null, ti.off(n.onTouchStartOrClick), st.off("click"), d.off("click"), k.remove(), g.remove(), it.remove(), k = g = it = ri = kt = rt = dt = ui = a = ft = null, i = null, u = null, this.toolbarCreated && (this.aRefresh.dispose(), this.aDelete.dispose(), this.aNew.dispose(), this.aSave.dispose(), this.aPrevious.dispose(), this.aFirst.dispose(), this.aLast.dispose(), this.aNext.dispose(), this.aPageUp.dispose(), this.aPageFirst.dispose(), this.aPageLast.dispose(), this.aPageDown.dispose(), this.aCard.dispose(), this.aCardDialog.dispose(), this.aShowSummaryLevel && this.aShowSummaryLevel.dispose(), this.aChat && this.aChat.dispose(), this.aAppointment && this.aAppointment.dispose(), this.aHelp.dispose(), this.aSubscribe && this.aSubscribe.dispose(), this.aAttachment && this.aAttachment.dispose(), this.aHistory && this.aHistory.dispose(), this.aZoomAcross && this.aZoomAcross.dispose(), this.aRequest && this.aRequest.dispose(), this.aMarkToExport && this.aMarkToExport.dispose(), this.aWorkflow && this.aWorkflow.dispose(), this.aRecAccess && this.aRecAccess.dispose(), this.aImportMap && this.aImportMap.dispose(), this.aRefresh = this.aDelete = this.aNew = this.aPrevious = this.aFirst = this.aLast = this.aNext = null, this.aChat = this.aPageUp = this.aPageFirst = this.aPageLast = this.aPageDown = null, this.aHelp = this.aSubscribe = this.aAttachment = null, this.toolbarCreated = null, this.aZoomAcross = this.aRequest = this.aMark = this.aWorkflow = this.aHistory = null, this.aAppointment = null, this.aRecAccess = this.aImportMap = this.aCard = this.aCardDialog = this.aShowSummaryLevel = null), this.statusBar.dispose(), this.statusBar.onComboChange = null, this.statusBar = null, this.getRoot = null, this.getLayout = null, this.setBusy = null, this.createToolBar = null, this.$parentWindow = null, this.ctx = null, this.curGC = null, this.curST = null, this.curTab = null, this.vTabbedPane = null, this.curWinTab = null, this.curTabIndex = null, this.firstTabId = null, et.off("click"), et = null, nt = null, wt.remove(), wt = null, this.getParentDetailPane = null, yt) for (var t = 0; t < yt.length; t++)yt[t].dispose(); yt = null; pi = null; p.remove() } } function et(i) { t.ajax({ url: n.Application.contextUrl + "Posting/PostByNewLogic", dataType: "json", async: !0, data: { AD_Client_ID: n.context.getAD_Client_ID() }, error: function () { n.ADialog.info(n.Msg.getMsg("ERRORGettingPostingServer")) }, success: function (n) { i && i(n.result) } }) } function b(n, t, i, r, u, f, e) { if (n.getProcess_ID() != 0) { var o = !0; return u.curTab.needSave(!0, !1) && (o = !1, u.cmd_save(!0, function (o) { if (o) return nt(n, t, i, r, u, f, e) })), o ? nt(n, t, i, r, u, f, e) : void 0 } } function nt(i, r, u, f, e, o, s) { var l = i.getName(), h = !1, v = !0, a; try { if (i.getAskUserBGProcess() == !0 || i.getIsBackgroundProcess() == !0) { var y = t('<div class="vis-confirm-popup-check"><label>' + n.Msg.translate(n.context, "IsBackgroundProcess") + "<\/label><\/div>"), c = t('<input type="checkbox">'), p = i.getIsBackgroundProcess(); c.prop("checked", p); c.prop("disabled", p); y.prepend(c); n.ADialog.confirmCustomUI("StartProcess?", !0, i.getDescription() + "\n" + i.getHelp(), "Confirm", y, function (n) { if (n) return isBg = c.is(":checked"), k(i, r, u, f, s, e, h, l, isBg) }) } else if (a = i.getIsBackgroundProcess(), o || i.getDescription().equals("") && i.getHelp().equals("") || (v = !1, n.ADialog.confirm("StartProcess?", !0, i.getDescription() + "\n" + i.getHelp(), "Confirm", function (n) { if (n) return k(i, r, u, f, s, e, h, l, a) })), v) return k(i, r, u, f, s, e, h, l, a) } catch (w) { n.ADialog.error("Error?", !0, "error in process : " + w.message); h = !1 } return !1 } function k(t, i, r, u, f, e, o, s, h) { var l = t.getDescription(), c, a; return (l == null || l.length == 0) && (l = s), c = new n.ProcessInfo(l, t.getProcess_ID(), i, r), c.setAD_User_ID(u.getAD_User_ID()), c.setAD_Client_ID(u.getAD_Client_ID()), c.setAD_Window_ID(e.$parentWindow === undefined ? 0 : e.$parentWindow.AD_Window_ID), c.setIsBatch(f), c.setIsBackground(h), a = new n.ProcessCtl(e, c, null), t.isPdf ? c.setFileType(n.ProcessCtl.prototype.REPORT_TYPE_PDF) : t.isCsv && c.setFileType(n.ProcessCtl.prototype.REPORT_TYPE_CSV), a.process(e.curWindowNo), o = !0, e = null, t = null, f = !1, startWOasking = !1, actionProcessAfterSave = null, o } function f(i) { var u, f, r; i && (this.action, this.toggle, this.enableDisable, this.pressed, this.isEnabled = !0, this.text, this.toolTipText, this.imageOnly, this.textOnly, this.onAction = null, this.isSmall, t.extend(!0, this, i), this.items = {}, this.$li, this.text || (this.text = n.I18N.getLabel(this.action), this.text.contains("&") && (this.text = this.text.replace("&", "")), this.toolTipText ? (this.toolTipText = n.Msg.getMsg(this.toolTipText), this.text = this.text + " " + this.toolTipText) : this.toolTipText = n.Msg.getMsg(this.action), this.toolTipText.contains("&") && (this.toolTipText = this.toolTipText.replace("&", ""))), u = this.getPath(), f = this.getPath(), this.isSmall ? (u += this.action + "16.png", (this.toggle || this.enableDisable) && (f += this.action + "X16.png")) : (u += this.action + "24.png", (this.toggle || this.enableDisable) && (f += this.action + "X24.png")), this.imgUrl = u, this.imgUrlX = f); r = this; this.getListItm = function (i) { var u = t("<li>"), f = t("<div><\/div>"), e = !0; u.on(n.Events.onClick, function (n) { n.stopPropagation(); e && r.onAction && r.isEnabled && (r.toggle && r.setPressed(!r.pressed), e = !1, f.css("background-color", "red"), setTimeout(function () { f.css("background-color", "transparent"); r.onAction(r.action); e = !0 }, 10)) }); return this.textOnly ? u.append(t("<h2>").text(this.text)) : this.imageOnly ? (this.img = t("<img />").attr({ src: this.imgUrl, alt: this.text, title: this.text }), u.append(f), f.append(this.img)) : (u.append('<ul class="vis-appsaction-ul-inner"><li><img src="' + this.imgUrl + '" title="' + this.text + '" /><\/li><li><span>' + this.text + "<\/span><\/li><\/ul>"), this.img = u.find("img")), this.$li = u, i && (this.items[i] = u), this.$li }; this.getListItmIT = function (i) { if (this.$li) return this.$li; var u = t("<li>"), f = t("<div><\/div>"), e = !0; u.on(n.Events.onClick, function (n) { n.stopPropagation(); e && r.onAction && r.isEnabled && (r.toggle && r.setPressed(!r.pressed), e = !1, f.css("background-color", "red"), setTimeout(function () { f.css("background-color", "transparent"); r.onAction(r.action); e = !0 }, 10)) }); return this.textOnly ? u.text(this.text) : this.imageOnly ? (this.img = t("<img />").attr({ src: this.imgUrl, alt: this.text, title: this.text }), u.append(f), f.append(this.img)) : (u.append('<img src="' + this.imgUrl + '"  title="' + this.text + '"   /><span> ' + this.text + "<\/span>"), this.img = u.find("img")), this.$li = u, i && (this.items[i] = u), this.$li }; this.disposeComponent = function () { r = null; this.getListItm = null; this.getListItmIT = null } } function o(i) { function p() { f = t("<table class='vis-statusbar-table'>"); o = t("<td style='text-align:center' colspan='3' >"); s = t("<td style='width:auto;white-space:nowrap;'>"); c = t("<td  style='width:100%;'>"); l = t("<td style='width:auto;white-space:nowrap;'>"); u = t("<ul class='vis-statusbar-ul'>") } var v, y, f, o, s, u, c, l, e; this.$statusLine = t("<span>"); this.$statusDB = t("<span class='vis-statusbar-statusDB'>").text("0/0"); this.$infoLine = t("<span class='vis-statusbar-infoLine'>").text("info"); var h = t("<span class='vis-statusbar-pageMsg'>"), a = t("<img class='vis-statusbar-img' src= '" + n.Application.contextUrl + "Areas/VIS/Images/base/seprator16.png'>"), r = t("<select class='vis-statusbar-combo'>"); this.text = ""; this.dse; this.merror; this.mtext; v = n.Msg.getMsg("ShowingResult"); y = n.Msg.getMsg("of"); this.onComboChange; p(); u.append(t("<li>").append(this.$statusDB)); s.append(h).append(a); c.append(t("<div class='vis-statusbar-statusLine'>").append(this.$statusLine)); l.append(u); o.append(this.$infoLine); i || this.$infoLine.hide(); this.getRoot = function () { return f }; this.render = function () { f.empty(); f.append(t("<tr class='vis-height-auto'>").append(o)).append(t("<tr class='vis-height-full'>").append(s).append(c).append(l)) }; this.setPageItem = function (n) { u.append(n) }; this.setComboPage = function () { u.append(t("<li>").append(r)) }; this.setPageLine = function (n) { var l, f, a, t; if (n != null) { var i = n.getCurrentPage(), e = n.getTotalPage(), o = n.getPageSize(), s = n.getTotalRecords(), c = (i - 1) * o, u = c + o; if (u > s && (u = s), l = v + " " + (c + 1) + "-" + u + " " + y + " " + n.getTotalRecords(), h.text(l), e != r[0].options.length) { for (f = [], a = -1, t = 0; t < e; t++)f[t] = "<option>" + (t + 1) + "<\/option>"; r.empty(); r.html(f.join("")) } r[0].selectedIndex != i - 1 && (r[0].selectedIndex = i - 1) } }; this.setComboCallback = function (n) { selectionCallback = n }; e = this; r.on("change", function (n) { if (n.stopPropagation(), e.onComboChange) e.onComboChange(this.selectedIndex) }); this.$statusDB.on("click", function () { var t = n.Msg.getMsg("Who") + e.text, i = new n.RecordInfo(t, e.dse); i.show() }); this.disposeComponent = function () { e = null; f.remove(); o = null; s = null; f = null; this.getRoot = null; this.onComboChange = null; u.remove(); u = null; h = null; this.$statusLine = null; this.$statusDB = null; a = null; this.disposeComponent = null; this.setPageItem = null; this.getRoot = null; this.render = null; this.setPageLine = null; this.$infoLine = null; this.text = null; this.dse = null; this.merror = null; this.mtext = null; r.empty(); r.remove(); r = null } } function r() { function r(n) { var i, r; return t.readOnly ? !1 : (i = t.grid.columns[n], !t.mTab.getTableModel().getIsInserting() && i.readOnly) ? !1 : (r = i.gridField, r.getIsEditable(!0, !0)) ? !0 : !1 } function u(n, i) { return t.readOnly ? !1 : i == t.indexActiveColumn && t.indexProcessedColumn == -1 ? !0 : f(n) ? !0 : !1 } function f(i) { var r, u; if (t.readOnly || i < 0) return !1; if (t.indexActiveColumn && t.indexActiveColumn > 0) if (r = t.grid.getCellValue(i, t.indexActiveColumn), typeof r == "boolean") { if (!r) return r } else if ("True".equals(r)) { if ("N".equals(r)) return !1 } else return !1; if (t.indexProcessedColumn && t.indexProcessedColumn > 0) if (u = t.grid.getCellValue(i, t.indexProcessedColumn), typeof u == "boolean") { if (u) return !1 } else if ("True".equals(u) || "Y".equals(u)) return !1; var f = e(i), o = f[0], s = f[1], h = f[2]; return n.MRole.canUpdate(o, s, t.AD_Table_ID, h, !1) } function e(i) { var e = -1, u, f, r; return typeof t.indexClientColumn != "undefined" && t.indexClientColumn != -1 && (r = t.grid.getCellValue(i, t.indexClientColumn), r != null && r !== "" && (e = n.Utility.Util.getValueOfInt(r))), u = 0, typeof t.indexOrgColumn != "undefined" && t.indexOrgColumn != -1 && (r = t.grid.getCellValue(i, t.indexOrgColumn), r != null && r !== "" && (u = n.Utility.Util.getValueOfInt(r))), f = 0, typeof t.indexKeyColumn != "undefined" && t.indexKeyColumn != -1 && (r = t.grid.getCellValue(i, t.indexKeyColumn), r != null && r !== "" && (f = n.Utility.Util.getValueOfInt(r))), [e, u, f] } this.grid = null; this.id = null; this.$container = null; this.rendered = !1; this.onSelect = null; this.onCellEditing = null; this.onCellValueChanged = null; this.onSort = null; this.onEdit = null; this.onAdd = null; this.editColumnIndex = -1; var t = this, i = { caption: "", sortable: !1, render: function () { return '<img src="' + n.Application.contextUrl + 'Areas/VIS/Images/base/pencil.png"  />' }, size: "25px" }; this.getEditColumn = function () { return i }; this.onClick = function (n) { this.readOnly || (t.skipEditing = !1, this.records.length > 0 && this.records[t.mTab.getCurrentRow()].recid != n.recid && (t.skipEditing = !0)) }; this.onSingleClick = function () { }; this.onSelectLocal = function (n) { if (t.blockSelect) { t.blockSelect = !1; return } if (t.onSelect) t.onSelect(n) }; this.checkCellEditable = !0; this.onEditField = function (n) { if (t.skipEditing) { t.skipEditing = !1; n.isCancelled = !0; this.select({ recid: n.recid }); return } n.isCancelled = !r(n.column) || n.originalEvent && n.originalEvent.altKey; t.blockSelect = !n.isCancelled }; this.onChange = function (n) { if (t.grid.columns[n.column].editable.type == "checkbox") { if (this.records.length > 0 && this.records[t.mTab.getCurrentRow()].recid != n.recid) { n.isCancelled = !0; return } n.isCancelled = !r(n.column) } n.onComplete = function (n) { var i = { newValue: n.value_new, propertyName: t.grid.columns[n.column].field }; if (t.onCellValueChanged) t.onCellValueChanged(i, t.grid.columns[n.column].editable.type == "checkbox") } }; this.onUnSelect = function () { }; this.onRowAdd = function (n) { t.paintRow(n.index) }; this.paintRow = function (n) { var t = this.grid.records[n]; if (!u(n, 0)) { t.style = "background-color:whitesmoke"; return } t && t.style && delete t.style }; this.disposeComponenet = function () { t = null; i = null; this.getEditColumn = null; this.onClick = null } } function e() { function o() { r = t("<div class='vis-cv-body vis-noselect'>"); n = t("<div class='vis-cv-main'>"); f = t("<div class='vis-cv-header'>"); r.append(n) } var r, n, f, u, i, e; this.cGroupInfo = {}; this.cCols = []; this.cConditions = []; this.cGroup = null; this.mTab; this.AD_Window_ID; this.AD_Tab_ID; this.groupCtrls = []; this.fields = []; this.grpCount = 0; this.grpColName = ""; this.hasIncludedCols = !1; this.onCardEdit = null; n = null; u = this; o(); this.getRoot = function () { return r }; this.getBody = function () { return n }; this.setHeader = function (n) { f.text(n) }; this.getHeader = function () { return f }; this.sizeChanged = function (n, t) { r.height(n - 12 + "px"); this.calculateWidth(t) }; this.calculateWidth = function (t) { var i = this.groupCtrls.length, r, u; if (!(i < 1)) { if (t) if (r = 262 * i, r > t) n.width(262 * i); else for (n.width(t), u = Math.ceil(t / i) - 24; i > 0;)--i, this.groupCtrls[i].setWidth(u); else n.width(262 * i); this.navigate() } }; n.on("click", "div.vis-cv-card", function (n) { var r, i, f; if (u.onCardEdit) if (r = t(n.target), r[0].nodeName == "SPAN" && r.hasClass("vis-cv-card-edit")) { if (i = r.data("recid"), i || i === 0) u.onCardEdit({ recid: i }) } else { for (f = 0; !r.hasClass("vis-cv-card");) { if (f > 5) break; r = r.parent(); f++ } if (i = r.data("recid"), i || i === 0) { u.onCardEdit({ recid: i }, !0); u.navigate(i, !1, !0) } } n.stopPropagation() }); this.getAD_CardView_ID = function () { return this.AD_CardView_ID }; this.getField_Group_ID = function () { return this.cGroup ? this.cGroup.getAD_Field_ID() : 0 }; i = null; e = null; this.navigate = function (t, r, u) { (t && (e = t), r) || (i && i.length > 0 && i.toggleClass("vis-cv-card-selected"), i = n.find("div.vis-cv-card[name~=vc_" + e + "]"), i.length != 0 && (i.toggleClass("vis-cv-card-selected"), u || i[0].scrollIntoView())) }; this.dC = function () { for (n.off("click"), this.onCardEdit = null, u = null, r.remove(), n.remove(), f.remove(), r = n = f = null, this.getRoot = this.getBody = this.setHeader = this.getHeader = this.dC = null, i = null, this.cGroupInfo = {}, this.cCols.length = 0, this.cConditions.length = 0, this.cGroup = null, this.mTab = null, this.fields.length = 0, this.grpCount = null; this.groupCtrls.length > 0;)this.groupCtrls.pop().dispose() } } function d(i, r, u, f, e) { function c() { var n = "<div class='vis-cv-cg vis-pull-left'> <div class='vis-cv-head' >" + u + "<\/div><div class='vis-cv-grpbody'><\/div><\/div>"; o = t(n); s = o.find(".vis-cv-grpbody"); i && o.css({ "margin-right": "0px", width: "100%" }) } function a() { for (var t = null, u = 0; u < r.length; u++)t = new l(f, r[u]), i && t.getRoot().width("240px").css({ margin: "5px 12px 12px 5px", float: n.Application.isRTL ? "right" : "left" }), h.push(t), s.append(t.getRoot()), t.evaluate(e) } var o = null, s, h = []; c(); a(); this.getRoot = function () { return o }; this.getBody = function () { return s }; this.setWidth = function (n) { o.width(n) }; this.dC = function () { while (h.length > 0) h.pop().dispose(); o.remove(); o = null; s = null; this.getBody = null; this.getRoot = null } } function l(i, r) { var f, s, e, o, h, u, c; for (this.record = r, f = t('<div class="vis-cv-card" data-recid=' + r.recid + " name = vc_" + r.recid + " ><\/div>"), s = t('<span class="glyphicon glyphicon-pencil vis-cv-card-edit vis-pull-right" data-recid=' + r.recid + "><\/span>"), f.append(s), e = null, h = 0; h < i.length; h++)e = i[h], u = r[e.getColumnName().toLowerCase()], o = e.getDisplayType(), n.DisplayType.IsLookup(o) ? u = e.getLookup().getDisplay(u) : n.DisplayType.YesNo == o ? u = u || u == "Y" ? n.Msg.getMsg("Yes") : u = n.Msg.getMsg("No") : n.DisplayType.IsDate(o) && (u = u ? o == n.DisplayType.Date ? Globalize.format(new Date(u), "d") : o == n.DisplayType.DateTime ? Globalize.format(new Date(u), "f") : Globalize.format(new Date(u), "t") : null), u || u == 0 || (u = " -- "), u = w2utils.encodeTags(u), c = "", c = n.Application.isRTL ? "<p><strong title='" + u + "'>" + u + "<\/strong> :" + e.getHeader() + "<\/p>" : "<p>" + e.getHeader() + ": <strong title='" + u + "'>" + u + "<\/strong><\/p>", f.append(t(c)); this.setColor = function (n, t) { n && f.css("background-color", n); t && f.css("color", n) }; s.on("touchstart", function () { t(this).css({ color: "gray" }) }); this.getRoot = function () { return f }; this.setWidth = function (n) { f.width(n) }; this.dC = function () { s.off("touchstart mouseover"); f.remove(); f = null; this.getRoot = null; this.dc = null } } function a() { function y(t, i) { var u = new google.maps.Marker({ position: t, animation: google.maps.Animation.DROP, map: n, title: i }); u.info = new google.maps.InfoWindow({ content: i }); u.info.open(n, u); google.maps.event.addListener(u, "click", function () { this.info.open(n, this) }); r.push(u) } function p(n, t, i) { window.setTimeout(function () { y(n, t) }, i) } function a(n) { for (var t = 0; t < r.length; t++)r[t].setMap(n), google.maps.event.clearListeners(r[t], "click"), r[t].info = null } function w() { a(null) } function v() { w(); r = [] } function b() { v(); n = null } function k() { n || (n = new google.maps.Map(f[0], c), d()) } function d() { var r = "", t = i.mapFields, n; if (t.length > 1) { for (n = 0; n < t.length; n++)r += "<option value=" + t[n].getColumnName() + " >" + t[n].getHeader() + "<\/option>"; o.html(r); o[0].selectedIndex = 0; nt() } else s.hide(), f.css("top", "0") } function g() { f = t('<div class="vis-mv-map">'); e = t('<div class="vis-apanel-busy vis-full-height">').hide(); s = t('<div class="vis-mv-header"> <select class="vis-mv-select vis-pull-right" /> <\/div>'); o = s.find(".vis-mv-select"); h.append(s).append(f).append(e); l && (c = { center: new google.maps.LatLng(26, 76), zoom: 4, mapTypeId: google.maps.MapTypeId.ROADMAP }) } function nt() { o.on("change", function () { i.setBusy(!0); i.curIndex = this.selectedIndex; i.setMapData(i.mapcols[i.curIndex]) }) } var n = null, h = t('<div class="vis-mv-main">'), f = "", e = "", r = [], c, u = null, o = null, s = null, i = this, l = window.google && google.maps ? !0 : !1; g(); this.setBusy = function (n) { n ? e.show() : e.hide() }; this.getRoot = function () { return h }; this.sizeChanged = function () { }; this.setMapData = function (t) { var e, r, f; if (l) { for (k(), v(), u = null, u = new google.maps.LatLngBounds, google.maps.event.trigger(n, "resize"), e = t.length, r = 0; r < e; r++)if (t[r].Latitude && t[r].Longitude) { f = null; try { f = new google.maps.LatLng(Number(t[r].Latitude), Number(t[r].Longitude)); p(f, t[r].msg, 100); u.extend(f); n.fitBounds(u) } catch (o) { console.log(o) } } n.fitBounds(u); i.setBusy(!1) } }; this.dc = function () { b(); h.remove(); this.cols = this.gc = this.aPanel = this.mapcols = null; this.mapFields = null; this.curIndex = 0; this.getRoot = null; this.dc = null } } var s = 43, v = 50, h = 40, ot = n.Logging.Level, y = n.Application.contextUrl, tt = y + "JsonData/JDataSetWithCode", it = y + "JsonData/ExecuteNonQuer", rt = y + "Form/JDataSet", g = function (t, i, r) { var e = r ? !0 : !1, f = { sql: t, page: 1, pageSize: 0 }, u; return i && (f.param = i), u = null, w(f, e, function (t) { u = (new n.DB.DataReader).toJson(t); r && r(u) }), u }, c = function (t, i, r) { var e = r ? !0 : !1, f = { sql: t, page: 1, pageSize: 0 }, u; return i && (f.param = i), u = null, w(f, e, function (t) { u = (new n.DB.DataSet).toJson(t); r && r(u) }), u }, p = function (t, i, r) { var f = r ? !0 : !1, e = { sql: t, page: 1, pageSize: 0 }, u; return i && (e.param = i), u = null, w(e, f, function (t) { i = (new n.DB.DataSet).toJson(t); var i = (new n.DB.DataSet).toJson(t); u = i.getTable(0).getRows().length > 0 ? i.getTable(0).getRow(0).getCell(0) : null; i.dispose(); i = null; f && r(u) }), u }, st = function (n, i, r) { var f = r ? !0 : !1, u = null, e = { sql: n.join("/"), param: i }; return t.ajax({ url: it + "ies", type: "POST", datatype: "json", contentType: "application/json; charset=utf-8", async: f, data: JSON.stringify(e) }).done(function (n) { u = n; r && r(n) }), u }, ut = function (t, i, r) { var e = r ? !0 : !1, f = { sql: t, page: 1, pageSize: 0 }, u; return i && (f.param = i), u = null, ft(f, e, function (t) { u = (new n.DB.DataReader).toJson(t); r && r(u) }), u }; u.prototype.setName = function (n) { this.name = n }; u.prototype.getName = function () { return this.name }; u.prototype.sizeChanged = function (t, i) { t || (t = n.Env.getScreenHeight()); i || (i = window.innerWidth); this.setSize(t); var r = this.isHeaderVisible ? s : 0; this.cPanel.sizeChanged(t - r, i) }; u.prototype.refresh = function () { return this.cPanel.refresh(), this }; u.prototype.keyDown = function (n) { return this.cPanel.keyDown && this.cPanel.keyDown(n), this }; u.prototype.navigateThroghtShortcut = function (n) { var i = t(document.activeElement), r; return i && i.length > 0 ? (i.trigger("change"), r = this, window.setTimeout(function () { r.cPanel.navigateThroghtShortcut && r.cPanel.navigateThroghtShortcut(n) }, 200)) : this.cPanel.navigateThroghtShortcut && this.cPanel.navigateThroghtShortcut(n), this }; u.prototype.initWindow = function (i, r, u, f, e) { var s, o; return this.cPanel = new n.APanel, s = n.Env.getWindowNo(), this.id = s + "_" + i, this.hid = f + "=" + i, o = this, n.AEnv.getGridWindow(s, i, function (i) { if (i.error != null) { n.ADialog.error(i.error); o.dispose(); o = null; return } var f = t.parseJSON(i.result); n.context.setContextOfWindow(t.parseJSON(i.wCtx), s); o.cPanel.initPanel(f, r, o, !1, e); o.sizeChanged(); o.cPanel.createSearchAutoComplete(); o.cPanel.selectFirstTab(r != null); n.MLookupCache.initWindowLookup(s); u && u(o.id, null, o.name, o.hid); o.onLoad && o.onLoad(); f = null; o = null }), this.AD_Window_ID = i, this.windowNo = s, this.getRootLayout().id = this.id, this.getRootLayout().attr("id", "AS_" + this.id), this.getContentGrid().append(this.cPanel.getRoot()), !0 }; u.prototype.setCFrameContent = function (n, t) { this.cPanel = n; this.windowNo = t; this.id = this.windowNo + "_CFrame"; this.getRootLayout().id = this.id; this.getRootLayout().attr("id", "AS_" + this.id); this.getContentGrid().append(this.cPanel.getRoot()) }; u.prototype.initForm = function (i, r, u, f) { var o, e; return this.cPanel = new n.AForm(n.Env.getScreenHeight() - s), o = n.Env.getWindowNo(), this.id = o + "_" + i, this.hid = u + "=" + i, e = this, n.dataContext.getFormDataString({ AD_Form_ID: i }, function (i) { if (i.error != null) { n.ADialog.error(i.error); e.dispose(); e = null; return } var u = t.parseJSON(i.result); if (u.IsError) { n.ADialog.error(u.Message); e.dispose(); e = null; return } if (e.setTitle(u.DisplayName), e.setName(u.DisplayName), !e.cPanel.openForm(u, e, o, f)) { e.dispose(); e = null; return } r && r(e.id, null, e.name, e.hid); u = null; e = null }), this.windowNo = o, this.getRootLayout().id = this.id, this.getRootLayout().attr("id", "AS_" + this.id), this.getContentGrid().append(this.cPanel.getRoot()), !0 }; u.prototype.initProcess = function (i, r, u, f, e) { var s, o; return this.cPanel = new n.AProcess(i, n.Env.getScreenHeight() - 0, f, e), s = n.Env.getWindowNo(), this.id = s + "_" + i, this.hid = u + "=" + i, this.hideHeader(!0), o = this, n.dataContext.getProcessDataString({ AD_Process_ID: i }, function (u) { if (u.error != null) { n.ADialog.error(u.error); o.dispose(); o = null; return } var f = t.parseJSON(u.result); if (f.IsError) { n.ADialog.error(f.Message); o.dispose(); o = null; return } if (o.setTitle(""), o.setName(f.Name), f.AD_Process_ID = i, !o.cPanel.init(f, o, s)) { o.dispose(); o = null; return } r && r(o.id, null, o.name, o.hid); f = null; o = null }), this.windowNo = s, this.getRootLayout().id = this.id, this.getRootLayout().attr("id", "AS_" + this.id), this.getContentGrid().append(this.cPanel.getRoot()), !0 }; u.prototype.refreshProcess = function (n, t, i, r, u) { return this.cPanel && (this.cPanel.disposeComponent(), this.cPanel = null), r = !0, this.initProcess(n, t, i, r, u), u.disposeComponent && (u.getParameterContainer().empty().append(this.cPanel.getParametersContainer()), this.cPanel.getContentTable().css("height", u.getContentContainer().height()), u.getContentContainer().empty().append(this.cPanel.getContentTable()).append(this.cPanel.getBusyIndicator()).css("position", "relative"), u.getToolbarContainer().empty().append(this.cPanel.getToolbar())), this.cPanel }; u.prototype.getProcessPanel = function () { return this.cPanel }; u.prototype.getTitile = function () { return this.title }; u.prototype.getAD_Window_ID = function () { return this.AD_Window_ID }; u.prototype.show = function (n, t) { return n.append(this.getRootLayout()), t && t(this.id, null, this.name, this.hid), !0 }; u.prototype.refreshData = function () { this.cPanel.refreshData() }; u.prototype.getId = function () { return this.id }; u.prototype.getWindowNo = function () { return this.windowNo }; u.prototype.dispose = function () { (!this.onClosed || this.onClosed(this.id, this.$layout, this.hid, this.AD_Window_ID)) && (this.onClosed = null, this.cPanel && this.cPanel.dispose(), this.cPanel = null, this.children = null, this.disposeComponent()) }; i.prototype.ACTION_NAME_FIRST = "First"; i.prototype.ACTION_NAME_LAST = "Last"; i.prototype.ACTION_NAME_PREV = "Previous"; i.prototype.ACTION_NAME_NEXT = "Next"; i.prototype.ACTION_NAME_NEW = "New"; i.prototype.ACTION_NAME_DELETE = "Delete"; i.prototype.ACTION_NAME_REFRESH = "Refresh"; i.prototype.ACTION_NAME_FIND = "Find"; i.prototype.ACTION_NAME_CHAT = "Chat"; i.prototype.ACTION_NAME_APPOINTMENT = "Appointment"; i.prototype.ACTION_NAME_ARCHIVE = "Archive"; i.prototype.keyDown = function (n) { if (n.altKey && this.curGC) { var t = this.aNew.getIsEnabled(); switch (n.keyCode) { case 78: t && this.actionPerformed(this.aNew.getAction()); break; case 83: this.ShortcutNavigation(this.aSave.getAction()); break; case 68: t && this.actionPerformed(this.aDelete.getAction()); break; case 90: t || this.actionPerformed(this.aIgnore.getAction()); break; case 80: t && this.actionPerformed(this.aPrint.getAction()); break; case 82: t && this.actionPerformed(this.aReport.getAction()); break; case 81: t && this.actionPerformed(this.aRefresh.getAction()); break; case 65: this.actionPerformed(this.aFind.getAction()); break; case 70: this.setSearchFocus(!0); break; case 37: this.ShortcutNavigation(this.aFirst.getAction()); break; case 39: this.ShortcutNavigation(this.aLast.getAction()); break; case 38: this.ShortcutNavigation(this.aPrevious.getAction()); break; case 40: this.ShortcutNavigation(this.aNext.getAction()); break; case 84: this.actionPerformed(this.aMulti.getAction()); break; case 86: this.actionPerformed(this.aCard.getAction()); break; case 88: this.$parentWindow.dispose(); break; case 33: if (n.ctrlKey) { this.aPageFirst.isEnabled && this.ShortcutNavigation(this.aPageFirst.getAction()); break } else { this.aPageUp.isEnabled && this.ShortcutNavigation(this.aPageUp.getAction()); break } case 34: if (n.ctrlKey) { this.aPageLast.isEnabled && this.ShortcutNavigation(this.aPageLast.getAction()); break } else { this.aPageDown.isEnabled && this.ShortcutNavigation(this.aPageDown.getAction()); break } }n.preventDefault(); n.stopPropagation() } else n.keyCode == 112 && (this.actionPerformed(this.aHelp.getAction()), n.preventDefault(), n.stopPropagation()) }; i.prototype.ShortcutNavigation = function (n) { var r = this, i = t(document.activeElement); i && i.length > 0 && i.trigger("change"); window.setTimeout(function () { r.actionPerformed(n) }, 200) }; i.prototype.sizeChanged = function (n, t) { this.setSize(n, t); this.vTabbedPane && this.vTabbedPane.sizeChanged(n - (v + h), t) }; i.prototype.refresh = function () { this.curGC && (this.curGC.vTable.resize(), this.curGC.vIncludedGC && this.curGC.vIncludedGC.vTable.refresh()) }; i.prototype.refreshData = function () { var n = this; window.setTimeout(function () { n.curTab.getAD_Tab_ID() == n.firstTabId.split("_")[1] ? n.curGC.dataRefreshAll() : n.selectFirstTab(!1, function () { n.curGC.dataRefreshAll() }); n.setBusy(!1) }, 100); this.setBusy(!0) }; i.prototype.addActions = function (t, i, r, u, f, e, o, s) { var t = new n.AppsAction({ action: t, parent: i, enableDisable: r, toggle: o, imageOnly: u, isSmall: f, onAction: e, toolTipText: s }); return t }; i.prototype.initPanel = function (i, r, u, f, e) { var c, v, s, p, k, b, o, y, w, nt, l, d, tt; this.$parentWindow = u; c = new n.GridWindow(i); this.gridWindow = c; this.createToolBar(); var h = u.getWindowNo(), g = this.ctx.isAutoNew(), a = c.getTabs(); for (this.ctx.setAutoCommit(h, this.ctx.isAutoCommit()), this.ctx.setAutoNew(h, g), this.ctx.setIsSOTrx(h, c.getIsSOTrx()), !g && c.getIsTransaction() && this.ctx.setAutoNew(h, !0), this.ctx.setContext(h, "WindowName", c.getName()), !r && e && (r = new n.Query, v = a[0].getKeyColumnName(), v.length == 0 && (v = a[0].getLinkColumnName()), v.length != 0 && (v.endsWith("_ID") ? r.addRestriction(v, n.Query.prototype.EQUAL, e) : r.addRestriction(v, n.Query.prototype.EQUAL, e))), p = [], k = {}, c.getHasPanel() && (b = c.getWindowWidth(), b && b > 0 && b < 75 ? this.setWidth(b, !0) : this.setWidth(75, !0)), o = 0; o < a.length; o++)y = h + "_" + a[o].getAD_Tab_ID(), p[o] = new n.AppsAction({ action: y, text: a[o].getName(), toolTipText: a[o].getDescription, textOnly: !0 }), s = a[o], o === 0 && (this.curTab = s, r != null && s.setQuery(r)), w = null, s.getIsSortTab() ? (nt = new n.VSortTab(h, s.getAD_Table_ID(), s.getAD_ColumnSortOrder_ID(), s.getAD_ColumnSortYesNo_ID(), s.getIsReadOnly(), y), w = nt, o == 0 && (firstTabId = y)) : (l = new n.GridController(!0, !0, y), l.initGrid(!1, h, this, s), o === 0 && (this.curGC = l, this.firstTabId = y), w = l, o === 0 && f && l.switchSingleRow(), s.getIncluded_Tab_ID() != 0 && (k[s.getIncluded_Tab_ID()] = l, o == 0 && (this.aParentDetail = new n.AParentDetail(l, this.getParentDetailPane()))), t.isEmptyObject(k) || (d = k[s.getAD_Tab_ID()], d != null && (tt = d.includeTab(l)))), this.vTabbedPane.addTab(y, s, w, p[o]), w && this.getLayout().append(w.getRoot()), p[o].onAction = this.onTabChange; this.setTabControl(p); p = null; this.ctx.setWindowContext(h, "WindowName", i._vo.DisplayName); u.setTitle(n.Env.getHeader(this.ctx, h)); u.setName(i._vo.DisplayName); this.curWindowNo = h; i = null; u = null }; i.prototype.selectFirstTab = function (n) { this.curGC.isZoomAction = n; this.curTab.setIsZoomAction(n); setTimeout(function (t) { t.curGC.isZoomAction = n; t.tabActionPerformed(t.firstTabId); t.setTabNavigation(); t = null }, 10, this) }; i.prototype.getIsUILocked = function () { return this.isLocked }; i.prototype.lockUI = function () { this.setBusy(!0, !1) }; i.prototype.unlockUI = function (t) { var r = t != null && t.getAD_Process_ID() != this.curTab.getAD_Process_ID(), i; r && (this.curTab.dataRefresh(), t.getIsTimeout() && n.context.setWindowContext(this.curWindowNo, "Processed", "Y"), this.curGC.dynamicDisplay(-1), this.setStatusLine(t.getSummary(), t.getIsError()), n.ProcessInfoUtil.setLogFromDB(t), i = t.getLogInfo(), i.length > 0 && (n.ADialog.info(t.getTitle(), !0, i, ""), this.setStatusLine(t.getSummary(), t.getIsError()))); this.setBusy(!1, r) }; i.prototype.actionPerformed = function (t) { if (!this.getIsUILocked()) { var i = this; setTimeout(function () { if (t.source instanceof n.Controls.VButton) { i.actionButton(t.source) || i.setBusy(!1, !0); return } i.actionPerformedCallback(i, t) }); this.setBusy(!0) } }; i.prototype.actionPerformedCallback = function (i, r) { var o, u, f, e, s, h; i.aFirst.getAction() === r ? (i.isDefaultFocusSet = !1, i.curGC.navigate(0)) : i.aPrevious.getAction() === r ? (i.isDefaultFocusSet = !1, i.curGC.navigateRelative(-1)) : i.aLast.getAction() === r ? (i.isDefaultFocusSet = !1, i.curGC.navigate(i.curTab.getRowCount() - 1)) : i.aNext.getAction() === r ? (i.isDefaultFocusSet = !1, i.curGC.navigateRelative(1)) : i.aMulti.getAction() === r ? (i.aMulti.setPressed(!i.curGC.getIsSingleRow()), i.curGC.switchRowPresentation()) : i.aCard.getAction() === r ? (i.aMulti.setPressed(!1), i.curGC.switchCardRow()) : i.aMap.getAction() === r ? (i.aMulti.setPressed(!0), i.curGC.switchMapRow()) : i.aPageUp.getAction() === r ? (i.isDefaultFocusSet = !1, i.curGC.navigatePage(-1)) : i.aPageFirst.getAction() === r ? (i.isDefaultFocusSet = !1, i.curGC.navigatePage(0)) : i.aPageDown.getAction() === r ? (i.isDefaultFocusSet = !1, i.curGC.navigatePage(1)) : i.aPageLast.getAction() === r ? (i.isDefaultFocusSet = !1, i.curGC.navigatePage("last")) : i.aRefresh.getAction() === r ? i.cmd_refresh() : i.aIgnore.getAction() === r ? i.cmd_ignore() : i.aSave.getAction() === r ? i.cmd_save(!0) : i.aNew.getAction() === r ? i.cmd_new(!1) : i.aCopy && i.aCopy.getAction() === r ? i.cmd_new(!0) : i.aDelete.getAction() === r ? i.cmd_delete() : i.aFind.getAction() === r ? i.cmd_finddialog() : i.aChat && i.aChat.getAction() === r ? i.cmd_chat() : i.aAttachment && i.aAttachment.getAction() === r ? i.cmd_attachment() : i.aHistory && i.aHistory.getAction() == r ? i.cmd_history() : i.aPreference.getAction() === r ? i.cmd_preference() : i.aHelp.getAction() === r ? i.cmd_help() : i.aCardDialog.getAction() === r ? i.cmd_cardDialog() : i.aAppointment && i.aAppointment.getAction() === r ? i.cmd_appointment() : i.aTask && i.aTask.getAction() === r ? i.cmd_task() : i.aSubscribe && i.aSubscribe.getAction() === r ? i.cmd_subscribe() : i.aImportMap && i.aImportMap.getAction() === r ? i.cmd_ImportMap() : i.aEmail && i.aEmail.getAction() === r ? i.cmd_email() : i.aLetter && i.aLetter.getAction() === r ? i.cmd_letter() : i.aSms && i.aSms.getAction() === r ? i.cmd_sms() : i.aInfo.getAction() === r ? i.cmd_infoWindow() : i.aZoomAcross && i.aZoomAcross.getAction() === r ? i.cmd_zoomAcross() : i.aRequest && i.aRequest.getAction() === r ? i.cmd_request() : i.aReport.getAction() === r ? i.cmd_report() : i.isPersonalLock && i.aLock.getAction() === r ? i.cmd_lock() : i.isPersonalLock && i.aRecAccess.getAction() === r ? i.cmd_recAccess() : i.aWorkflow != null && r === i.aWorkflow.getAction() ? i.curTab.getRecord_ID() > 0 && n.AEnv.startWorkflowProcess(i.curTab.getAD_Table_ID(), i.curTab.getRecord_ID()) : i.aPrint.getAction() === r ? i.cmd_print() : i.aCreateDocument && i.aCreateDocument.getAction() === r ? window.VADMS ? (u = new n.CFrame, o = new window.VADMS.editDocument(0, "", 0, "", 0, null, "", i.curTab.getAD_Window_ID(), i.curTab.getAD_Table_ID(), i.curTab.getRecord_ID()), u.setName(n.Msg.getMsg("VADMS_CreateDocument")), u.setTitle(n.Msg.getMsg("VADMS_CreateDocument")), u.hideHeader(!0), u.setContent(o), o.initialize(), u.show()) : n.ADialog.error("PleaseInstallDMSModule", !0, "") : i.aUploadDocument && i.aUploadDocument.getAction() === r ? window.VADMS ? window.VADMS.uploaddocument(0, i.curTab.getAD_Window_ID(), i.curTab.getAD_Table_ID(), i.curTab.getRecord_ID()) : n.ADialog.error("PleaseInstallDMSModule", !0, "") : i.aViewDocument && i.aViewDocument.getAction() === r ? window.VADMS ? (u = new n.CFrame, f = new window.VADMS.DocumentManagementSystem, u.setName(n.Msg.getMsg("VADMS_Document")), u.setTitle(n.Msg.getMsg("VADMS_Document")), u.hideHeader(!0), f.setWindowNo(n.Env.getWindowNo()), f.setWindowID(i.curTab.getAD_Window_ID()), f.setTableID(i.curTab.getAD_Table_ID()), f.setRecordID(i.curTab.getRecord_ID()), f.setWindowName(i.gridWindow.getName()), u.setContent(f), f.initialize(), u.show()) : n.ADialog.error("PleaseInstallDMSModule", !0, "") : i.aAttachFrom && i.aAttachFrom.getAction() === r ? window.VADMS ? (e = i, s = n.context.getContext("VADMS_Document_ID"), s.length > 0 && (h = { docID: s, winID: i.curTab.getAD_Window_ID(), tableID: i.curTab.getAD_Table_ID(), recID: i.curTab.getRecord_ID() }, t.ajax({ url: n.Application.contextUrl + "JsonData/AttachFrom", dataType: "json", data: h, success: function (t) { JSON.parse(t) == "OK" ? (e.curTab.loadDocuments(), e.aViewDocument.setPressed(e.curTab.hasDocument()), n.ADialog.confirm("AttachWithOther", !0, "", "Confirm", function (t) { t || n.context.setContext("VADMS_Document_ID", 0) }), e = null) : n.ADialog.error("NotAttached", !0, "") } }))) : n.ADialog.error("PleaseInstallDMSModule", !0, "") : i.aMarkToExport && i.aMarkToExport.getAction() === r ? i.cmd_markToExport() : i.aShowSummaryLevel.getAction() == r && i.ShowSummaryNodes(); i.setBusy(!1); i = null }; i.prototype.actionButton = function (t) { var e = !1, o = !1, s = null, u = t.getColumnName(), i = n.context, r = this, h, c, f; if (u.equals("Record_ID")) { h = i.getContextAsInt(this.curWindowNo, "AD_Table_ID"); c = i.getContextAsInt(this.curWindowNo, "Record_ID"); n.AEnv.zoom(h, c); return } return f = !0, this.curTab.needSave(!0, !1) && (f = !1, this.cmd_save(!0, function (n) { n && r.actionButtonCallBack(t, e, o, s, u, i, r) })), f ? r.actionButtonCallBack(t, e, o, s, u, i, r) : void 0 }; i.prototype.actionButtonCallBack = function (i, r, u, f, e, o, s) { var d = this.curTab.getAD_Table_ID(), h = this.curTab.getRecord_ID(), g, v, c, w, l, a, nt, y, p, k, tt, it; if (h == -1 && this.curTab.getKeyColumnName().equals("AD_Language") && (h = o.getContextAsInt(this.curWindowNo, "AD_Language_ID")), h == -1 && (i.getProcess_ID() == 306 || i.getProcess_ID() == 307) && (g = this.curTab.getValue("AD_ChangeLog_ID"), h = g), h == -1 && this.curTab.getKeyColumnName().equals("EntityType") && (h = this.curTab.getValue("AD_EntityType_ID")), h == -1 && this.curTab.getKeyColumnName().toUpperCase().endsWith("_ID")) { n.ADialog.error("SaveErrorRowNotFound", !0, ""); return } if (e.equals("PaymentRule")) { v = new n.VPayment(this.curWindowNo, this.curTab, i); v.show(); v.init(); v.onClose = function () { v.isInitOK() && (s.curGC.dynamicDisplay(i.getName()), s.cmd_save(!1), b(i, d, h, o, s, r, u)) }; return } if (e.equals("DocAction")) { c = new n.VDocAction(this.curWindowNo, this.curTab, h); c.show(); c.onClose = function () { if (c.getNumberOfOptions() == 0) { c.dispose(); s.log.info("DocAction - No Options"); return } if (!c.isStartProcess()) { c.dispose(); return } u = c.isBatch(); r = !0; b(i, d, h, o, s, r, u); c.dispose(); s = null }; return } if (e.equals("CreateFrom")) { if (w = !1, (this.curTab.getAD_Window_ID() == 341 || this.curTab.getAD_Window_ID() == 170) && (window.MMPM ? (a = MMPM.Requisition.prototype.create(this.curTab.getAD_Window_ID(), this.curTab.getRecord_ID()), w = !0) : window.DTD001 && (a = DTD001.Requisition.prototype.create(this.curTab.getAD_Window_ID(), this.curTab.getRecord_ID()), w = !0)), w) return; if (l = n.VCreateFrom.prototype.create(this.curTab), l != null) { l.isInitOK() ? (l.showDialog(), l.onClose = function () { l.dispose(); this.curTab.dataRefresh() }, l = null) : l.dispose(); return } } else { if (e.equals("GenerateSticker")) { window.DTD001 && (a = DTD001.StickerProduct.prototype.create(this.curTab.getAD_Window_ID(), this.curTab.getRecord_ID())); return } if (e.equals("DTD001_GenerateSticker")) { window.DTD001 && (a = DTD001.MRProductSticker.create(this.curTab.getAD_Window_ID(), this.curTab.getRecord_ID(), this.curTab.getTabLevel())); return } if (e.equals("BGT01_CreateLinePo")) { window.BGT01 && BGT01.CreateLineMovement(this.curTab.getAD_Window_ID(), this.curTab.getAD_Tab_ID(), this.curTab.getRecord_ID()); return } if (e == "Posted" && n.MRole.getDefault().getIsShowAcct()) { if (nt = n.context.getWindowContext(this.curWindowNo, "Processed"), nt != "Y" && (y = n.context.getWindowContext(this.curWindowNo, "DocStatus"), DocActionVariables.STATUS_Completed != y && DocActionVariables.STATUS_Closed != y && DocActionVariables.STATUS_Reversed != y && DocActionVariables.STATUS_Voided != y)) { n.ADialog.info(n.Msg.getMsg("PostDocNotComplete")); return } return p = this.curTab.getValue("Posted"), p != null && p == "Y" ? (k = new n.AcctViewer(n.context.getAD_Client_ID(), this.curTab.getAD_Table_ID(), this.curTab.getRecord_ID(), this.curWindowNo, this.curTab.getAD_Window_ID()), k != null && (this.setBusy(!1), k.showDialog()), k = null) : n.ADialog.confirm("PostImmediate?", !0, "", "Confirm", function (i) { var r = s, u; if (i) r.setBusy(!0, !0), u = p != null && p != "N", et(function (i) { var f = !1; if (i == "Yes" && (f = !0), window.FRPT && f) { var e = Number(n.context.getWindowTabContext(r.curWindowNo, 0, "AD_Org_ID")), o = r.curTab.getAD_Window_ID(), s = Number(n.context.getWindowTabContext(r.curWindowNo, 0, "C_DocType_ID")), h = FRPT.PostingLogic(r.curWindowNo, r.curTab.getAD_Table_ID(), r.curTab.getRecord_ID(), u, e, o, s); r.curGC.dataRefresh(); r.setBusy(!1, !0); return } t.ajax({ url: n.Application.contextUrl + "Posting/PostImmediate", dataType: "json", data: { AD_Client_ID: n.context.getAD_Client_ID(), AD_Table_ID: r.curTab.getAD_Table_ID(), Record_ID: r.curTab.getRecord_ID(), force: u }, error: function () { r.setBusy(!1, !0); n.ADialog.info("ERRORGettingPostingServer") }, success: function (t) { t.result != "OK" ? (r.setBusy(!1, !0), n.ADialog.info(t.result)) : (r.setBusy(!1, !0), r.curGC.dataRefresh()) } }) }); else return r.setBusy(!1, !0), !1 }), !1 } if (e.equals("SendNewEMail")) return } if (i.AD_Process_ID > 0) return tt = b(i, d, h, o, s), s = null, tt; i.AD_Form_ID > 0 && (n.MRole.getFormAccess(i.AD_Form_ID) ? it = new n.WForm(n.Env.getScreenHeight(), i.AD_Form_ID, this.curTab, this.curWindowNo) : n.ADialog.warn("AccessTableNoView")) }; i.prototype.tabActionPerformed = function (t) { var i, h, u, c, o; if (!this.vTabbedPane.getIsTabChanged(t)) return console.log("tabNotChange"), !1; var l = !1, f = !1, e = this.vTabbedPane.getTabElement(t), r = this.curST || this.curGC, s = null; if (this.toggleASearchIcons(!1, !1), this.setAdvancedSerachText(!0, ""), i = this, !this.vTabbedPane.getIsWorkbench()) { if (this.curWinTab = this.vTabbedPane, h = this.curWinTab.getSelectedIndex(), l = h < this.curTabIndex, u = null, c = null, e instanceof n.VSortTab ? (c = e, f = !0) : u = e, o = !0, this.curGC != null) { if (this.curTab.needSave(!0, !1)) if (this.curTab.needSave(!0, !0)) if (this.ctx.isAutoCommit(this.curWindowNo)) { if (!this.curTab.dataSave(!0)) return this.vTabbedPane.restoreTabChange(), this.setBusy(!1, !0), !1 } else o = !1, n.ADialog.confirm("SaveChanges?", !0, this.curTab.getCommitWarning(), "Confirm", function (n) { if (n) { if (!i.curTab.dataSave(!0)) return i.vTabbedPane.restoreTabChange(), i.setBusy(!1, !0), !1 } else i.curTab.dataIgnore(); r = i.curGC; s = i.curGC; i.curGC = null; i.curST != null && (i.curST.saveData(), i.curST.unRegisterAPanel(), r = i.curST, i.curST = null); i.curTabIndex = h; f || (i.curGC = u); i.tabActionPerformedCallback(t, l, f, e, r, s, u, c) }); else i.curTab.dataIgnore(); o && (r = this.curGC, s = this.curGC, this.curGC = null) } o && (this.curST != null && (this.curST.saveData(), this.curST.unRegisterAPanel(), r = this.curST, this.curST = null), this.curTabIndex = h, f || (this.curGC = u)) } return o && i.tabActionPerformedCallback(t, l, f, e, r, s, u, c), !0 }; i.prototype.tabActionPerformedCallback2 = function (n, t) { n = this.curGC; t = this.curGC; this.curGC = null }; i.prototype.tabActionPerformedCallback3 = function (n, t, i, r) { this.curST != null && (this.curST.saveData(), this.curST.unRegisterAPanel(), n = this.curST, this.curST = null); this.curTabIndex = r; t || (this.curGC = i) }; i.prototype.tabActionPerformedCallback = function (t, i, r, u, f, e, o, s) { if (this.setSelectedTab(t), r) this.curST = s, s.registerAPanel(this), s.loadData(); else { if (o.activate(e), e && e.detachDynamicAction(), this.curTab = o.getMTab(), this.setDynamicActions(), !o.isZoomAction && this.curTab.getTabLevel() > 0) { var h = new n.Query; this.curTab.query = h } i && this.curTab.getIsCurrent() ? (this.curTab.getTabLevel() == 0 ? this.curTab.searchText ? this.setAdvancedSerachText(!1, this.curTab.searchText) : this.curTab.hasSavedAdvancedSearch && this.toggleASearchIcons(!0, !1) : this.curTab.searchText ? this.setAdvancedSerachText(!1, this.curTab.searchText) : this.curTab.hasSavedAdvancedSearch && this.toggleASearchIcons(!0, !1), o.dataRefresh()) : (this.curTab.getTableModel().setCurrentPage(1), (!this.curGC.onDemandTree || o.isZoomAction) && (this.curTab.searchText = "", this.setDefaultSearch(o), o.query(this.curTab.getOnlyCurrentDays(), 0, !1))); this.curGC.onDemandTree ? this.aShowSummaryLevel.show() : this.aShowSummaryLevel.hide() } r ? (this.aMulti.setPressed(!1), this.aMulti.setEnabled(!1), this.aCard.setEnabled(!1), this.aCardDialog.setEnabled(!1), this.aNew.setEnabled(!1), this.aDelete.setEnabled(!1), this.aFind.setEnabled(!1), this.aRefresh.setEnabled(!1), this.aNext.setEnabled(!1), this.aLast.setEnabled(!1), this.aFirst.setEnabled(!1), this.aPrevious.setEnabled(!1), this.aPageFirst.setEnabled(!1), this.aPageUp.setEnabled(!1), this.aPageLast.setEnabled(!1), this.aPageDown.setEnabled(!1)) : (this.aMulti.setEnabled(!0), this.aMulti.setPressed(this.curGC.getIsSingleRow() || this.curGC.getIsMapRow()), this.aCard.setEnabled(!0), this.aCardDialog.setEnabled(!0), this.aFind.setEnabled(!0), this.aRefresh.setEnabled(!0)); f.setVisible(!1); u.setVisible(!0); this.curTab.getHasPanel() ? (this.setCurrentTabPanel(), this.setTabPanelIcons(), this.showTabPanel(!0)) : (this.setTabPanelIcons(), this.showTabPanel(!1)); this.refresh(); this.setTabNavigation(); this.aParentDetail && this.aParentDetail.evaluate(u); f = u = null; this.curTab.getAD_Process_ID() == 0 ? this.aPrint.setEnabled(!1) : this.aPrint.setEnabled(!0); this.curTab.getIsMapView() ? this.aMap.show() : this.aMap.hide() }; i.prototype.setDefaultSearch = function (t) { var i = this, u = [], r, e, f, o; if (u[0] = new n.DB.SqlParam("@AD_Tab_ID", this.curTab.getAD_Tab_ID()), u[1] = new n.DB.SqlParam("@AD_User_ID", this.ctx.getAD_User_ID()), u[2] = new n.DB.SqlParam("@AD_Tab_ID1", this.curTab.getAD_Tab_ID()), u[3] = new n.DB.SqlParam("@AD_User_ID1", this.ctx.getAD_User_ID()), u[4] = new n.DB.SqlParam("@AD_Client_ID", this.ctx.getAD_Client_ID()), u[5] = new n.DB.SqlParam("@AD_Tab_ID2", this.curTab.getAD_Tab_ID()), u[6] = new n.DB.SqlParam("@AD_Table_ID", this.curTab.getAD_Table_ID()), r = c("VIS_117", u), r && r.tables[0].rows && r.tables[0].rows.length > 0) if (i.curTab.hasSavedAdvancedSearch = !0, i.curTab.getTabLevel() != 0 || t.isZoomAction) i.toggleASearchIcons(!0, !1); else { for (e = !1, f = 0; f < r.tables[0].rows.length; f++)r.tables[0].rows[f].cells.ad_defaultuserquery_id > 0 && (e = !0, i.setAdvancedSerachText(!1, r.tables[0].rows[f].cells.name), o = new n.Query(i.curTab.getTableName(), !1), o.addRestriction(r.tables[0].rows[f].cells.code), i.curTab.setQuery(o), i.defaultSearch = !1, i.curTab.searchText = r.tables[0].rows[f].cells.name); !i.curTab.hasSavedAdvancedSearch; i.toggleASearchIcons(!0, e) } else i.toggleASearchIcons(!1, !1), i.setAdvancedSerachText(!0, "") }; i.prototype.dataStatusChanged = function (t) { var o = t.getMessage(), p = this.curTab.getIsQueryActive() || this.curTab.getOnlyCurrentDays() > 0, i, s, e, y, h, c, l, a, v; p && (o = "[ " + o + " ]"); this.statusBar.setStatusDB(o, t); (t.getAD_Message() != null || t.getInfo() != null) && (i = new StringBuilder, s = t.getMessage(), s != null && s.length > 0 && i.append(n.Msg.getMsg(t.getAD_Message())), e = t.getInfo(), e != null && e.length > 0 && (i.length() > 0 && !i.endsWith(":") && i.append(": "), i.append(e)), i.length() > 0 && (y = i.indexOf("\n"), y != -1 && i.replace("\n", " - "), this.setStatusLine(i.toString(), t.getIsError()))); t.getIsError() && !t.getIsConfirmed() ? (n.ADialog.error(t.getAD_Message(), !0, t.getInfo()), t.setConfirmed(!0), this.errorDisplayed = !0) : t.getIsWarning() && !t.getIsConfirmed() && (n.ADialog.warn(t.getAD_Message(), !0, t.getInfo()), t.setConfirmed(!0)); h = t.getIsFirstRow(); this.aFirst.setEnabled(!h); this.aPrevious.setEnabled(!h); c = t.getIsLastRow(); this.aNext.setEnabled(!c); this.aLast.setEnabled(!c); l = t.getIsFirstPage(); this.aPageFirst.setEnabled(!l); this.aPageUp.setEnabled(!l); a = t.getIsLastPage(); this.aPageLast.setEnabled(!a); this.aPageDown.setEnabled(!a); var r = t.getIsChanged() || t.getIsInserting(), u = this.curTab.getIsReadOnly(), f = !u; f && (f = this.curTab.getIsInsertRecord()); this.aNew.setEnabled(!r && f); this.aCopy && this.aCopy.setEnabled(!r && f); this.aRefresh.setEnabled(!r); this.aDelete.setEnabled(!r && !u && t.getCurrentRow() > -1); u && this.curTab.getIsAlwaysUpdateField() && (u = !1); this.aIgnore.setEnabled(r && !u); this.aSave.setEnabled(r && !u); this.aCardDialog.setEnabled(!r); t.getTotalRows() == 0 && f && (this.aNew.setEnabled(!0), this.aDelete.setEnabled(!1)); this.aMulti.setPressed(this.curGC.getIsSingleRow() || this.curGC.getIsMapRow()); this.aChat && this.aChat.setPressed(this.curTab.hasChat()); this.aAttachment && this.aAttachment.setPressed(this.curTab.hasAttachment()); this.aMarkToExport && this.aMarkToExport.setPressed(this.curTab.hasMarked()); this.aSubscribe && this.aSubscribe.setPressed(this.curTab.HasSubscribed()); this.isPersonalLock && (this.aLock.setEnabled(!0), this.aLock.setPressed(this.curTab.getIsLocked()), this.aRecAccess.setEnabled(!0)); this.curTab.getRecord_ID() == -1 ? (this.aChat && this.aChat.setEnabled(!1), this.aAttachment && this.aAttachment.setEnabled(!1), this.aSubscribe && this.aSubscribe.setEnabled(!1), this.aHistory && this.aHistory.setEnabled(!1), this.aEmail && this.aEmail.setEnabled(!1), this.aLetter && this.aLetter.setEnabled(!1), this.aSms && this.aSms.setEnabled(!1), this.aFaxEmail && this.aFaxEmail.setEnabled(!1), this.aCreateDocument && this.aCreateDocument.setEnabled(!1), this.aUploadDocument && this.aUploadDocument.setEnabled(!1), this.aViewDocument && this.aViewDocument.setEnabled(!1), this.aAttachFrom && this.aAttachFrom.setEnabled(!1), this.aZoomAcross && this.aZoomAcross.setEnabled(!1), this.aMarkToExport && this.aMarkToExport.setEnabled(!1), this.aArchive && this.aArchive.setEnabled(!1), this.aEmailAttach && this.aEmailAttach.setEnabled(!1), this.aAppointment && this.aAppointment.setEnabled(!1), this.aTask && this.aTask.setEnabled(!1), this.aRequest && this.aRequest.setEnabled(!1), this.aWorkflow && this.aWorkflow.setEnabled(!1), this.aCopy && this.aCopy.setEnabled(!1), this.aLock && this.aLock.setEnabled(!1), this.aRecAccess && this.aRecAccess.setEnabled(!1)) : (this.aChat && this.aChat.setEnabled(!0), this.aAttachment && this.aAttachment.setEnabled(!0), this.aSubscribe && this.aSubscribe.setEnabled(!0), this.aHistory && this.aHistory.setEnabled(!0), this.aEmail && this.aEmail.setEnabled(!0), this.aLetter && this.aLetter.setEnabled(!0), this.aSms && this.aSms.setEnabled(!0), this.aFaxEmail && this.aFaxEmail.setEnabled(!0), this.aImportMap && this.aImportMap.setEnabled(!0), this.aCreateDocument && this.aCreateDocument.setEnabled(!0), this.aUploadDocument && this.aUploadDocument.setEnabled(!0), this.aViewDocument && this.aViewDocument.setEnabled(!0), this.aAttachFrom && this.aAttachFrom.setEnabled(!0), this.aZoomAcross && this.aZoomAcross.setEnabled(!0), this.aMarkToExport && this.aMarkToExport.setEnabled(!0), this.aArchive && this.aArchive.setEnabled(!0), this.aEmailAttach && this.aEmailAttach.setEnabled(!0), this.aAppointment && this.aAppointment.setEnabled(!0), this.aTask && this.aTask.setEnabled(!0), this.aRequest && this.aRequest.setEnabled(!0), this.aWorkflow && this.aWorkflow.setEnabled(!0), this.aCopy && this.aCopy.setEnabled(!0), this.aLock && this.aLock.setEnabled(!0)); t.getIsInserting() || (v = n.GridTab.prototype.getTrxInfo(this.curTab.getTableName(), n.context, this.curTab.getWindowNo(), this.curTab.getTabNo()), v != null && this.statusBar.setInfo(v)); this.curWinTab == this.vTabbedPane && this.curWinTab.evaluate(null) }; i.prototype.setStatusLine = function (n, t) { this.statusBar.setStatusLine(n, t) }; i.prototype.cmd_refresh = function () { this.cmd_save(!1); this.curGC.dataRefreshAll() }; i.prototype.cmd_ignore = function () { this.curGC.dataIgnore() }; i.prototype.cmd_help = function () { var t = new n.Apps.help(this.gridWindow) }; i.prototype.cmd_cardDialog = function () { var t = new n.CVDialog(this); t.show() }; i.prototype.cmd_save = function (t, i) { var f, u, r; if (this.curST != null && (t = !1), this.errorDisplayed = !1, this.curST != null) { this.curST.saveData(); this.aSave.setEnabled(!1); return } return f = !0, this.curTab.getCommitWarning().length > 0 && this.curTab.needSave(!0, !1) && (f = !1, u = this, n.ADialog.confirm("SaveChanges?", !0, this.curTab.getCommitWarning(), "Confirm", function (n) { if (n) { var i = u.curGC.dataSave(t); t && !i && !u.errorDisplayed; this.curGC.refreshTabPanelData(this.curTab.getRecord_ID()); t && u.curGC.dynamicDisplay(-1) } }), i && i(r)), f ? (r = this.curGC.dataSave(t), t && !r && !this.errorDisplayed, t && this.curGC.dynamicDisplay(-1), i && i(r), this.curGC.refreshTabPanelData(this.curTab.getRecord_ID()), r) : void 0 }; i.prototype.cmd_new = function (n) { this.curTab.getIsInsertRecord() && this.curGC.dataNew(n) }; i.prototype.cmd_delete = function () { var t, i; if (!this.curTab.getIsReadOnly()) { if (t = this.curGC.canDeleteRecords(), t.length > 0) { n.ADialog.error("CannotDelete", !0, " [ " + t.join(",") + "]"); return } i = this; n.ADialog.confirm("DeleteRecord?", !0, "", "Confirm", function (n) { n && i.curGC.dataDelete() }) } }; i.prototype.cmd_find = function (n) { var t, r, i, u; if (this.curTab) { if (!this.defaultSearch) { this.defaultSearch = !0; return } this.setBusy(!0); t = null; n && n.trim() !== "" && (n = "%" + n + "%", t = this.curTab.getSearchQuery(n)); r = 0; i = !1; this.curTab.getTableModel().setCurrentPage(1); this.isSummaryVisible ? this.curTab.setShowSummaryNodes(!0) : this.curTab.setShowSummaryNodes(!1); this.curGC.skipRowInserting(!0); t != null && t.getIsActive() ? (this.curTab.setQuery(t), this.curGC.query(0, 0, i)) : (u = 0, this.curTab.setQuery(null), this.curGC.query(r, u, i)) } }; i.prototype.cmd_chat = function () { var o = this.curTab.getRecord_ID(), r, u, f, t, i, e; if (o == -1) { this.aChat.setEnabled(!1); return } for (r = null, u = null, f = 0; f < this.curTab.getFieldCount(); f++)if (t = this.curTab.getField(f), t.getIsKey() && (r = t.getHeader()), (t.getColumnName().toString() == "Name" || t.getColumnName().toString() == "DocumentNo") && t.getValue() != null && t.getValue() != "" && (u = t.getValue()), r != null && u != null) break; i = this; e = new n.Chat(o, this.curTab.getCM_ChatID(), this.curTab.getAD_Table_ID(), r + ": " + u, this.curWindowNo); e.onClose = function () { i.curTab.loadChats(); i.aChat.setPressed(i.curTab.hasChat()); i = null }; e.show() }; i.prototype.cmd_appointment = function () { var t = this.curTab.getRecord_ID(), i = this.curTab.getAD_Table_ID(); t != -1 && n.AppointmentsForm.init(i, t, 0, 0, !1, !0) }; i.prototype.cmd_task = function () { var t = this.curTab.getRecord_ID(), i = this.curTab.getAD_Table_ID(); t != -1 && n.AppointmentsForm.init(i, t, 0, 0, !0) }; i.prototype.cmd_letter = function () { var r = this.curTab.getRecord_ID(), i, t; if (r == -1) { this.aLetter.setEnabled(!1); return } i = new n.Email("", this.curTab, this.curGC, r, !1); t = new n.CFrame; t.setName(n.Msg.getMsg("Letter")); t.setTitle(n.Msg.getMsg("Letter")); t.hideHeader(!0); t.setContent(i); t.show(); i.initializeComponent() }; i.prototype.cmd_email = function () { var r = this.curTab.getRecord_ID(), i, t; if (r == -1) { this.aEmail.setEnabled(!1); return } i = new n.Email("", this.curTab, this.curGC, r, !0); t = new n.CFrame; t.setName(n.Msg.getMsg("EMail")); t.setTitle(n.Msg.getMsg("EMail")); t.hideHeader(!0); t.setContent(i); t.show(); i.initializeComponent() }; i.prototype.cmd_report = function () { var i, t, r, u, e, s, f, h, o; if (!n.MRole.getDefault().getIsCanReport(this.curTab.getAD_Table_ID())) { n.ADialog.warn("AccessCannotReport"); return } if (this.curTab.needSave(!0, !1)) { this.cmd_save(!0); return } for (i = null, i = this.curTab.query && this.curTab.query.list.length > 0 ? this.curTab.query : new n.Query(this.curTab.getTableName()), i.tableName = this.curTab.getTableName(), t = this.curTab.getLinkColumnName(), t.length == 0 && (t = this.curTab.getKeyColumnName()), r = null, u = null, e = 0, s = this.curTab.getFieldCount(); e < s; e++)if (f = this.curTab.getField(e), f.getIsKey() && (r = f.getHeader()), (f.getColumnName() == "Name" || f.getColumnName() == "DocumentNo") && f.getValue() != null && (u = f.getValue()), r != null && u != null) break; h = this.curTab.getParentColumnNames().length == 0; t.length != 0 && (h && (this.curTab.getLinkColumnName() == null || this.curTab.getLinkColumnName() == "") || (t.endsWith("_ID") ? r == null && u == null ? i.addRestriction(t, n.Query.prototype.EQUAL, n.context.getContextAsInt(this.curWindowNo, t)) : i.addRestriction(t, n.Query.prototype.EQUAL, n.context.getContextAsInt(this.curWindowNo, t), r, u) : r == null && u == null ? i.addRestriction(t, n.Query.prototype.EQUAL, n.context.getContext(this.curWindowNo, t)) : i.addRestriction(t, n.Query.prototype.EQUAL, n.context.getContext(this.curWindowNo, t), r, u))); o = this.curGC.onDemandTree ? this.isSummaryVisible ? new n.AReport(this.curTab.getAD_Table_ID(), i, this.curTab.getAD_Tab_ID(), this.curWindowNo, this.curTab, this.curGC.treeID, this.curGC.treeNodeID, !0) : new n.AReport(this.curTab.getAD_Table_ID(), i, this.curTab.getAD_Tab_ID(), this.curWindowNo, this.curTab, this.curGC.treeID, this.curGC.treeNodeID, !1) : new n.AReport(this.curTab.getAD_Table_ID(), i, this.curTab.getAD_Tab_ID(), this.curWindowNo, this.curTab, 0, 0, !1) }; i.prototype.cmd_print = function () { var i = this.curGC.getSelectedRows(), r, f, o, c, s, e, t, h, u; if (i.length == 0) { n.ADialog.info("SelectRecord"); return } if (r = this.curTab.getAD_Process_ID(), r != 0) if (f = "VIS_118", o = [], o[0] = new n.DB.SqlParam("@AD_Process_ID", r), c = p(f, o), f = "VIS_119", s = p(f), i.length > 1 && c > 0 && s && s.toString() > "1.0.0.3") { if (this.curTab.needSave(!0, !1)) { this.cmd_save(!0); return } for (e = "", t = 0; t < i.length; t++)t == 0 ? e = i[t][this.curTab.getKeyColumnName().toLower()] : e += "," + i[t][this.curTab.getKeyColumnName().toLower()]; u = new n.APrint(r, this.curTab.getAD_Table_ID(), 0, this.curWindowNo, e, this.curTab, !0); u.start(this.aPrint.getListItmIT()) } else { if (h = this.curTab.getRecord_ID(), h == -1) { n.ADialog.info(n.Msg.getMsg("SelectRecord")); return } if (this.curTab.needSave(!0, !1)) { this.cmd_save(!0); return } u = new n.APrint(r, this.curTab.getAD_Table_ID(), h, this.curWindowNo, null, this.curTab); u.start(this.aPrint.getListItmIT()) } }; i.prototype.cmd_sms = function () { var r = this.curTab.getRecord_ID(), i, t; if (r == -1) { this.aSms.setEnabled(!1); return } i = new n.Sms(this.curTab, this.curGC, r, !1); t = new n.CFrame; t.setName(n.Msg.getMsg("Sms")); t.setTitle(n.Msg.getMsg("Sms")); t.hideHeader(!0); t.setContent(i); t.show(); i.initializeComponent() }; i.prototype.cmd_subscribe = function () { var i = this.curTab.getRecord_ID(), t, r; if (i == -1) { this.aSubscribe.setEnabled(!1); return } t = this; r = function () { t.curTab.loadSubscribe(); t.aSubscribe.setPressed(t.curTab.HasSubscribed()) }; n.dataContext.subscribeUnsubscribeRecords(this.curTab.getCM_SubScribedID(), this.curTab.getAD_Window_ID(), i, this.curTab.getAD_Table_ID(), r) }; i.prototype.cmd_ImportMap = function () { if (window.VDIU) { if (this.curTab.getIsReadOnly()) { n.ADialog.warn("ReadOnly"); return } var i = new VDIU.ImportExcel(this.curTab.getAD_Window_ID(), this.gridWindow.getName()), t = new n.CFrame; t.setName(n.Msg.getMsg("Import")); t.setTitle(n.Msg.getMsg("Import")); t.setContent(i); t.show(); i.initialize() } else n.ADialog.error("PleaseInstallExcelImportModule") }; i.prototype.cmd_attachment = function () { if (this.curTab.getRecord_ID() < 1) { this.aAttachment.setEnabled(!1); return } var t = this, i = new n.attachmentForm(0, 0, this.curTab.getAD_Table_ID(), this.curTab.getRecord_ID(), ""); i.show(); i.onClose = function () { t.curTab.loadAttachments(); t.aAttachment.setPressed(t.curTab.hasAttachment()); t = null } }; i.prototype.cmd_history = function () { var t = null, i = 0, r = 0; (Object.keys(this.curGC.getColumnNames()).indexOf("C_BPartner_ID") > 0 || this.curTab.getField("C_BPartner_ID") != null && this.curTab.getField("C_BPartner_ID").getValue() > 0) && (i = this.curTab.getField("C_BPartner_ID").getValue()); (Object.keys(this.curGC.getColumnNames()).indexOf("AD_User_ID") > 0 || this.curTab.getField("AD_User_ID") != null && this.curTab.getField("AD_User_ID").getValue() > 0) && (r = this.curTab.getField("AD_User_ID").getValue()); t = new n.AttachmentHistory(this.curTab.getAD_Table_ID(), this.curTab.getRecord_ID(), i, r, this.curTab.getKeyColumnName()); t.show() }; i.prototype.cmd_finddialog = function () { var i = new n.Find(this.curWindowNo, this.curTab, 0), t = this, r = ""; i.onClose = function () { var e, o; if (i.getIsOKPressed() || i.needRefresh()) { t.setAdvancedSerachText(!0, ""); t.curTab.searchText = ""; t.isSummaryVisible ? t.curTab.setShowSummaryNodes(!0) : t.curTab.setShowSummaryNodes(!1); var u = i.getQuery(), s = i.getCurrentDays(), f = i.getIsCreated(); r = i.getSavedQueryName(); t.curTab.userQueryID = i.getSavedID(); i.dispose(); i = null; t.curTab.getTableModel().setCurrentPage(1); u != null && u.getIsActive() ? (t.curTab.setQuery(u), t.curGC.query(0, 0, f)) : u != null && (e = n.MRole.getDefault().getMaxQueryRecords(), t.curTab.setQuery(null), t.curGC.query(s, e, f)); o = t.curTab.getIsQueryActive() || t.curTab.getOnlyCurrentDays() > 0; t.aFind.setPressed(o) } t.refreshSavedASearchList(!1, r); t = null }; i.show() }; i.prototype.cmd_preference = function () { var t = new n.Framework.UserPreference; t.load(); t.showDialog(); t = null }; i.prototype.cmd_infoWindow = function () { n.InfoMenu.show(this.aInfo.getItem()) }; i.prototype.cmd_zoomAcross = function () { var r = this.curTab.getRecord_ID(), i, t, u; r > 0 && (i = new n.Query, t = this.curTab.getKeyColumnName(), t.length == 0 && (t = this.curTab.getLinkColumnName()), t.length != 0 && (t.endsWith("_ID") ? i.addRestriction(t, n.Query.prototype.EQUAL, n.context.getContextAsInt(this.curWindowNo, t)) : i.addRestriction(t, n.Query.prototype.EQUAL, n.context.getContext(this.curWindowNo, t))), u = new n.AZoomAcross(this.aZoomAcross, this.curTab.getTableName(), i, this.curTab.getAD_Window_ID(), this, this.aZoomAcross.getListItmIT(), t, r), u.init()) }; i.prototype.cmd_request = function () { var t = this.curTab.getRecord_ID(); if (t > 0) { var r = this.curTab.getAD_Table_ID(), u = this.curTab.getValue("C_BPartner_ID"), i = new n.ARequest(this.aRequest, r, t, u, null, this.aRequest.getListItmIT()); i.getRequests(); i = null } }; i.prototype.cmd_markToExport = function () { var f = this.curTab.getRecord_ID(), e = this.curGC.getSelectedRows(), h = null, o = this.curTab.getAD_Table_ID(), s = this.curTab.getTableName(), c, l, a, r, v, u, i, t; if (f == -1) { if (c = { AD_Table_ID: o }, l = n.dataContext.getJSONData(n.Application.contextUrl + "JsonData/GetKeyColumns", c), l == null) return } else { if (a = s + "_ID", r = "", this.curGC.singleRow) { h = f; i = new n.MarkModule; i.init(h, o, s); i.show(); t = this; i.onClose = function () { t.curTab.loadMarking(); t.aMarkToExport.setPressed(t.curTab.hasMarked()); t = null }; return } if (v = e.length, v == 1) r = f; else { for (u = 0; u < e.length; u++)r += e[u][a.toLowerCase()] + ","; r.endsWith(",") && (r = r.substring(0, r.length - 1)) } i = new n.MarkModule; i.init(r, o, s); i.show(); t = this; i.onClose = function () { t.curTab.loadMarking(); t.aMarkToExport.setPressed(t.curTab.hasMarked()); t = null }; return } }; i.prototype.cmd_lock = function () { var i = !1, t; this.isPersonalLock && ((t = this.curTab.getRecord_ID(), t == -1 || t < 0) || (this.curTab.locks(n.context, t, this.aLock.getIsPressed()), this.curTab.loadAttachments(), i = this.curTab.getIsLocked(), this.aLock.setPressed(i))) }; i.prototype.cmd_recAccess = function () { var t = new n.RecordAccessDialog; t.Load(this.curTab.getAD_Table_ID(), this.curTab.getRecord_ID()) }; i.prototype.ShowSummaryNodes = function () { this.isSummaryVisible ? (this.aShowSummaryLevel.setPressed(!1), this.isSummaryVisible = !1) : (this.aShowSummaryLevel.setPressed(!0), this.isSummaryVisible = !0) }; i.prototype.cmd_call = function () { var r = this.curTab.getRecord_ID(), u, i, t; if (r == -1) { this.aCall.setEnabled(!1); return } u = this.curTab.getAD_Table_ID(); VA048 && VA048.Apps ? (i = new VA048.Apps.CallForm, i.initializeComponent(u, r), t = new n.CFrame, t.setName(n.Msg.getMsg("Call")), t.setTitle(n.Msg.getMsg("Call")), t.hideHeader(!0), t.setContent(i), t.show()) : alert(n.Msg.getMsg("Please install Communication module first")) }; i.prototype.dispose = function () { this.aParentDetail && this.aParentDetail.dispose(); this.curST != null && (this.curST.unRegisterAPanel(), this.curST = null); this.vTabbedPane.dispose(); this.vTabbedPane = null; this.gridWindow && (this.gridWindow.dispose(), this.gridWindow = null, this.ctx.setAutoCommit(this.$parentWindow.getWindowNo(), !1), this.ctx.removeWindow(this.$parentWindow.getWindowNo()), n.MLookupCache.cacheReset(this.$parentWindow.getWindowNo())); this.ctx = null; this.$parentWindow = null; this.tabPages = null; this.curGC = null; this.curST = null; this.aParentDetail = null; this.curTab = null; this.disposeComponent() }; n.VTabbedPane = function () { var n = !1; this.oldTabIndex = -1; this.Items = []; this.ItemsIds = []; this.count = 0; this.dependents = []; this.TabItems = []; this.getIsWorkbench = function () { return n } }; n.VTabbedPane.prototype.setTabObject = function (n) { this.tabObj = n }; n.VTabbedPane.prototype.addTab = function (n, t, i, r) { var f, u, e; for (this.ItemsIds[this.count] = n, this.Items[this.count] = i, this.TabItems.push(r), f = t.getDependentOn(), u = 0; u < f.length; u++)e = f[u], this.dependents.indexOf(e) < 0 && this.dependents.push(e); this.count++ }; n.VTabbedPane.prototype.getIsTabChanged = function (t) { var u = this.ItemsIds.indexOf(t), f = this.oldTabIndex, r, h, i, e, s, o; if (u === f) return console.log("same tab"), !1; if (i = this.Items[u], r = null, i instanceof n.GridController && (r = i, h = r.getIsDisplayed(), !h)) return !1; if (r != null && f >= 0 && u != f && (i = this.Items[f], i != null && i instanceof n.GridController)) { if (r.getTabLevel() > i.getTabLevel() + 1) { for (e = u - 1; e >= 0; e--)if (s = this.Items[e], o = null, s instanceof n.GridController && (o = s, o.getTabLevel() == i.getTabLevel() + 1)) return n.ADialog.warn("TabSwitchJumpGo", !0, "", o.getTitle()), !1; return n.ADialog.warn("TabSwitchJump"), !1 } i.setMnemonics(!1) } return r != null && r.setMnemonics(!0), this.oldTabIndex = u, !0 }; n.VTabbedPane.prototype.restoreTabChange = function () { this.oldTabIndex = -1 }; n.VTabbedPane.prototype.getTabElement = function () { return this.Items[this.oldTabIndex] }; n.VTabbedPane.prototype.getSelectedIndex = function () { return this.oldTabIndex }; n.VTabbedPane.prototype.sizeChanged = function (n, t) { for (var i in this.Items) this.Items[i].sizeChanged(n, t) }; n.VTabbedPane.prototype.evaluate = function (t) { var r = t == null, u = null, i, f, e, o; if (r || (u = t, r = u != null ? this.dependents.indexOf(u) > -1 : !0), r) for (i = 0; i < this.TabItems.length; i++)f = this.Items[i], f instanceof n.GridController && (e = f, o = e.getIsDisplayed(), this.TabItems[i].setEnabled(o)) }; n.VTabbedPane.prototype.dispose = function () { for (var n in this.Items) this.Items[n].dispose(), this.Items[n] = null; this.TabItems.length = 0; this.TabItems = null; this.Items.length = 0; this.Items = null; this.ItemsIds.length = 0; this.ItemsIds = null; this.dependents.length = 0; this.dependents = null }; f.prototype.setPressed = function (n) { this.toggle && (this.pressed = n, this.img && this.toggle && this.img.prop("src", n ? this.imgUrlX : this.imgUrl)) }; f.prototype.getIsPressed = function () { return this.pressed }; f.prototype.getAction = function () { return this.action }; f.prototype.getPath = function () { return n.Application.contextUrl + "Areas/VIS/Images/base/" }; f.prototype.getSeprator = function (n, t) { var i = this.getPath(); return (i += n ? "seprator16.png" : "seprator24.png", t) ? "<li>|<\/li>" : '<li><img src="' + i + '"><\/li>' }; f.prototype.setEnabled = function (n) { this.isEnabled = n; this.$li && this.$li.css("opacity", n ? 1 : .6); this.img && this.img.prop("disabled", !n).css("opacity", n ? 1 : .6) }; f.prototype.show = function () { this.$li && this.$li.show(); this.img && this.img.show() }; f.prototype.hide = function () { this.$li && this.$li.hide(); this.img && this.img.hide() }; f.prototype.getItem = function () { return this.$li }; f.prototype.getIsEnabled = function () { return this.isEnabled }; f.prototype.dispose = function (t) { if (this.action = this.toggle = this.pressed = this.isEnabled = this.text = this.toolTipText = this.imageOnly = null, this.textOnly = this.onAction = this.isSmall = null, this.$li && (this.$li.off(n.Events.onClick), this.$li.remove(), this.$li = null), this.img && (this.img = null), t && t in this.items) { var i = this.items[t]; i && (i.off(n.Events.onClick), i.remove(), i = null); delete this.items[t] } this.disposeComponent() }; f.prototype.setIsRo; o.prototype.setStatusDB = function (n, t) { n == null || n.length == 0 ? this.$statusDB.text("") : this.$statusDB.text(n); this.text = n; this.dse = t; this.setPageLine(t) }; o.prototype.setStatusLine = function (n, t) { this.merror = t; this.mtext = n; this.$statusLine.text(n) }; o.prototype.setInfo = function (n) { this.$infoLine.is(":visible") || this.$infoLine.show(); this.$infoLine.text(n) }; o.prototype.dispose = function () { this.disposeComponent() }; n.GridController = function (i, r, u) { function st() { b = t("<td colspan='2' class='vis-height-auto'>"); k = t("<td colspan='2' class='vis-height-auto'>"); tt = t("<td style='width:100%'>"); d = t("<div>"); rt = t("<td>").append(d).hide(); p = t("<table class='vis-gc-table'>").append(t("<tr>").append(b)).append(t("<tr>").append(k)).append(t("<tr  class='vis-height-full'>").append(rt).append(tt)).hide(); e = t("<ul  class='vis-appsaction-ul vis-gc-tabcontrol'>").hide(); o = t("<div class='vis-gc-header'>").hide(); y = t("<div class='vis-gc-vtable'>"); c = t("<div class='vis-gc-vpanel' id='AS_" + u + "'>"); l = t("<div class='vis-gc-vcard'>"); a = t("<div class='vis-gc-vmap'>"); b.append(o); k.append(e); it = t("<div class='vis-height-full' style='overflow:hidden'>"); ot = t("<div class='vis-height-full'>"); it.append(y).append(c).append(l).append(a); tt.append(it) } function ht() { et = new n.AppsAction({ action: "Add_sub", parent: null, enableDisable: !0, toggle: !1, imageOnly: !0, isSmall: !0, onAction: ft }); g = new n.AppsAction({ action: "Edit_sub", parent: null, enableDisable: !0, toggle: !1, imageOnly: !0, isSmall: !0, onAction: ft }); e.append(g.getListItm()).append(et.getListItm()) } var w, f, ft; this.id = u; this.vGridPanel = new n.VGridPanel; this.vTable = new n.VTable; this.vCardView = new n.VCardView; this.vMapView = new n.VMapView; this.windowNo = 0; this.aPanel = null; this.singleRow = !1; this.isCardRow = !1; this.doPaging = r; this.vIncludedGC = null; this.m_tree = null; this.onRowInserted = null; this.onRowInserting = null; this.curTabPanel = null; this.ul_tabPanels = null; this.rightPaneLinkItems = []; this.leftPaneLinkItems = []; this.showClient = !1; this.showOrg = !1; w = n.Env.getCtx().getShowClientOrg(); w == n.Env.SHOW_CLIENT_ONLY ? this.showClient = !0 : w == n.Env.SHOW_ORG_ONLY ? this.showOrg = !0 : w == n.Env.SHOW_CLIENT_ORG && (this.showOrg = !0, this.showClient = !0); this.isParentDetailVisible = !1; this.isIncludedGCVisible = !1; this.displayAsIncludedGC = !1; var c, l, a, e, p, o, nt = [], b, k, tt, y, d, it, ot, rt, ut = null, et, g = null; st(); f = this; ft = function (n) { if (n == "Edit_sub") { if (f.displayAsIncludedGC) { f.aPanel.tabActionPerformed(f.id) && (f.switchSingleRow(), e.find(".vis-apanel-tab-selected")[0].scrollIntoView()); return } } else if (f.displayAsIncludedGC) { if (!f.aPanel.tabActionPerformed(f.id)) return; f.switchSingleRow(); setTimeout(function (n) { n.aPanel.cmd_new() }, 500, f) } }; ht(); this.initLayout = function () { this.layoutLoaded = !0 }; this.sizeChanged = function (t, i) { t || (t = n.Env.getScreenHeight() - (s + v + h)); p.height(t); y.height(t - 2); c.height(t); d.height(t); l.height(t); a.height(t); this.m_tree && this.m_tree.setSize(t, i); this.vCardView && this.vCardView.sizeChanged(t, l.width()); this.vMapView && this.vMapView.sizeChanged(t, a.width()) }; this.sizeChanged(); c.append(this.vGridPanel.getRoot()); this.getRoot = function () { return p }; this.getTreeArea = function () { return d }; this.setTreePanelWidth = function () { rt.show() }; this.getId = function () { return u }; this.getReocrdDiv = function () { return o }; this.getTabControl = function () { return e }; this.setRecord = function () { }; this.getVTablePanel = function () { return y }; this.getVPanel = function () { return c }; this.getVCardPanel = function () { return l }; this.getVMapPanel = function () { return a }; this.setUI = function (n) { n ? (o.html(this.gTab.getName()), o.css("white-space", "nowrap"), o.show(), e.show(), g.setEnabled(!1), this.vTable.grid.show.selectColumn = !1) : (o.hide(), e.hide(), this.vTable.grid.show.selectColumn = !0) }; this.enableDisableToolbarItems = function (n) { g.setEnabled(n) }; this.vTable.onSelect = function (n) { f.aPanel && f.aPanel.setBusy && f.aPanel.setBusy(!0); f.cancelSel = !1; f.onTableRowSelect(n); f.cancelSel && (n.isCancelled = !0); f.aPanel && f.aPanel.setBusy && f.aPanel.setBusy(!1) }; this.vTable.onCellValueChanged = function (n, t) { t ? window.setTimeout(function () { f.vetoablechange(n); f.vTable.refreshCells() }, 10) : (f.vetoablechange(n), f.vTable.refreshCells()) }; this.vCardView.onCardEdit = function (n, t) { f.onTableRowSelect(n); t || f.switchSingleRow() }; this.vTable.onSort = function () { window.setTimeout(function () { f.navigate(f.gTab.getCurrentRow(), !0) }, 10) }; this.disposeComponent = function () { this.rightPaneLinkItems.length = 0; this.rightPaneLinkItems = null; this.leftPaneLinkItems.length = 0; this.leftPaneLinkItems = null; y = null; $divRecords = null; for (var n = 0; n < nt.length; n++)nt[n].dispose("ul_" + this.id); nt = null; this.seletedTab = null; b = null; k = null; this.vGridPanel.dispose(); this.vGridPanel = null; this.vCardView.dispose(); this.vCardView.onSelect = null; this.vMapView.dispose(); this.vTable.dispose(); this.vTable.onSelect = null; this.vTable.onSort = null; this.vTable = null; y = null; c = null; l = null; a = null; f = null; this.getId = null; this.getReocrdDiv = null; this.getRoot = null; this.getVTablePanel = null; this.getVPanel = null; this.getVCardPanel = null; p.remove(); p = null; ut && ut.destroy(); ut = null; this.onRowInserted = null } }; n.GridController.prototype.createTabPanel = function (t) { var r, i, u; if (this.ul_tabPanels) this.ul_tabPanels = this.ul_tabPanels.replace('default="true"', ""); else if (t && t.length > 0) { for (r = "", i = 0; i < t.length; i++)u = "", u = t[i].getIconPath() ? t[i].getIconPath() : "VIS/Images/base/defPanel.ico", r += '<li ><img alt="' + t[i].getName() + '" title="' + t[i].getName() + '" default="' + t[i].getIsDefault() + '" data-panelID="' + t[i].getAD_TabPanel_ID() + '" data-cName="' + t[i].getClassName() + '" data-Name="' + t[i].getName() + '" src="' + n.Application.contextUrl + "Areas/" + u + '"><\/img><\/li>'; this.ul_tabPanels = r } return this.ul_tabPanels }; n.GridController.prototype.setCurrentPanelID = function (n) { this.panelID = n }; n.GridController.prototype.getCurrentPanelID = function () { return this.panelID }; n.GridController.prototype.setCurrentPanel = function (t, i) { var u, r; this.curTabPanel && (this.curTabPanel.dispose && this.curTabPanel.dispose(), this.curTabPanel = null); t && (u = n.Utility.getFunctionByName(t, window), u && (r = new u, r.startPanel(i, this.gTab), this.gTab.getRecord_ID() > -1 && r.refreshPanelData(this.gTab.getRecord_ID(), this.gTab.getTableModel().getRow(this.gTab.getCurrentRow())), this.curTabPanel = r)) }; n.GridController.prototype.getCurrentPanel = function () { return this.curTabPanel }; n.GridController.prototype.refreshTabPanelData = function (n) { this.curTabPanel && t(this.curTabPanel.getRoot()).is(":visible") && this.curTabPanel.refreshPanelData(n, this.gTab.getTableModel().getRow(this.gTab.getCurrentRow())) }; n.GridController.prototype.initGrid = function (t, i, r, u) { var l = u.gridTable.gridFields, e = null, y = i + "_" + u.vo.AD_Tab_ID, w = i + "_c" + u.vo.AD_Tab_ID, b = i + "_m" + u.vo.AD_Tab_ID, c, a, s, f, o, v, h; if (u.getTableModel().setDoPaging(this.doPaging), c = n.MRole, c.getIsDisplayClient() && this.showClient || u.getField("AD_Client_ID").setDisplayed(!1), c.getIsDisplayOrg() && this.showOrg || u.getField("AD_Org_ID").setDisplayed(!1), a = this.vTable.setupGridTable(r, l, this.getVTablePanel(), y, u, this), u.addDataStatusListener(this), !t) for (this.vCardView.setupCardView(r, u, this.getVCardPanel(), w), u.getIsMapView() && this.vMapView.setupMapView(r, this, u, this.getVMapPanel(), b), s = 0; s < a; s++)if (e = l[s], e.getIsDisplayed()) { if (f = n.VControlFactory.getControl(u, e, !1, !1, !1), f == null && !e.getIsHeading()) continue; f != null && (f.setReadOnly(!0), e.setPropertyChangeListener(f), f.addVetoableChangeListener(this)); this.vGridPanel.addField(f, e); f instanceof n.Controls.VButton && (e.getIsLink() && (e.getIsRightPaneLink() ? this.rightPaneLinkItems.push(f) : this.leftPaneLinkItems.push(f)), f.addActionListner(r)); f = null } o = 0; u.getIsTreeTab() && (v = "VIS_120", h = [], h[0] = new n.DB.SqlParam("@AD_Client_ID", n.Env.getCtx().getAD_Client_ID()), h[1] = new n.DB.SqlParam("@AD_Table_ID", u.getAD_Table_ID()), o = p(v, h), o > 0 && (this.treeID = o, u.getShowSummaryLevel() ? (this.onDemandTree = !0, this.m_tree = new n.TreePanel(i, !1, !0, !0, this), r.aShowSummaryLevel.show()) : (this.onDemandTree = !1, this.m_tree = new n.TreePanel(i, !1, !0, !1, this), r.aShowSummaryLevel.hide()), this.m_tree.setTabID(u.getAD_Tab_ID()), u.getTabNo() == 0 && this.m_tree.initTree(o), this.getTreeArea().append(this.m_tree.getRoot()), this.m_tree.addSelectionChangeListner(this), this.setTreePanelWidth("300px"), this.getTreeArea().width("300px"), this.m_tree.setSize(this.getTreeArea().height()))); u.getTableModel().addTableModelListener(this.vTable); u.getTableModel().addCardModelListener(this.vCardView); u.getTableModel().addRowChangedListener(this); u.getTableModel().addQueryCompleteListner(this); u.getTableModel().setDoPaging(this.doPaging); u.getTableModel().setCurrentPage(1); this.gTab = u; this.windowNo = i; this.onlyMultiRow = t; this.aPanel = r; t || !u.getIsSingleRow() ? this.singleRow = !1 : this.switchSingleRow(!0) }; n.GridController.prototype.detachDynamicAction = function () { for (var n = 0, t = 0, n = 0, t = this.leftPaneLinkItems.length; n < t; n++)this.leftPaneLinkItems[n].getControl().detach(); for (n = 0, t = this.rightPaneLinkItems.length; n < t; n++)this.rightPaneLinkItems[n].getControl().detach(); n = null; t = null }; n.GridController.prototype.switchRowPresentation = function () { this.singleRow ? this.switchMultiRow() : this.switchSingleRow() }; n.GridController.prototype.getIsSingleRow = function () { return this.singleRow }; n.GridController.prototype.getIsMapRow = function () { return this.isMapRow }; n.GridController.prototype.onTableRowSelect = function (n) { var i, r, t; if (!this.rowSetting && this.gTab.getRowCount() != 0) { if (i = this.vTable.get(n.recid, !0), r = this.gTab.getCurrentRow(), i == -1 && r >= 0) { this.vTable.select(n.recid); this.vCardView.navigate(n.recid, !this.isCardRow); return } if (i != r) this.rowSetting = !0, this.navigate(i), this.rowSetting = !1; else if (!this.settingGridSelecton) return; this.dynamicDisplay(-1); t = this; this.getIsSingleRow() ? t.vIncludedGC != null && t.switchIncludedGC() : window.setTimeout(function () { t.vIncludedGC != null && t.switchIncludedGC() }, 50) } }; n.GridController.prototype.switchIncludedGC = function () { this.vIncludedGC != null && this.switchIncludedGC() }; n.GridController.prototype.dynamicDisplay = function (t) { var l, e, i, u, r, o, f, c; if (this.gTab != null && !this.isCardRow && !this.isMapRow) { if (l = this.gTab.getRecord_ID(), !this.getIsSingleRow()) { this.dynamicDisplayLinks(t); return } if (this.gTab.getIsOpen()) { if (t >= 0) { var s = this.gTab.getField(t), u = s.getColumnName(), a = this.gTab.getDependantFields(u); if (a.length == 0 && s.getCallout().length > 0) return } var v = this.gTab.getRowCount() == 0, h = this.vGridPanel.getComponents(), y = h.length; for (e = 0; e < y; e++)i = h[e], u = i.getName(), u != null && (u.startsWith("lbl") && (u = u.substring(3)), r = this.gTab.getField(u), r != null && (r.getIsDisplayed(!0) ? (o = i.tag, !i.getIsVisible() && (o == null || o == "undefined" || o) && i.setVisible(!0), i instanceof n.Controls.IControl && (f = i, v ? f.setReadOnly(!0) : (c = r.getIsEditable(!0) && !this.gTab.getIsReadOnly(), f.setReadOnly(!c), f.setMandatory(r.getIsMandatory(!0)), f.setBackground(r.getIsError()), !r.getIsDefaultFocus() || this.isDefaultFocusSet || i.getName().startsWith("lbl") || (f.setDefaultFocus(!0), this.isDefaultFocusSet = !0)))) : i.getIsVisible() && i.setVisible(!1), r.getIsDisplayed(!0) || r.getIsMandatory(!0) || r.setError(!1))) } } }; n.GridController.prototype.dynamicDisplayLinks = function () { var s, o, f, t, r, i, e, u, h; if (!this.displayAsIncludedGC) for (s = this.gTab.getRowCount() == 0, o = this.vGridPanel.getLinkComponents(), f = 0; f < o.length; f++)t = o[f], r = t.getName(), r != null && (r.startsWith("lbl") && (r = r.substring(3)), i = this.gTab.getField(r), i != null && (i.getIsDisplayed(!0) ? (e = t.tag, !t.getIsVisible() && (e == null || e == "undefined" || e) && t.setVisible(!0), t instanceof n.Controls.IControl && (u = t, s ? u.setReadOnly(!0) : (h = i.getIsEditable(!0) && !this.gTab.getIsReadOnly(), u.setReadOnly(!h), u.setMandatory(i.getIsMandatory(!0)), u.setBackground(i.getIsError())))) : t.getIsVisible() && t.setVisible(!1), i.getIsDisplayed(!0) || i.getIsMandatory(!0) || i.setError(!1))) }; n.GridController.prototype.setDefaultFocus = function () { for (var e = this.gTab.getRowCount() == 0, r = this.vGridPanel.getComponents(), f = r.length, u, t, i, n = 0; n < f; n++)if (u = r[n], t = u.getName(), t != null && (i = this.gTab.getField(t), i != null && i.getIsDefaultFocus())) { this.vTable.setDefaultFocus(t); break } }; n.GridController.prototype.setVisible = function (n) { this.layoutLoaded || this.initLayout(); n ? (this.getRoot().show(), this.vTable.resize()) : this.getRoot().hide() }; n.GridController.prototype.getMTab = function () { return this.gTab }; n.GridController.prototype.getIsDisplayed = function () { return this.gTab.getIsDisplayed(!1) }; n.GridController.prototype.getTabLevel = function () { return this.gTab.getTabLevel() }; n.GridController.prototype.getTitle = function () { return this.gTab.getName() }; n.GridController.prototype.getSelection = function (n) { return this.vTable.getSelection(n) }; n.GridController.prototype.getSelectedRows = function () { return this.vTable.getSelectedRows() }; n.GridController.prototype.getColumnNames = function () { var t, i, n; if (this.colNames) return this.colNames; for (t = this.gTab.getTableModel().getFields(), i = {}, n = 0; n < t.length; n++)i[t[n].getColumnName()] = t[n].getHeader(); return this.colNames = i, this.colNames }; n.GridController.prototype.setMnemonics = function () { }; n.GridController.prototype.activate = function (n) { var t, i; this.vTable.activate(); n = n || {}; this.vTable.setReadOnly(!1); this.displayAsIncludedGC ? (i = this.aPanel.getLayout(), this.setUI(!1), this.getRoot().detach(), i.append(this.getRoot()), this.displayAsIncludedGC = !1, this.aPanel.getIncludedEmptyArea().css({ width: "", padding: "" })) : this.gTab.getIncluded_Tab_ID() == 0 && (t = n.vIncludedGC, t && (i = t.aPanel.getLayout(), t.setUI(!1), t.getRoot().detach())); this.isIncludedGCVisible = !1; this.vIncludedGC && (this.vIncludedGC.displayAsIncludedGC = !1, this.vIncludedGC.isIncludedGCVisible = !1); this.activateTree() }; n.GridController.prototype.multiRowResize = function () { this.singleRow || this.isCardRow || this.vTable.resize() }; n.GridController.prototype.activateTree = function () { var t, i, r, e, o, s, u, f; if (this.gTab.getIsTreeTab() && this.gTab.getTabNo() > 0) { if (t = 0, this.gTab.getTabLevel() > 0 && (i = this.gTab.getKeyColumnName(), r = "AD_Tree_ID", i.startsWith("CM") && (i.equals("CM_Container_ID") ? r = "AD_TreeCMC_ID" : i.equals("CM_CStage_ID") ? r = "AD_TreeCMS_ID" : i.equals("CM_Template_ID") ? r = "AD_TreeCMT_ID" : i.equals("CM_Media_ID") && (r = "AD_TreeCMM_ID")), t = n.Env.getCtx().getWindowContextAsInt(this.windowNo, r)), t == 0) { if (e = this.gTab.getAD_Table_ID(), o = n.Env.getCtx().getAD_Client_ID(), e == 0) return 0; s = "VIS_121"; u = []; u[0] = new n.DB.SqlParam("@AD_Client_ID", o); u[1] = new n.DB.SqlParam("@AD_Table_ID", e); f = g(s, u); f.read() && (t = f.getInt(0)); f = null } this.m_tree != null && t > 0 && this.m_tree.initTree(t) } }; n.GridController.prototype.nodeSelectionChanged = function (n) { var u, t, f, r, i; if (n != null && (u = n.newValue, u != null)) { if (t = u, this.treeNodeID = t, this.onDemandTree) { this.aPanel && this.aPanel.setBusy && this.aPanel.setBusy(!0); this.gTab.setTreeNodeID(t); this.gTab.gridTable.setCurrentPage(1); this.gTab.setQuery(null); this.navigate(0); this.query(0, 0, !1, t, this.treeID, this.gTab.getAD_Table_ID()); return } for (f = this.gTab.getRowCount(), r = -1, i = 0; i < f; i++)if (this.gTab.getKeyID(i) == t) { r = i; break } r != -1 && this.navigate(r) } }; n.GridController.prototype.skipRowInserting = function (n) { this.skipInserting = n }; n.GridController.prototype.query = function (n, t, i, r, u, f) { this.aPanel && this.aPanel.setBusy && this.aPanel.setBusy(!0); this.onDemandTree && (r && this.gTab.setTreeNodeID(r), u && this.gTab.setTreeID(u), f && this.gTab.setTreeTable(f), this.aPanel.isSummaryVisible ? this.gTab.setShowSummaryNodes(!0) : this.gTab.setShowSummaryNodes(!1)); var e = this.gTab.prepareQuery(n, t, i, !1) }; n.GridController.prototype.queryCompleted = function () { this.vTable.clear(); this.gTab.clearSelectedRow(); this.vTable.add(this.gTab.getTableModel().getDataTable()); this.gTab.getTableModel().setSortModel(this.vTable.getGrid().records); this.displayAsIncludedGC || (this.onRowInserting ? this.onRowInserting() : this.checkInsertNewRow()); this.navigate(this.gTab.getCurrentRow(), !this.gTab.getTableModel().getIsInserting()); this.isCardRow && this.vCardView.refreshUI(this.getVCardPanel().width()); this.isMapRow && this.vMapView.refreshUI(this.getVMapPanel().width()); this.aPanel && this.aPanel.setBusy(!1); this.skipInserting = !1; this.dynamicDisplay(-1) }; n.GridController.prototype.checkInsertNewRow = function () { if (this.aPanel == null) return !1; var t = !0, i = this.gTab.getLinkColumnName(), r = n.context.getWindowContext(this.windowNo, i); return (i.Length > 0 && r.length == 0 && (t = !1), this.gTab.getTableModel().getTotalRowCount() == 0 && !this.gTab.getIsReadOnly() && (n.context.getIsAutoNew(this.windowNo) || this.gTab.getIsQueryNewRecord()) && t && this.gTab.getIsInsertRecord() && !this.skipInserting) ? (this.dataNew(!1), !0) : !1 }; n.GridController.prototype.vetoablechange = function (n) { var t = this.gTab.getTableModel(), i = this.gTab.getCurrentRow(), r = t.findColumn(n.propertyName); t.setValueAt(n.newValue, i, r) }; n.GridController.prototype.refreshUI = function () { this.dataRefreshAll() }; n.GridController.prototype.navigate = function (i, r) { var u; if (!r && i == this.gTab.getCurrentRow()) return this.gTab.getCurrentRow(); if (u = this.gTab.navigate(i, !0, r), u > -1 && !this.rowSetting ? (this.settingGridSelecton = !0, this.vTable.select(u), this.settingGridSelecton = !1, this.vCardView.navigate(u, !this.isCardRow)) : u > -1 && this.vCardView.navigate(u, !0), u == -1) { this.cancelSel = !0; return } if (u > -1 && this.refreshTabPanelData(this.gTab.getRecord_ID()), this.m_tree != null && this.m_tree.setSelectedNode(this.gTab.getRecord_ID()), this.vTable.scrollInView(i), this.onDemandTree) { var f = this.gTab.getRecord_ID(), e = this.treeID, o = this.aPanel; t.ajax({ url: n.Application.contextUrl + "JsonData/GetTreeNodePath", data: { nodeID: f, treeID: e }, success: function (n) { var t = JSON.parse(n); o.setStatusLine(t) }, error: function (n) { console.log(n) } }) } return this.gTab.getCurrentRow() }; n.GridController.prototype.navigatePageExact = function (n) { this.gTab.getTableModel().setCurrentPage(n); this.query(this.gTab.getOnlyCurrentDays(), 0, !1, this.treeNodeID, this.treeID, this.gTab.getAD_Table_ID()) }; n.GridController.prototype.navigatePage = function (n) { this.gTab.getTableModel().setCurrentPageRelative(n); this.query(this.gTab.getOnlyCurrentDays(), 0, !1, this.treeNodeID, this.treeID, this.gTab.getAD_Table_ID()) }; n.GridController.prototype.navigateRelative = function (n) { return this.navigate(this.gTab.getCurrentRow() + n) }; n.GridController.prototype.dataRefresh = function () { var n = this.gTab.dataRefresh(); this.dynamicDisplay(-1); window.setTimeout(function (n) { n.switchIncludedGC(); n = null }, 500, this) }; n.GridController.prototype.dataRefreshAll = function () { this.gTab.getTableModel().dataRefreshAll() }; n.GridController.prototype.dataSave = function (n) { this.m_tree != null && this.gTab.SetSelectedNode(this.m_tree.currentNode); var t = this.gTab.dataSave(n); return t, t }; n.GridController.prototype.dataNew = function (n) { this.isDefaultFocusSet = !1; this.gTab.dataNew(n); this.dynamicDisplay(-1); this.switchIncludedGC(); this.onRowInserted && this.onRowInserted(); this.isDefaultFocusSet = !0 }; n.GridController.prototype.canDeleteRecords = function () { for (var i = this.vTable.getSelection(!0), f = this.vTable.getGrid().records, u = [], r, t = 0; t < i.length; t++)r = f[i[t]], "ad_client_id" in r && (n.MRole.getIsClientAccess(r.ad_client_id, !0) || u.push(i[t])); return u }; n.GridController.prototype.dataDelete = function () { var n = this.gTab.dataDelete(this.vTable.getSelection(!0)); return this.refreshTabPanelData(this.gTab.getRecord_ID()), this.dynamicDisplay(-1), n }; n.GridController.prototype.rowChanged = function (n, i) { var r; if (this.m_tree != null) { if (t.isArray(i) && !n) { for (r = 0; r < i.length; r++)this.m_tree.nodeChanged(n, i[r], "", "", "", ""); return } if (!(i <= 0)) { var f = this.gTab.getValue("Name"), e = this.gTab.getValue("Description"), u = this.gTab.getValue("IsSummary"), o = u == !0 || u == "Y", s = this.gTab.getValue("Action"); this.m_tree.nodeChanged(n, i, f, e, o, s) } } }; n.GridController.prototype.dataIgnore = function () { this.gTab.dataIgnore(); this.dynamicDisplay(-1); this.switchIncludedGC(); this.vTable.refreshUndo() }; n.GridController.prototype.dataStatusChanged = function (t) { var r, i, f, e, u, o, s, h; if (this.displayAsIncludedGC) { this.enableDisableToolbarItems(!0); return } if (this.aPanel.dataStatusChanged(t), r = t.getChangedColumn(), t.getIsChanged() && !(r < 0)) { if (i = this.gTab.getField(r), i != null) if (i.getCallout().length > 0) f = this.gTab.processFieldChange(i), f.length > 0 && n.ADialog.error(f); else for (e = i.getColumnName(), dependants = this.gTab.getDependantFields(e), u = 0; u < dependants.length; u++)(o = dependants[u], o != null) && (s = o.getLookup(), s != null) && (h = s.getValidation(), h.indexOf(e) != -1); this.dynamicDisplay(r) } }; n.GridController.prototype.includeTab = function (n) { var t = n.getMTab(); return this.gTab.getIncluded_Tab_ID() != t.getAD_Tab_ID() ? !1 : (this.vIncludedGC = n, this.vIncludedGC.switchMultiRow(), !0) }; n.GridController.prototype.switchSingleRow = function () { if (!this.onlyMultiRow && !this.singleRow) { this.singleRow = !0; this.isCardRow = !1; this.isMapRow = !1; var n = this.getVTablePanel(), t = this.getVPanel(); (this.isIncludedGCVisible || !0) && (n.hide(), t.css("display", "block"), this.getVCardPanel().hide(), this.getVMapPanel().hide()); this.dynamicDisplay(-1) } }; n.GridController.prototype.switchMultiRow = function () { if (this.singleRow) { this.singleRow = !1; this.isCardRow = !1; this.isMapRow = !1; var n = this.getVTablePanel(); this.getVPanel().hide(); this.getVCardPanel().hide(); this.getVMapPanel().hide(); this.isIncludedGCVisible ? n.css({ float: "right" }) : n.css({ float: "" }); n.show(); n = null; this.vTable.resize(); this.vTable.refreshRow() } }; n.GridController.prototype.switchCardRow = function () { if (!this.isCardRow) { this.singleRow = !1; this.isCardRow = !0; this.isMapRow = !1; this.getVTablePanel().hide(); this.getVPanel().hide(); this.getVMapPanel().hide(); var n = this.getVCardPanel(); this.isIncludedGCVisible ? n.css({ float: "right" }) : n.css({ float: "" }); n.show(); this.vCardView.refreshUI(this.getVCardPanel().width()); n = null } }; n.GridController.prototype.switchMapRow = function () { if (!this.isMapRow) { this.singleRow = !0; this.isCardRow = !1; this.isMapRow = !0; this.getVTablePanel().hide(); this.getVPanel().hide(); this.getVCardPanel().hide(); var n = this.getVMapPanel(); this.isIncludedGCVisible ? n.css({ float: "right" }) : n.css({ float: "" }); n.show(); this.vMapView.refreshUI(this.getVMapPanel().width()); n = null } }; n.GridController.prototype.switchIncludedGC = function () { var r, t, i; this.vIncludedGC && !this.displayAsIncludedGC && (r = this.isIncludedGCVisible, r || (t = this.aPanel.getIncludedEmptyArea(), t.empty(), i = this.vIncludedGC.getRoot(), i.detach(), this.vIncludedGC.setUI(!0), t.append(i), this.gTab.getHasPanel() ? t.css("padding", "0px 1px 0px 1px") : t.css("padding", "0px 5px 0px 7px"), t.width(n.Application.isMobile ? 250 : 350), i.show(), this.vIncludedGC.vTable.activate(), this.vIncludedGC.vTable.setReadOnly(!0), this.isIncludedGCVisible = !0, this.singleRow || (this.singleRow = !0, this.switchMultiRow()), this.vIncludedGC.displayAsIncludedGC = !0, this.vIncludedGC.singleRow = !0, this.vIncludedGC.switchMultiRow(), this.vTable.resize(), this.gTab.getHasPanel() && this.aPanel.setWidth(-1, !0)), window.setTimeout(function (n) { n.vIncludedGC.query(0, 0, !1); n = null }, 1, this)) }; n.GridController.prototype.removeRecord = function () { var n = this.vTable.getSelection(!0), t; if (n && n.length > 0) for (t = 0; t < n.length; t++)this.vTable.grid.unselect(n[t] + 1), this.vTable.grid.remove(n[t] + 1); this.navigate(0); this.aPanel.setBusy(!1) }; n.GridController.prototype.dispose = function () { this.gTab.removeDataStatusListener(this.aPanel); this.gTab.removeDataStatusListener(); this.gTab.getTableModel().removeTableModelListener(this.vTable); this.gTab.getTableModel().removeCardModelListener(this.vCardView); this.gTab.getTableModel().removeRowChangedListener(); this.gTab.getTableModel().removeQueryCompleteListner(); this.disposeComponent(); this.gTab = null; this.windowNo = null; this.onlyMultiRow = null; this.aPanel = null; this.m_tree && this.m_tree.dispose(); this.curTabPanel && (this.curTabPanel.dispose(), this.curTabPanel = null); this.m_tree = null }; n.GridController.prototype.HEADER_HEIGHT = 55; n.AParentDetail = function (i, r) { function y() { f = t("<div class='vis-apanel-bar'>"); c = t("<div class='vis-apanel-bar-fixpart' style='background-color:white'>"); o = t("<div class='vis-apanel-bar-varpart vis-apanel-bar-pdetail'>"); e = t('<div class="vis-apanel-lb-main">'); s = t("<div class='vis-apanel-lb-oflow' style='border-left: 1px solid white;'>").hide(); s.html("<a data-dir='u' href='javascript:void(0)'><img style='margin-left:10px' data-dir='u' src='" + n.Application.contextUrl + "Areas/VIS/Images/base/arrow-top.png' ><\/a><a data-dir='d' href='javascript:void(0)' ><img style='margin-left:10px' data-dir='d' src='" + n.Application.contextUrl + "Areas/VIS/Images/base/arrow-bottom.png' /><\/a>"); o.append(e).append(s); h = t("<div style='width:192px;overflow-y:auto;padding-left: 4px;padding-right:3px;'>"); e.append(h); f.append(o).append(c); r.append(f); f.hide() } function a() { for (var r = null, c = "", t = "", o, s, e = 0; e < v; e++)(r = l[e], t = null, t = r.getValue(), t && t != "" && r.getIsDisplayed()) && (c += "<h3>" + w2utils.encodeTags(r.getHeader()) + "<\/h3>", o = r.getDisplayType(), r.lookup ? t = r.lookup.getDisplay(t, !0) : n.DisplayType.IsDate(o) ? t = new Date(t).toLocaleString() : o == n.DisplayType.YesNo ? (s = t.toString(), r.getIsEncryptedColumn() && (s = n.secureEngine.decrypt(s)), t = s.equals("Y")) : t = t.toString(), r.getIsEncryptedColumn() && o != n.DisplayType.YesNo && (t = n.secureEngine.decrypt(t)), c += "<h5>" + w2utils.encodeTags(t) + "<\/h5>"); h.empty(); h.html("<h1>" + i.getMTab().getName() + "<\/h1>" + c); u.setSize(f.height()) } function p() { u.curGC && (u.curGC.multiRowResize(), u.curGC.aPanel.setWidth(-1, !0), u.curGC.aPanel.setTabNavigation()) } function w() { a(); u.curGC && (u.curGC.multiRowResize(), u.curGC.aPanel.setWidth(-1, !0), u.curGC.aPanel.setTabNavigation()) } var u; this.gc = i; this.$root = r; this.visible = !1; this.expaned = !1; this.curGC = null; var l = i.getMTab().getTableModel().getFields(), v = l.length, c, o, f = null, e, s, h; y(); u = this; c.on(n.Events.onTouchStartOrClick, function (n) { u.$root.width() > 20 ? u.hide() : u.show(); n.stopPropagation() }); s.on("click", function (n) { var r, o; if (n.stopPropagation(), r = t(n.target).data("dir"), r) { var s = e.height(), c = h.height(), u = e.scrollTop(), f = Math.ceil(s / 2), i = 0; if (r == "d") { if (u + f >= c - f) return; o = c - s; i = u + f; e.animate({ scrollTop: i > o ? o : i }, 1e3, "easeOutBounce") } else if (r == "u") { if (u == 0) return; i = u - f; e.animate({ scrollTop: i < 0 ? 0 : i }, 1e3, "easeOutBounce") } } }); this.show = function () { if (u.expaned) { a(); return } this.expaned = !0; u.visible && f.show(); r.animate({ width: "200px" }, 300, "swing"); o.show().animate({ width: "192px" }, 300, "swing", w) }; this.hide = function () { (this.expaned || !this.visible) && (this.expaned = !1, r.animate({ width: u.visible ? "8px" : "0px" }, 300, "swing"), u.visible || f.hide(), o.hide().animate({ width: "0px" }, 300, "swing", p)) }; this.setSize = function (t) { f.height(t); e.height(t); h.height() > e.height() && (n.Application.isMobile || (e.height(t - 40), s.show())) }; this.disposeComponenet = function () { this.gc = null; this.$root = null; this.visible = null; this.expaned = null; s.off("click"); c.off(n.Events.onTouchStartOrClick); c = o = null; f.remove(); f = null; u = null; this.curGC = null; l.length = 0; l = null; this.show = null; this.hide = null } }; n.AParentDetail.prototype.evaluate = function (n) { if (this.curGC = null, this.curGC = n, this.gc.getId() === n.getId()) this.visible = !1, this.hide(); else { if (this.curGC.isParentDetailVisible = !0, this.visible) return; this.visible = !0; this.show() } }; n.AParentDetail.prototype.dispose = function () { this.disposeComponenet() }; n.VSortTab = function (i, r, u, f, e, o) { function g() { b = t("<span>").text(n.Msg.getMsg("N")); k = t("<span>").text(n.Msg.getMsg("Y")); h = t("<ul class='vis-sortTab-select' " + (e ? " disabled" : "") + ">"); s = t("<ul class='vis-sortTab-select' " + (e ? " disabled" : "") + " >"); v = t("<button" + (e ? " disabled" : "") + " ><img src='" + w + "Left32.png' /><\/button"); a = t("<button" + (e ? " disabled" : "") + " ><img src='" + w + "Right32.png' /><\/button"); y = t("<button" + (e ? " disabled" : "") + " ><img src='" + w + "Up32.png' /><\/button"); p = t("<button" + (e ? " disabled" : "") + " ><img src='" + w + "Down32.png' /><\/button"); l = t("<table class='vis-apanel-sorttab' style='display:none;'>"); var i = t("<td class='vis-apanel-sorttab-td'>"); i.append(t("<div class='vis-apanel-sorttab-td-inner'>").append(b).append(h).append(t("<div class='vis-apanel-sorttab-td-right'>").append(a).append(v))); i.append(t("<div class='vis-apanel-sorttab-td-inner'>").append(k).append(s).append(t("<div class='vis-apanel-sorttab-td-right'>").append(y).append(p))); l.append(t("<tr>").append(i)) } var l, b, k, h, s, a, v, y, p, w, d, c; this.winNumber = i; this.tableName = null; this.columnSortName = null; this.columnYesNoName = null; this.keyColumnName = null; this.identifierColumnName = null; this.identifierTranslated = !1; this.parentColumnName = null; this.aPanel = null; this.log = n.Logging.VLogger.getVLogger("VSortTab"); w = n.Application.contextUrl + "Areas/VIS/Images/base/"; d = null; g(); this.dynInit(r, u, f); this.getRoot = function () { return l }; this.getId = function () { return o }; this.getlstModel = function (n) { return n ? s.find("li") : h.find("li") }; this.setLabelName = function (n, t) { b.text(n); k.text(t) }; this.setListOptions = function (n, t) { h.empty(); h.append(n); s.empty(); s.append(t) }; this.setOldValues = function (n) { d = n }; this.getOldValues = function () { return d }; c = this; v.on(n.Events.onTouchStartOrClick, function (n) { c.btn_Click("Left"); n.stopPropagation() }); a.on(n.Events.onTouchStartOrClick, function (n) { c.btn_Click("Right"); n.stopPropagation() }); y.on(n.Events.onTouchStartOrClick, function (n) { c.btn_Click("Up"); n.stopPropagation() }); p.on(n.Events.onTouchStartOrClick, function (n) { c.btn_Click("Down"); n.stopPropagation() }); h.on(n.Events.onClick, "LI", function () { t(this).toggleClass("vis-apanel-sorttab-selected") }); s.on(n.Events.onClick, "LI", function () { t(this).toggleClass("vis-apanel-sorttab-selected") }); this.btn_Click = function (n) { var e = !1, i = null, u, f, c, r, o; if (n == "Right") { for (i = h.find("li.vis-apanel-sorttab-selected"), s.children().removeClass("vis-apanel-sorttab-selected"), u = 0; u < i.length; u++)i[u].remove(), t(i[u]).toggleClass("vis-apanel-sorttab-selected"), s.append(i[u]), e = !0; i.length = 0; i = 0 } else if (n == "Left") { for (i = s.find("li.vis-apanel-sorttab-selected"), h.children().removeClass("vis-apanel-sorttab-selected"), f = 0; f < i.length; f++)i[f].remove(), t(i[f]).toggleClass("vis-apanel-sorttab-selected"), h.append(i[f]), e = !0; i.length = 0; i = 0 } else { if (i = s.find("li.vis-apanel-sorttab-selected"), i == null) return; if (c = i.length, c == 0) return; if (r = t(i[0]), r == null) return; if (s.children().removeClass("vis-apanel-sorttab-selected"), r.addClass("vis-apanel-sorttab-selected"), o = r.index(), n == "Up") { if (o == 0) return; r.remove(); r.insertBefore(s.find("li").eq(o - 1)); e = !0 } else if (n == "Down") { if (o >= s.children().length - 1) return; r.remove(); r.insertAfter(s.find("li").eq(o)); e = !0 } } e && this.aPanel != null && this.aPanel.aSave.setEnabled(!0) }; this.disposeComponent = function () { v.off(n.Events.onTouchStartOrClick); a.off(n.Events.onTouchStartOrClick); y.off(n.Events.onTouchStartOrClick); p.off(n.Events.onTouchStartOrClick); this.seletedTab = null; l.remove(); l = null; c = null; this.winNumber = null; this.tableName = null; this.columnSortName = null; this.columnYesNoName = null; this.keyColumnName = null; this.identifierColumnName = null; this.identifierTranslated = !1; this.parentColumnName = null; this.aPanel = null; this.log = null; h = null; s = null; y = p = v = a = null; this.btn_Click = this.setListOptions = this.getlstModel = this.setLabelName = this.setListOptions = this.getRoot = this.getId = null; console.log("dispose vSortTab") } }; n.VSortTab.prototype.dynInit = function (t, i, r) { var e = !n.Env.isBaseLanguage(n.Env.getCtx(), ""), o = "VIS_122", f = [], u, s; f[0] = new n.DB.SqlParam("@AD_Table_ID", t); f[1] = new n.DB.SqlParam("@AD_ColumnSortOrder_ID", i); f[2] = new n.DB.SqlParam("@AD_ColumnSortYesNo_ID", r); e && (o = "VIS_123", f = [], f[0] = new n.DB.SqlParam("@AD_Table_ID", t), f[1] = new n.DB.SqlParam("@AD_ColumnSortOrder_ID", i), f[2] = new n.DB.SqlParam("@AD_ColumnSortYesNo_ID", r), f[3] = new n.DB.SqlParam("@AD_Language", n.Env.getAD_Language(n.Env.getCtx()))); u = this; s = ""; g(o, f, function (t) { if (t != null) { for (var f = ""; t.read();)u.tableName = t.getString(0), i == t.get(1) ? (u.columnSortName = t.getString(2), f = t.getString(3)) : r == t.get(1) ? u.columnYesNoName = t.getString(2) : t.getString(4) == "Y" ? u.parentColumnName = t.getString(2) : t.getString(5) == "Y" ? u.keyColumnName = t.getString(2) : t.getString(6) == "Y" && (u.identifierColumnName = t.getString(2), e && (u.identifierTranslated = "Y" == t.getString(7))); t.close(); u.setLabelName(n.Msg.getMsg("Available"), f) } u = null }) }; n.VSortTab.prototype.setVisible = function (n) { n ? this.getRoot().show() : this.getRoot().hide() }; n.VSortTab.prototype.loadData = function () { var t = "", e; t += "SELECT t." + this.keyColumnName; t += this.identifierTranslated ? ",tt." : ",t."; t += this.identifierColumnName + ",t." + this.columnSortName; this.columnYesNoName != null && (t += ",t." + this.columnYesNoName); t += " FROM " + this.tableName + " t"; this.identifierTranslated && (t += ", " + this.tableName + "_Trl tt"); t += " WHERE t." + this.parentColumnName + "=@ID"; this.identifierTranslated && (t += " AND t." + this.keyColumnName + "=tt." + this.keyColumnName + " AND tt.AD_Language='" + n.context.getAD_Language() + "'"); t += " ORDER BY "; this.columnYesNoName != null && (t += "4 DESC,"); t += "3,2"; var c = n.Env.getCtx().getWindowContext(this.winNumber, this.parentColumnName), i = ut(t, [new n.DB.SqlParam("@ID", c)]), o = "", s = "", r = []; try { while (i.read()) { var u = i.get(0), l = i.getString(1), f = i.get(2), h = f != 0; this.columnYesNoName != null && (h = i.getString(3) == "Y"); e = "<li data-value='" + u + "'>" + l + "<\/li>"; h ? (o += e, r.push({ key: u, value: f })) : (s += e, r.push({ key: u, value: f })) } i.close(); i.dispose(); this.setOldValues(r); this.setListOptions(s, o) } catch (a) { this.log.Log(n.Logging.Level.SEVERE, t, a) } this.aPanel.aSave.setEnabled(!1) }; n.VSortTab.prototype.saveData = function () { var u; if (this.aPanel.aSave.getIsEnabled()) { var f = this.getlstModel(), e = this, o = this.tableName, s = this.columnSortName, h = this.columnYesNoName, c = this.keyColumnName, i = [], r = []; f.each(function (n, u) { i.push(t(u).data("value")); r.push("N") }); u = this.getlstModel(!0); u.each(function (n, u) { i.push(t(u).data("value")); r.push("Y") }); t.ajax({ url: n.Application.contextUrl + "Form/SetFieldsSorting", async: !1, type: "POST", data: { values: JSON.stringify(i), noYes: JSON.stringify(r), tableName: o, keyColumnName: c, columnSortName: s, columnYesNoName: h, oldValues: JSON.stringify(e.getOldValues()) }, success: function () { }, error: function () { } }) } }; n.VSortTab.prototype.unRegisterAPanel = function () { this.saveData(); this.aPanel = null }; n.VSortTab.prototype.registerAPanel = function (n) { this.aPanel = n }; n.VSortTab.prototype.sizeChanged = function (n) { this.getRoot().height(n) }; n.VSortTab.prototype.dispose = function () { this.disposeComponent() }; n.VGridPanel = function () { function tt() { h = t("<table class='vis-gc-vpanel-table'>") } function l() { p = i = k = d = c = u = g = nt = w = y = null; p = t("<td  class='vis-gc-vpanel-table-td0'>"); i = t("<td colspan = '3' class='vis-gc-vpanel-table-td1'>"); c = t("<td class='vis-gc-vpanel-table-td2'>"); u = t("<td colspan='3' class='vis-gc-vpanel-table-td3'>"); w = t("<td class='vis-gc-vpanel-table-td4'>"); y = t("<tr>"); h.append(y); y.append(p).append(i).append(c).append(u).append(w) } function it(n) { var u, r, o; n.stopPropagation(); var i = t(this), h = i.data("name"), c = i.data("display"), e = !1; for (c === "show" ? (i.data("display", "hide"), t(i.children()[0]).addClass("vis-gc-vpanel-fieldgroup-img-rotate")) : (i.data("display", "show"), e = !0, t(i.children()[0]).removeClass("vis-gc-vpanel-fieldgroup-img-rotate")), u = f[h], r = 0; r < u.length; r++)o = s[u[r].getName()], u[r].tag = e, u[r].setVisible(e && o.getIsDisplayed(!0)) } function rt(f) { if (r == null && (r = ""), f == null || f.length == 0 || f.equals(r)) return !1; r = f; l(); var o = t("<span class='vis-gc-vpanel-fieldgroup-span'>" + f + "<\/span>"), s = t("<img class='vis-gc-vpanel-fieldgroup-img' src= '" + n.Application.contextUrl + "Areas/VIS/Images/base/fieldgrpdown.png' >"), e = t("<div class='vis-gc-vpanel-fieldgroup' data-name='" + f + "' data-display='show' >").append(s).append(o); u.remove(); c.remove(); i.prop("colspan", 8); i.append(e); e.on("click", it); return !0 } function b(n) { if (r != null && !r.equals("")) { var t = null; f[r] && (t = f[r]); t == null && (t = [], f[r] = t); t.push(n) } } var r = null, e = -2, a = -1, o = [], v = [], h, y = null, p, i, k, d, c, u, g, nt, w, s = {}, f = {}; tt(); this.addField = function (r, f) { var y, p, k, h, w; if (f.getIsLink()) { o[++a] = r; v.push(r); return } if ((y = n.VControlFactory.getLabel(f), y != null || r != null) && (p = f.getIsSameLine(), rt(f.getFieldGroup()) && (p = !1), p ? (++e, e > 2 ? (p = !1, l(), e = 0) : e < 0 && (l(), e = 0)) : (e = 0, l()), y != null && (p ? u.append(y.getControl()) : i.append(y.getControl()), f.getDescription().length > 0 && y.getControl().prop("title", f.getDescription()), b(y), s[y.getName()] = f, o[++a] = y), r != null)) { p ? u.append(r.getControl()) : i.append(r.getControl()); k = f.getVFormat(); switch (k) { case "": break; default: r.getControl().on("focusout", function (i) { var r = new RegExp(k); n.DisplayType.IsString(f.getDisplayType()) && t(i.target).val() != null && t(i.target).val().toString().trim().length > 0 && (r.test(t(i.target).val()) || n.ADialogUI.warn(n.Msg.getMsg("RegexFailed") + ":" + f.getHeader(), "", function () { t(i.target).focus() })) }) }if (h = r.getBtnCount(), h > 0) { while (h > 0) w = r.getBtn(h - 1), w != null && (p ? t("<td class='vis-gc-vpanel-table-td-fix30'>").append(w).insertAfter(u) : t("<td class='vis-gc-vpanel-table-td-fix30'>").append(w).insertAfter(i)), --h; h = -1; w = null } h = r.getBtnCount(); !p && f.getIsLongField() ? (c.remove(), u.remove(), i.prop("colspan", 8 - h), i.css("width", "100%"), e = 2) : p ? (u.prop("colspan", 3 - h), e = 2) : i.prop("colspan", 3 - h); h = 0; b(r); s[r.getName()] = f; o[++a] = r } }; this.getRoot = function () { return h }; this.getComponents = function () { return o }; this.getLinkComponents = function () { return v }; this.dispose = function () { var n, t; for (v.length = 0, v = null; o.length > 0;)o.pop().dispose(); for (n in s) s[n] = null, delete s[n]; s = null; for (t in f) f[t].length = 0, f[t] = null, delete f[n]; f = null; a = null; o = null; h.remove(); h = null; this.addField = null; l = null; b = null } }; r.prototype.ROW_ADD = "A"; r.prototype.ROW_DELETE = "D"; r.prototype.ROW_REFRESH = "F"; r.prototype.ROW_UNDO = "U"; r.prototype.setupGridTable = function (i, r, u, f, e, o) { var v, b, a, c, s, g, ft, p, nt, w; if (!e.getIsDisplayed(!0)) return 0; this.id = f; this.$container = u; this.mTab = e; this.AD_Table_ID = this.mTab.getAD_Table_ID(); var h = [], l = null, tt = r.length, k = 0, d = r.slice(0); for (d.sort(function (n, t) { return n.getMRSeqNo() - t.getMRSeqNo() }), v = -1, b = 0; b < d.length; b++)if (l = d[b], l != null) { a = l.getColumnName(); c = l.getDisplayType(); ++v; l.getIsKey() ? this.indexKeyColumn = v : a.equals("IsActive") ? this.indexActiveColumn = v : a.equals("Processed") ? this.indexProcessedColumn = v : a.equals("AD_Client_ID") ? this.indexClientColumn = v : a.equals("AD_Org_ID") && (this.indexOrgColumn = v); var y = l.getIsDisplayedMR ? l.getIsDisplayedMR() : l.getIsDisplayed(), it = l.getIsMandatory(!1), rt = l.getIsReadOnly(), ut = l.getIsEditable(!1); l.getIsHeading() || (s = { resizable: !0 }, s.gridField = l, (rt || !ut) && (s.readOnly = !0), s.caption = l.getHeader(), it && (s.caption += '<sup style="color:red;font-size: 11px;top: 0;">*<\/sup>'), s.field = a.toLowerCase(), s.hidden = !y, g = s.gridField.getColumnWidth(), s.size = g ? g + "px" : "100px", c == n.DisplayType.Amount ? (s.sortable = !0, s.customFormat = n.DisplayType.GetNumberFormat(c), s.render = function (n, t, i) { var r = h[i].field, u = n[r]; return parseFloat(h[i].customFormat.GetFormatedValue(u)).toLocaleString() }) : n.DisplayType.IsNumeric(c) ? (s.sortable = !0, s.customFormat = n.DisplayType.GetNumberFormat(c), s.render = function (n, t, i) { var r = h[i].field, u = n[r]; return Globalize.format(Number(h[i].customFormat.GetFormatedValue(u))) }) : c == n.DisplayType.YesNo ? (s.sortable = !0, ft = a.toLowerCase(), s.editable = { type: "checkbox" }) : c == n.DisplayType.String || c == n.DisplayType.Text || c == n.DisplayType.TextLong || c == n.DisplayType.Memo ? (s.sortable = !0, s.render = l.getIsEncryptedField() ? function (n, t, i) { var u = h[i].field, r = n[u]; return (n.changes && typeof n.changes[u] != "undefined" && (r = n.changes[u]), r = n[h[i].field], r || r === 0) ? r.replace(/\w|\W/g, "*") : "" } : function (n, t, i) { var u = h[i].field, r = n[u]; return (n.changes && typeof n.changes[u] != "undefined" && (r = n.changes[u]), r || r == 0) ? w2utils.encodeTags(r) : "" }) : n.DisplayType.IsLookup(c) || c == n.DisplayType.ID ? (s.sortable = !0, s.lookup = l.getLookup(), y && (s.render = function (n, t, i) { var r = h[i].lookup, u = h[i].field, e = n[u], f; return n.changes && typeof n.changes[u] != "undefined", r && (f = r.getDisplay(e, !0)), f })) : n.DisplayType.IsDate(c) ? (s.sortable = !0, s.displayType = c, s.render = function (t, i, r) { var o = h[r], e = h[r].field, u = t[e], f; return t.changes && typeof t.changes[e] != "undefined" && (u = t.changes[e]), u ? o.displayType == n.DisplayType.Date ? (f = new Date(u), f.setMinutes(f.getTimezoneOffset() + f.getMinutes()), u = f.toLocaleDateString()) : u = o.displayType == n.DisplayType.DateTime ? new Date(u).toLocaleString() : new Date(u).toTimeString() : u = "", u }) : c == n.DisplayType.Location || c == n.DisplayType.Locator ? (s.sortable = !0, s.lookup = l.getLookup(), y && (s.render = function (n, t, i) { var f = h[i].lookup, u = h[i].field, r = n[u]; return n.changes && typeof n.changes[u] != "undefined" && (r = n.changes[u]), f && (r = f.getDisplay(r, !0), r = w2utils.encodeTags(r)), r })) : c == n.DisplayType.AmtDimension ? (s.sortable = !0, s.lookup = l.getLookup(), y && (s.render = function (n, t, i) { var f = h[i].lookup, u = h[i].field, r = n[u]; return n.changes && typeof n.changes[u] != "undefined" && (r = n.changes[u]), f && (r = f.getDisplay(r, !0), r = w2utils.encodeTags(r)), r })) : c == n.DisplayType.ProductContainer ? (s.sortable = !0, s.lookup = l.getLookup(), y && (s.render = function (n, t, i) { var f = h[i].lookup, u = h[i].field, r = n[u]; return n.changes && typeof n.changes[u] != "undefined" && (r = n.changes[u]), f && (r = f.getDisplay(r, !0), r = w2utils.encodeTags(r)), r })) : c == n.DisplayType.Account || c == n.DisplayType.PAttribute ? (s.sortable = !0, s.lookup = l.getLookup(), y && (s.render = function (n, t, i) { var f = h[i].lookup, u = h[i].field, r = n[u]; return n.changes && typeof n.changes[u] != "undefined" && (r = n.changes[u]), f && (r = f.getDisplay(r, !0), r = w2utils.encodeTags(r)), r })) : c == n.DisplayType.PAttribute ? (s.sortable = !0, s.render = "int") : c == n.DisplayType.Button ? s.sortable = !0 : c == n.DisplayType.Image ? (s.sortable = !0, s.render = function (t, i, r) { var u = h[r].field, f = t[u]; return (t.changes && typeof t.changes[u] != "undefined" && (f = t.changes[u]), !f) ? "-" : n.Msg.getElement1("AD_Image_ID") + "-" + f }) : n.DisplayType.IsLOB(c) ? (s.sortable = !0, s.render = function (n, t, i) { var u = h[i].field, r = n[u]; return n.changes && typeof n.changes[u] != "undefined" && (r = n.changes[u]), r || (r = ""), "#" + r.toString().length }) : (s.sortable = !0, s.render = function (n, t, i) { var u = h[i].field, r = n[u]; return (n.changes && typeof n.changes[u] != "undefined" && (r = n.changes[u]), r || r == 0) ? w2utils.encodeTags(r) : "" }), s.hidden || k++ , h.push(s), s.columnName = a, p = n.VControlFactory.getControl(e, l, !1, !1, !1), p.setReadOnly(!1), s.editable || (s.editable = { type: "custom", ctrl: p }), p.addVetoableChangeListener(o), p instanceof n.Controls.VButton && p.addActionListner(i)) } if (k > 0) { nt = Math.floor(100 / k); for (w in h) h[w].hidden || !h[w].size < 0 && (h[w].size = nt + "%", h[w].min = 100) } return this.grid = t().w2grid({ name: f, autoLoad: !1, columns: h, records: [], show: { toolbar: !1, columnHeaders: !0, lineNumbers: !1, selectColumn: !0, toolbarReload: !1, toolbarColumns: !0, toolbarSearch: !1, toolbarAdd: !1, toolbarDelete: !1, toolbarSave: !1, selectionBorder: !1, recordTitles: !1 }, recordHeight: 36, onSelect: this.onSelectLocal, onUnselect: this.onUnSelect, onSort: this.onSort, onClick: this.onSingleClick, onDblClick: this.onClick, onEditField: this.onEditField, onChange: this.onChange, onRowAdd: this.onRowAdd }), tt }; r.prototype.get = function (n, t) { return this.grid.get(n, t) }; r.prototype.activate = function () { this.grid && !this.rendred && (this.$container.w2render(this.grid.name), this.rendred = !0) }; r.prototype.setReadOnly = function (n) { this.readOnly = n }; r.prototype.getGrid = function () { return this.grid }; r.prototype.select = function (n) { var t = this.grid.getSelection(); if (t.indexOf(n) == -1) { if (t.length == 1) this.grid.unselect(t[0]); else if (t.length > 1) while (t.length > 0) this.grid.unselect(t.pop()); return this.grid.select(n) } }; r.prototype.add = function (n) { this.grid.add(n) }; r.prototype.clear = function () { this.grid.clear(!0); this.grid.reset() }; r.prototype.refresh = function () { this.grid.refresh() }; r.prototype.resize = function () { this.grid.resize() }; r.prototype.setRow = function (n) { isNaN(n) ? this.grid.set(n.recid, n) : this.grid.set(n) }; r.prototype.refreshRow = function (n, t) { if (!(this.grid.records.length < 1)) { var i = this.mTab.getCurrentRow(); i < 0 || (typeof n != "undefined" && (i = n), this.paintRow(t ? this.grid.get(n, !0) : i), this.grid.clearRowChanges(t ? n : this.grid.records[i].recid)) } }; r.prototype.refreshCells = function () { if (!(this.grid.records.length < 1)) { var n = this.mTab.getCurrentRow(); this.paintRow(n); this.grid.refreshRow(this.grid.records[n].recid) } }; r.prototype.refreshUndo = function () { if (!(this.grid.records.length < 1)) { var n = this.mTab.getCurrentRow(); this.grid.clearRowChanges(this.grid.records[n].recid); this.paintRow(n); this.grid.refreshRow(this.grid.records[n].recid) } }; r.prototype.getSelection = function (n) { return this.grid.getSelection(n) }; r.prototype.getSelectedRows = function () { for (var t = this.grid.getSelection(!0), i = [], n = 0, r = t.length; n < r; n++)i.push(this.grid.records[t[n]]); return i }; r.prototype.getColumnNames = function () { for (var t = this.grid.columns, i = {}, n = 0, r = t.length; n < r; n++)i[t[n].columnName] = t[n].caption; return i }; r.prototype.scrollInView = function (n) { this.grid.scrollIntoView(n) }; r.prototype.tableModelChanged = function (t, i, r) { var u, f, e; if (this.blockSelect = !0, t === n.VTable.prototype.ROW_REFRESH) this.setRow(i), this.refreshRow(i.recid, !0); else { if (u = null, t === n.VTable.prototype.ROW_UNDO) this.grid.unselect(i), this.grid.remove(i), r >= this.grid.records.length - 1 && this.grid.records.length > 0 ? (this.blockSelect = !1, u = this.grid.records[this.grid.records.length - 1].recid) : r < this.grid.records.length && (u = this.grid.records[r].recid); else if (t === n.VTable.prototype.ROW_ADD) this.grid.records.splice(r, 0, i), u = i.recid, this.grid.refresh(), this.blockSelect = !0; else if (t === n.VTable.prototype.ROW_DELETE) { for (f = i.slice(); f.length > 0;)e = f.pop(), this.grid.unselect(e), this.grid.remove(e); isNaN(r) ? u = r[0] : this.grid.records.length > 0 && (u = this.grid.records[this.grid.records.length - 1 < r ? this.grid.records.length - 1 : r].recid) } u && this.select(u) } this.blockSelect = !1 }; r.prototype.setDefaultFocus = function (n) { var t = this.grid.getSelection(), i = this.grid.getColumn(n.toLower(), !0); t && t.length > 0 && this.grid.dblClick(t[0], { metaKey: !0 }) }; r.prototype.dispose = function () { var n, t; this.grid.off("select", this.onSelect); this.grid.off("sort", this.onSort); this.grid.off("click", this.onClick); this.onSelect = null; this.onSort = null; n = this.grid.columns; for (t in n) n[t].editable.ctrl && n[t].editable.ctrl.dispose(); this.grid.destroy(); this.grid = null; this.id = null; this.$container = null; this.rendered = null; this.disposeComponenet() }; e.prototype.tableModelChanged = function (t, i, r) { var u = null, f, e; if (t === n.VTable.prototype.ROW_REFRESH) u = i.recid ? i.recid : i; else if (t === n.VTable.prototype.ROW_UNDO) this.getBody().find("div.vis-cv-card[name~=vc_" + i + "]").remove(); else if (t === n.VTable.prototype.ROW_DELETE) { for (f = i.slice(); f.length > 0;)e = f.pop(), this.getBody().find("div.vis-cv-card[name~=vc_" + e + "]").remove(); isNaN(r) && (u = r[0]) } else t === n.VTable.prototype.ROW_ADD && (u = i.recid); u && this.navigate(u) }; e.prototype.setupCardView = function (t, i, r) { this.mTab = i; var u = this; n.dataContext.getCardViewInfo(i.getAD_Window_ID(), i.getAD_Tab_ID(), function (n) { u.setCardViewData(n) }); r.append(this.getHeader()); r.append(this.getRoot()) }; e.prototype.setCardViewData = function (n) { var i, t, r; if (this.hasIncludedCols = !1, this.fields = [], this.cGroup = null, this.cConditions = [], n) for (this.AD_CardView_ID = n.AD_CardView_ID, t = this.mTab.getFieldById(n.FieldGroupID), t && (this.cGroup = t), this.cConditions = n.Conditions, i = 0; i < n.IncludedCols.length; i++)t = this.mTab.getFieldById(n.IncludedCols[i]), t && this.fields.push(t), this.hasIncludedCols = !0; this.fields.length < 1 && this.fields.length < 1 && (t = this.mTab.getField("Name"), t && this.fields.push(t), t = this.mTab.getField("Description"), t && this.fields.push(t), t = this.mTab.getField("Help"), t && this.fields.push(t)); for (r in this.cGroupInfo) this.cGroupInfo[r].records.length = 0; this.cGroupInfo = {}; this.grpCount = 0; this.isProcessed = !1 }; e.prototype.createGroups = function () { var f, t, u, r, i; if (this.isProcessed) { for (f in this.cGroupInfo) this.cGroupInfo[f].records = []; return } if (this.cGroup) if (t = this.cGroup, t) { if (t.getDisplayType() == n.DisplayType.YesNo) this.cGroupInfo["true"] = { name: "Yes", records: [] }, this.cGroupInfo["false"] = { name: "No", records: [] }, this.grpCount = 2; else if (n.DisplayType.IsLookup(t.getDisplayType()) && t.getLookup()) for (u = t.getLookup(), u.fillCombobox(!0, !0, !0, !1), r = u.data, i = 0; i < r.length; i++)this.cGroupInfo[r[i].Key] = { name: r[i].Name, records: [] }, this.grpCount += 1; this.setHeader(t.getHeader()) } else this.setHeader(""); this.grpCount < 1 && (this.cGroupInfo.All = { name: n.Msg.getMsg("All"), records: [] }, this.grpCount = 1); this.isProcessed = !0 }; e.prototype.refreshUI = function (n) { var u, r, t, f, i; for (this.createGroups(), u = this.mTab.getTableModel().mSortList, r = this.getBody(); this.groupCtrls.length > 0;)this.groupCtrls.pop().dispose(); if (this.groupCtrls.length = 0, r.empty(), t = null, this.grpCount == 1) { f = ""; for (i in this.cGroupInfo) { f = this.cGroupInfo[i].name; break } t = new d(!0, u, f, this.fields, this.cConditions); this.groupCtrls.push(t); r.append(t.getRoot()) } else { this.filterRecord(u); for (i in this.cGroupInfo) t = new d(this.grpCount === 1, this.cGroupInfo[i].records, this.cGroupInfo[i].name, this.fields, this.cConditions), this.groupCtrls.push(t), r.append(t.getRoot()) } this.calculateWidth(n) }; e.prototype.filterRecord = function (n) { for (var e = n.length, o = this.cGroup.getColumnName().toLowerCase(), i = null, u = null, t, f, r = 0; r < e; r++)i = n[r], u = i[o], this.cGroupInfo[u] ? this.cGroupInfo[u].records.push(i) : (this.cGroupInfo.Other__1 || (this.cGroupInfo.Other__1 = { name: "Others", records: [] }, this.grpCount += 1), this.cGroupInfo.Other__1.records.push(i)); t = []; for (f in this.cGroupInfo) this.cGroupInfo[f].records.length < 1 && t.push(f); for (this.grpCount -= t.length; t.length > 0;)delete this.cGroupInfo[t.pop()] }; e.prototype.dispose = function () { this.dC() }; d.prototype.dispose = function () { this.dC() }; l.prototype.evaluate = function (t) { for (var i = null, r = 0; r < t.length; r++)(i = t[r], i.ConditionValue) && n.Evaluator.evaluateLogic(this, i.ConditionValue) && this.setColor(i.Color, i.FColor) }; l.prototype.getValueAsString = function (n) { var t = this.record[n.toLowerCase()]; return t ? (t === !0 ? t = "Y" : t && t.toString().endsWith(".000Z") && (t = t.replace(".000Z", "Z")), t = t.toString()) : t === !1 ? t = "N" : t === 0 && (t = "0"), t }; l.prototype.dispose = function () { this.dC() }; a.prototype.setupMapView = function (n, t, i, r) { var u, f, e; for (this.mapFields = [], u = i.getMapColumns(), f = 0; f < u.length; f++)e = i.getField(u[f]), e && this.mapFields.push(e); this.cols = u; this.gc = t; this.aPanel = n; this.mapcols = {}; this.curIndex = 0; r.append(this.getRoot()) }; a.prototype.refreshUI = function () { var u = this.gc.getSelectedRows(), o = u.length, s, n, t, i, r; if (!(u.length < 1) && !(this.cols.length < 1)) { for (s = [[]], n = 0; n < this.cols.length; n++) { var h = this.cols[n], f = this.mapFields[n].getLookup(), e = []; for (t = 0; t < o; t++)i = u[t][h.toLowerCase()], i && (r = f.getLatLng(i), r && (r.msg = f.getDisplay(i), e.push(r))); this.mapcols[n] = e } this.setMapData(this.mapcols[this.curIndex]) } }; a.prototype.dispose = function () { this.dc() }; n.RecordInfo = function (i, r) { function c() { e = null; s = null; u.remove(); u = null } var e = null, o = i, s = n.Logging.VLogger.getVLogger("VIS.RecordInfo"), u = t("<div style='min-width:550px;max-width:600px'>"), f = null, h = { CreatedBy: r.CreatedBy, Created: r.Created, Updated: r.Updated, UpdatedBy: r.UpdatedBy, Info: r.Info, AD_Table_ID: r.AD_Table_ID, Record_ID: r.Record_ID }; n.dataContext.getJSONData(n.Application.contextUrl + "JsonData/GetRecordInfo", { dse: h }, function (n) { var s, h, f, c, o; if (u.html("<span>" + n.Info + "<\/span>"), n.ShowGrid) { s = t("<table class='vis-advancedSearchTable'>"); h = t("<div class='vis-advancedSearchTableWrap vis-table-responsive' style='max-height:200px;overflow-y:auto'>").append(s); u.append(h); var i = "", e = "", r = null; for (f = 0, c = n.Rows.length; f < c; f++) { if (f == 0) { for (i += '<thead><tr class="vis-advancedSearchTableHead">', o = 0; o < n.Headers.length; o++)i += "<th>" + n.Headers[o] + "<\/th>"; i += "<\/tr><\/thead><tbody>" } e = '<tr class="vis-advancedSearchTableRow">'; r = n.Rows[f]; e += "<td>" + r.AD_Column_ID + "<\/td><td>" + r.NewValue + "<\/td><td>" + r.OldValue + "<\/td><td>" + r.UpdatedBy + "<\/td><td>" + Globalize.format(new Date(r.Updated), "f") + "<\/td>"; e += "<\/tr>"; i += e } i += "<\/tbody>"; s.html(i) } }); this.show = function () { f = new n.ChildDialog; f.setTitle(o); f.setContent(u); f.close = function () { c() }; f.show() } }; n.AWindow = u; n.AppsAction = f; n.APanel = i; n.VTable = r; n.VCardView = e; n.VMapView = a })(VIS, jQuery)